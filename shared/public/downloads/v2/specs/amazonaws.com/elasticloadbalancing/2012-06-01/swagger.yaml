swagger: '2.0'
schemes:
  - http
host: elasticloadbalancing.amazonaws.com
basePath: /
x-hasEquivalentPaths: true
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
  description: '<fullname>Elastic Load Balancing</fullname> <p>A load balancer distributes incoming traffic across your EC2 instances. This enables you to increase the availability of your application. The load balancer also monitors the health of its registered instances and ensures that it routes traffic only to healthy instances. You configure your load balancer to accept incoming traffic by specifying one or more listeners, which are configured with a protocol and port number for connections from clients to the load balancer and a protocol and port number for connections from the load balancer to the instances.</p> <p>Elastic Load Balancing supports two types of load balancers: Classic Load Balancers and Application Load Balancers (new). A Classic Load Balancer makes routing and load balancing decisions either at the transport layer (TCP/SSL) or the application layer (HTTP/HTTPS), and supports either EC2-Classic or a VPC. An Application Load Balancer makes routing and load balancing decisions at the application layer (HTTP/HTTPS), supports path-based routing, and can route requests to one or more ports on each EC2 instance or container instance in your virtual private cloud (VPC). For more information, see the <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/userguide/what-is-load-balancing.html">Elastic Load Balancing User Guide</a>.</p> <p>This reference covers the 2012-06-01 API, which supports Classic Load Balancers. The 2015-12-01 API supports Application Load Balancers.</p> <p>To get started, create a load balancer with one or more listeners using <a>CreateLoadBalancer</a>. Register your instances with the load balancer using <a>RegisterInstancesWithLoadBalancer</a>.</p> <p>All Elastic Load Balancing operations are <i>idempotent</i>, which means that they complete at most one time. If you repeat an operation, it succeeds with a 200 OK response code.</p>'
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: Elastic Load Balancing
  version: '2012-06-01'
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://api.apis.guru/v2/cache/logo/https_media.amazonwebservices.com_blog_2007_big_pbaws_logo_300px.jpg'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/elasticloadbalancing-2012-06-01.normal.json'
      x-apisguru-direct: true
  x-preferred: false
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: elasticloadbalancing
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/elasticloadbalancing/'
consumes: []
produces: []
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
parameters:
  Action:
    in: header
    name: Action
    required: true
    type: string
  Version:
    in: header
    name: Version
    required: true
    type: string
  X-Amz-Algorithm:
    in: header
    name: X-Amz-Algorithm
    required: false
    type: string
  X-Amz-Content-Sha256:
    in: header
    name: X-Amz-Content-Sha256
    required: false
    type: string
  X-Amz-Credential:
    in: header
    name: X-Amz-Credential
    required: false
    type: string
  X-Amz-Date:
    in: header
    name: X-Amz-Date
    required: false
    type: string
  X-Amz-Security-Token:
    in: header
    name: X-Amz-Security-Token
    required: false
    type: string
  X-Amz-Signature:
    in: header
    name: X-Amz-Signature
    required: false
    type: string
  X-Amz-SignedHeaders:
    in: header
    name: X-Amz-SignedHeaders
    required: false
    type: string
paths:
  /:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Adds the specified tags to the specified load balancer. Each load balancer can have a maximum of 10 tags.</p> <p>Each tag consists of a key and an optional value. If a tag with the same key is already associated with the load balancer, <code>AddTags</code> updates its value.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/add-remove-tags.html">Tag Your Classic Load Balancer</a> in the <i>Classic Load Balancer Guide</i>.</p>'
      operationId: AddTags
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AddTagsInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AddTagsOutput'
        '480':
          description: AccessPointNotFoundException
          schema:
            $ref: '#/definitions/AccessPointNotFoundException'
        '481':
          description: TooManyTagsException
          schema:
            $ref: '#/definitions/TooManyTagsException'
        '482':
          description: DuplicateTagKeysException
          schema:
            $ref: '#/definitions/DuplicateTagKeysException'
  '/#ApplySecurityGroupsToLoadBalancer':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Associates one or more security groups with your load balancer in a virtual private cloud (VPC). The specified security groups override the previously associated security groups.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-security-groups.html#elb-vpc-security-groups">Security Groups for Load Balancers in a VPC</a> in the <i>Classic Load Balancer Guide</i>.</p>'
      operationId: ApplySecurityGroupsToLoadBalancer
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ApplySecurityGroupsToLoadBalancerInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ApplySecurityGroupsToLoadBalancerOutput'
        '480':
          description: AccessPointNotFoundException
          schema:
            $ref: '#/definitions/AccessPointNotFoundException'
        '481':
          description: InvalidConfigurationRequestException
          schema:
            $ref: '#/definitions/InvalidConfigurationRequestException'
        '482':
          description: InvalidSecurityGroupException
          schema:
            $ref: '#/definitions/InvalidSecurityGroupException'
  '/#AttachLoadBalancerToSubnets':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Adds one or more subnets to the set of configured subnets for the specified load balancer.</p> <p>The load balancer evenly distributes requests across all registered subnets. For more information, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-manage-subnets.html">Add or Remove Subnets for Your Load Balancer in a VPC</a> in the <i>Classic Load Balancer Guide</i>.</p>'
      operationId: AttachLoadBalancerToSubnets
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AttachLoadBalancerToSubnetsInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AttachLoadBalancerToSubnetsOutput'
        '480':
          description: AccessPointNotFoundException
          schema:
            $ref: '#/definitions/AccessPointNotFoundException'
        '481':
          description: InvalidConfigurationRequestException
          schema:
            $ref: '#/definitions/InvalidConfigurationRequestException'
        '482':
          description: SubnetNotFoundException
          schema:
            $ref: '#/definitions/SubnetNotFoundException'
        '483':
          description: InvalidSubnetException
          schema:
            $ref: '#/definitions/InvalidSubnetException'
  '/#ConfigureHealthCheck':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Specifies the health check settings to use when evaluating the health state of your EC2 instances.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-healthchecks.html">Configure Health Checks for Your Load Balancer</a> in the <i>Classic Load Balancer Guide</i>.</p>'
      operationId: ConfigureHealthCheck
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ConfigureHealthCheckInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ConfigureHealthCheckOutput'
        '480':
          description: AccessPointNotFoundException
          schema:
            $ref: '#/definitions/AccessPointNotFoundException'
  '/#CreateAppCookieStickinessPolicy':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Generates a stickiness policy with sticky session lifetimes that follow that of an application-generated cookie. This policy can be associated only with HTTP/HTTPS listeners.</p> <p>This policy is similar to the policy created by <a>CreateLBCookieStickinessPolicy</a>, except that the lifetime of the special Elastic Load Balancing cookie, <code>AWSELB</code>, follows the lifetime of the application-generated cookie specified in the policy configuration. The load balancer only inserts a new stickiness cookie when the application response includes a new application cookie.</p> <p>If the application cookie is explicitly removed or expires, the session stops being sticky until a new application cookie is issued.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-sticky-sessions.html#enable-sticky-sessions-application">Application-Controlled Session Stickiness</a> in the <i>Classic Load Balancer Guide</i>.</p>'
      operationId: CreateAppCookieStickinessPolicy
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateAppCookieStickinessPolicyInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateAppCookieStickinessPolicyOutput'
        '480':
          description: AccessPointNotFoundException
          schema:
            $ref: '#/definitions/AccessPointNotFoundException'
        '481':
          description: DuplicatePolicyNameException
          schema:
            $ref: '#/definitions/DuplicatePolicyNameException'
        '482':
          description: TooManyPoliciesException
          schema:
            $ref: '#/definitions/TooManyPoliciesException'
        '483':
          description: InvalidConfigurationRequestException
          schema:
            $ref: '#/definitions/InvalidConfigurationRequestException'
  '/#CreateLBCookieStickinessPolicy':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Generates a stickiness policy with sticky session lifetimes controlled by the lifetime of the browser (user-agent) or a specified expiration period. This policy can be associated only with HTTP/HTTPS listeners.</p> <p>When a load balancer implements this policy, the load balancer uses a special cookie to track the instance for each request. When the load balancer receives a request, it first checks to see if this cookie is present in the request. If so, the load balancer sends the request to the application server specified in the cookie. If not, the load balancer sends the request to a server that is chosen based on the existing load-balancing algorithm.</p> <p>A cookie is inserted into the response for binding subsequent requests from the same user to that server. The validity of the cookie is based on the cookie expiration time, which is specified in the policy configuration.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-sticky-sessions.html#enable-sticky-sessions-duration">Duration-Based Session Stickiness</a> in the <i>Classic Load Balancer Guide</i>.</p>'
      operationId: CreateLBCookieStickinessPolicy
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateLBCookieStickinessPolicyInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateLBCookieStickinessPolicyOutput'
        '480':
          description: AccessPointNotFoundException
          schema:
            $ref: '#/definitions/AccessPointNotFoundException'
        '481':
          description: DuplicatePolicyNameException
          schema:
            $ref: '#/definitions/DuplicatePolicyNameException'
        '482':
          description: TooManyPoliciesException
          schema:
            $ref: '#/definitions/TooManyPoliciesException'
        '483':
          description: InvalidConfigurationRequestException
          schema:
            $ref: '#/definitions/InvalidConfigurationRequestException'
  '/#CreateLoadBalancer':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Creates a Classic Load Balancer.</p> <p>You can add listeners, security groups, subnets, and tags when you create your load balancer, or you can add them later using <a>CreateLoadBalancerListeners</a>, <a>ApplySecurityGroupsToLoadBalancer</a>, <a>AttachLoadBalancerToSubnets</a>, and <a>AddTags</a>.</p> <p>To describe your current load balancers, see <a>DescribeLoadBalancers</a>. When you are finished with a load balancer, you can delete it using <a>DeleteLoadBalancer</a>.</p> <p>You can create up to 20 load balancers per region per account. You can request an increase for the number of load balancers for your account. For more information, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-limits.html">Limits for Your Classic Load Balancer</a> in the <i>Classic Load Balancer Guide</i>.</p>'
      operationId: CreateLoadBalancer
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateAccessPointInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateAccessPointOutput'
        '480':
          description: DuplicateAccessPointNameException
          schema:
            $ref: '#/definitions/DuplicateAccessPointNameException'
        '481':
          description: TooManyAccessPointsException
          schema:
            $ref: '#/definitions/TooManyAccessPointsException'
        '482':
          description: CertificateNotFoundException
          schema:
            $ref: '#/definitions/CertificateNotFoundException'
        '483':
          description: InvalidConfigurationRequestException
          schema:
            $ref: '#/definitions/InvalidConfigurationRequestException'
        '484':
          description: SubnetNotFoundException
          schema:
            $ref: '#/definitions/SubnetNotFoundException'
        '485':
          description: InvalidSubnetException
          schema:
            $ref: '#/definitions/InvalidSubnetException'
        '486':
          description: InvalidSecurityGroupException
          schema:
            $ref: '#/definitions/InvalidSecurityGroupException'
        '487':
          description: InvalidSchemeException
          schema:
            $ref: '#/definitions/InvalidSchemeException'
        '488':
          description: TooManyTagsException
          schema:
            $ref: '#/definitions/TooManyTagsException'
        '489':
          description: DuplicateTagKeysException
          schema:
            $ref: '#/definitions/DuplicateTagKeysException'
        '490':
          description: UnsupportedProtocolException
          schema:
            $ref: '#/definitions/UnsupportedProtocolException'
  '/#CreateLoadBalancerListeners':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Creates one or more listeners for the specified load balancer. If a listener with the specified port does not already exist, it is created; otherwise, the properties of the new listener must match the properties of the existing listener.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-listener-config.html">Listeners for Your Classic Load Balancer</a> in the <i>Classic Load Balancer Guide</i>.</p>'
      operationId: CreateLoadBalancerListeners
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateLoadBalancerListenerInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateLoadBalancerListenerOutput'
        '480':
          description: AccessPointNotFoundException
          schema:
            $ref: '#/definitions/AccessPointNotFoundException'
        '481':
          description: DuplicateListenerException
          schema:
            $ref: '#/definitions/DuplicateListenerException'
        '482':
          description: CertificateNotFoundException
          schema:
            $ref: '#/definitions/CertificateNotFoundException'
        '483':
          description: InvalidConfigurationRequestException
          schema:
            $ref: '#/definitions/InvalidConfigurationRequestException'
        '484':
          description: UnsupportedProtocolException
          schema:
            $ref: '#/definitions/UnsupportedProtocolException'
  '/#CreateLoadBalancerPolicy':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Creates a policy with the specified attributes for the specified load balancer.</p> <p>Policies are settings that are saved for your load balancer and that can be applied to the listener or the application server, depending on the policy type.</p>'
      operationId: CreateLoadBalancerPolicy
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateLoadBalancerPolicyInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateLoadBalancerPolicyOutput'
        '480':
          description: AccessPointNotFoundException
          schema:
            $ref: '#/definitions/AccessPointNotFoundException'
        '481':
          description: PolicyTypeNotFoundException
          schema:
            $ref: '#/definitions/PolicyTypeNotFoundException'
        '482':
          description: DuplicatePolicyNameException
          schema:
            $ref: '#/definitions/DuplicatePolicyNameException'
        '483':
          description: TooManyPoliciesException
          schema:
            $ref: '#/definitions/TooManyPoliciesException'
        '484':
          description: InvalidConfigurationRequestException
          schema:
            $ref: '#/definitions/InvalidConfigurationRequestException'
  '/#DeleteLoadBalancer':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Deletes the specified load balancer.</p> <p>If you are attempting to recreate a load balancer, you must reconfigure all settings. The DNS name associated with a deleted load balancer are no longer usable. The name and associated DNS record of the deleted load balancer no longer exist and traffic sent to any of its IP addresses is no longer delivered to your instances.</p> <p>If the load balancer does not exist or has already been deleted, the call to <code>DeleteLoadBalancer</code> still succeeds.</p>'
      operationId: DeleteLoadBalancer
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteAccessPointInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteAccessPointOutput'
  '/#DeleteLoadBalancerListeners':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Deletes the specified listeners from the specified load balancer.
      operationId: DeleteLoadBalancerListeners
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteLoadBalancerListenerInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteLoadBalancerListenerOutput'
        '480':
          description: AccessPointNotFoundException
          schema:
            $ref: '#/definitions/AccessPointNotFoundException'
  '/#DeleteLoadBalancerPolicy':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Deletes the specified policy from the specified load balancer. This policy must not be enabled for any listeners.
      operationId: DeleteLoadBalancerPolicy
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteLoadBalancerPolicyInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteLoadBalancerPolicyOutput'
        '480':
          description: AccessPointNotFoundException
          schema:
            $ref: '#/definitions/AccessPointNotFoundException'
        '481':
          description: InvalidConfigurationRequestException
          schema:
            $ref: '#/definitions/InvalidConfigurationRequestException'
  '/#DeregisterInstancesFromLoadBalancer':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Deregisters the specified instances from the specified load balancer. After the instance is deregistered, it no longer receives traffic from the load balancer.</p> <p>You can use <a>DescribeLoadBalancers</a> to verify that the instance is deregistered from the load balancer.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-deregister-register-instances.html">Register or De-Register EC2 Instances</a> in the <i>Classic Load Balancer Guide</i>.</p>'
      operationId: DeregisterInstancesFromLoadBalancer
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeregisterEndPointsInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeregisterEndPointsOutput'
        '480':
          description: AccessPointNotFoundException
          schema:
            $ref: '#/definitions/AccessPointNotFoundException'
        '481':
          description: InvalidEndPointException
          schema:
            $ref: '#/definitions/InvalidEndPointException'
  '/#DescribeAccountLimits':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Describes the current Elastic Load Balancing resource limits for your AWS account.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-limits.html">Limits for Your Classic Load Balancer</a> in the <i>Classic Load Balancer Guide</i>.</p>'
      operationId: DescribeAccountLimits
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeAccountLimitsInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeAccountLimitsOutput'
  '/#DescribeInstanceHealth':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Describes the state of the specified instances with respect to the specified load balancer. If no instances are specified, the call describes the state of all instances that are currently registered with the load balancer. If instances are specified, their state is returned even if they are no longer registered with the load balancer. The state of terminated instances is not returned.'
      operationId: DescribeInstanceHealth
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeEndPointStateInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeEndPointStateOutput'
        '480':
          description: AccessPointNotFoundException
          schema:
            $ref: '#/definitions/AccessPointNotFoundException'
        '481':
          description: InvalidEndPointException
          schema:
            $ref: '#/definitions/InvalidEndPointException'
      x-waiters:
        - acceptors:
            - argument: 'InstanceStates[].State'
              expected: OutOfService
              matcher: pathAll
              state: success
            - expected: InvalidInstance
              matcher: error
              state: success
          delay: 15
          maxAttempts: 40
          operation: DescribeInstanceHealth
        - acceptors:
            - argument: 'InstanceStates[].State'
              expected: InService
              matcher: pathAny
              state: success
          delay: 15
          maxAttempts: 40
          operation: DescribeInstanceHealth
        - acceptors:
            - argument: 'InstanceStates[].State'
              expected: InService
              matcher: pathAll
              state: success
            - expected: InvalidInstance
              matcher: error
              state: retry
          delay: 15
          maxAttempts: 40
          operation: DescribeInstanceHealth
  '/#DescribeLoadBalancerAttributes':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Describes the attributes for the specified load balancer.
      operationId: DescribeLoadBalancerAttributes
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeLoadBalancerAttributesInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeLoadBalancerAttributesOutput'
        '480':
          description: AccessPointNotFoundException
          schema:
            $ref: '#/definitions/AccessPointNotFoundException'
        '481':
          description: LoadBalancerAttributeNotFoundException
          schema:
            $ref: '#/definitions/LoadBalancerAttributeNotFoundException'
  '/#DescribeLoadBalancerPolicies':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Describes the specified policies.</p> <p>If you specify a load balancer name, the action returns the descriptions of all policies created for the load balancer. If you specify a policy name associated with your load balancer, the action returns the description of that policy. If you don''t specify a load balancer name, the action returns descriptions of the specified sample policies, or descriptions of all sample policies. The names of the sample policies have the <code>ELBSample-</code> prefix.</p>'
      operationId: DescribeLoadBalancerPolicies
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeLoadBalancerPoliciesInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeLoadBalancerPoliciesOutput'
        '480':
          description: AccessPointNotFoundException
          schema:
            $ref: '#/definitions/AccessPointNotFoundException'
        '481':
          description: PolicyNotFoundException
          schema:
            $ref: '#/definitions/PolicyNotFoundException'
  '/#DescribeLoadBalancerPolicyTypes':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Describes the specified load balancer policy types or all load balancer policy types.</p> <p>The description of each type indicates how it can be used. For example, some policies can be used only with layer 7 listeners, some policies can be used only with layer 4 listeners, and some policies can be used only with your EC2 instances.</p> <p>You can use <a>CreateLoadBalancerPolicy</a> to create a policy configuration for any of these policy types. Then, depending on the policy type, use either <a>SetLoadBalancerPoliciesOfListener</a> or <a>SetLoadBalancerPoliciesForBackendServer</a> to set the policy.</p>'
      operationId: DescribeLoadBalancerPolicyTypes
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeLoadBalancerPolicyTypesInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeLoadBalancerPolicyTypesOutput'
        '480':
          description: PolicyTypeNotFoundException
          schema:
            $ref: '#/definitions/PolicyTypeNotFoundException'
  '/#DescribeLoadBalancers':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Describes the specified the load balancers. If no load balancers are specified, the call describes all of your load balancers.'
      operationId: DescribeLoadBalancers
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeAccessPointsInput'
        - description: Pagination token
          in: query
          name: Marker
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeAccessPointsOutput'
        '480':
          description: AccessPointNotFoundException
          schema:
            $ref: '#/definitions/AccessPointNotFoundException'
        '481':
          description: DependencyThrottleException
          schema:
            $ref: '#/definitions/DependencyThrottleException'
  '/#DescribeTags':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Describes the tags associated with the specified load balancers.
      operationId: DescribeTags
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeTagsInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeTagsOutput'
        '480':
          description: AccessPointNotFoundException
          schema:
            $ref: '#/definitions/AccessPointNotFoundException'
  '/#DetachLoadBalancerFromSubnets':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Removes the specified subnets from the set of configured subnets for the load balancer.</p> <p>After a subnet is removed, all EC2 instances registered with the load balancer in the removed subnet go into the <code>OutOfService</code> state. Then, the load balancer balances the traffic among the remaining routable subnets.</p>'
      operationId: DetachLoadBalancerFromSubnets
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DetachLoadBalancerFromSubnetsInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DetachLoadBalancerFromSubnetsOutput'
        '480':
          description: AccessPointNotFoundException
          schema:
            $ref: '#/definitions/AccessPointNotFoundException'
        '481':
          description: InvalidConfigurationRequestException
          schema:
            $ref: '#/definitions/InvalidConfigurationRequestException'
  '/#DisableAvailabilityZonesForLoadBalancer':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Removes the specified Availability Zones from the set of Availability Zones for the specified load balancer.</p> <p>There must be at least one Availability Zone registered with a load balancer at all times. After an Availability Zone is removed, all instances registered with the load balancer that are in the removed Availability Zone go into the <code>OutOfService</code> state. Then, the load balancer attempts to equally balance the traffic among its remaining Availability Zones.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/enable-disable-az.html">Add or Remove Availability Zones</a> in the <i>Classic Load Balancer Guide</i>.</p>'
      operationId: DisableAvailabilityZonesForLoadBalancer
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/RemoveAvailabilityZonesInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RemoveAvailabilityZonesOutput'
        '480':
          description: AccessPointNotFoundException
          schema:
            $ref: '#/definitions/AccessPointNotFoundException'
        '481':
          description: InvalidConfigurationRequestException
          schema:
            $ref: '#/definitions/InvalidConfigurationRequestException'
  '/#EnableAvailabilityZonesForLoadBalancer':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Adds the specified Availability Zones to the set of Availability Zones for the specified load balancer.</p> <p>The load balancer evenly distributes requests across all its registered Availability Zones that contain instances.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/enable-disable-az.html">Add or Remove Availability Zones</a> in the <i>Classic Load Balancer Guide</i>.</p>'
      operationId: EnableAvailabilityZonesForLoadBalancer
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AddAvailabilityZonesInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AddAvailabilityZonesOutput'
        '480':
          description: AccessPointNotFoundException
          schema:
            $ref: '#/definitions/AccessPointNotFoundException'
  '/#ModifyLoadBalancerAttributes':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Modifies the attributes of the specified load balancer.</p> <p>You can modify the load balancer attributes, such as <code>AccessLogs</code>, <code>ConnectionDraining</code>, and <code>CrossZoneLoadBalancing</code> by either enabling or disabling them. Or, you can modify the load balancer attribute <code>ConnectionSettings</code> by specifying an idle connection timeout value for your load balancer.</p> <p>For more information, see the following in the <i>Classic Load Balancer Guide</i>:</p> <ul> <li> <p> <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/enable-disable-crosszone-lb.html">Cross-Zone Load Balancing</a> </p> </li> <li> <p> <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/config-conn-drain.html">Connection Draining</a> </p> </li> <li> <p> <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/access-log-collection.html">Access Logs</a> </p> </li> <li> <p> <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/config-idle-timeout.html">Idle Connection Timeout</a> </p> </li> </ul>'
      operationId: ModifyLoadBalancerAttributes
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ModifyLoadBalancerAttributesInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ModifyLoadBalancerAttributesOutput'
        '480':
          description: AccessPointNotFoundException
          schema:
            $ref: '#/definitions/AccessPointNotFoundException'
        '481':
          description: LoadBalancerAttributeNotFoundException
          schema:
            $ref: '#/definitions/LoadBalancerAttributeNotFoundException'
        '482':
          description: InvalidConfigurationRequestException
          schema:
            $ref: '#/definitions/InvalidConfigurationRequestException'
  '/#RegisterInstancesWithLoadBalancer':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Adds the specified instances to the specified load balancer.</p> <p>The instance must be a running instance in the same network as the load balancer (EC2-Classic or the same VPC). If you have EC2-Classic instances and a load balancer in a VPC with ClassicLink enabled, you can link the EC2-Classic instances to that VPC and then register the linked EC2-Classic instances with the load balancer in the VPC.</p> <p>Note that <code>RegisterInstanceWithLoadBalancer</code> completes when the request has been registered. Instance registration takes a little time to complete. To check the state of the registered instances, use <a>DescribeLoadBalancers</a> or <a>DescribeInstanceHealth</a>.</p> <p>After the instance is registered, it starts receiving traffic and requests from the load balancer. Any instance that is not in one of the Availability Zones registered for the load balancer is moved to the <code>OutOfService</code> state. If an Availability Zone is added to the load balancer later, any instances registered with the load balancer move to the <code>InService</code> state.</p> <p>To deregister instances from a load balancer, use <a>DeregisterInstancesFromLoadBalancer</a>.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-deregister-register-instances.html">Register or De-Register EC2 Instances</a> in the <i>Classic Load Balancer Guide</i>.</p>'
      operationId: RegisterInstancesWithLoadBalancer
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/RegisterEndPointsInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RegisterEndPointsOutput'
        '480':
          description: AccessPointNotFoundException
          schema:
            $ref: '#/definitions/AccessPointNotFoundException'
        '481':
          description: InvalidEndPointException
          schema:
            $ref: '#/definitions/InvalidEndPointException'
  '/#RemoveTags':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Removes one or more tags from the specified load balancer.
      operationId: RemoveTags
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/RemoveTagsInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RemoveTagsOutput'
        '480':
          description: AccessPointNotFoundException
          schema:
            $ref: '#/definitions/AccessPointNotFoundException'
  '/#SetLoadBalancerListenerSSLCertificate':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Sets the certificate that terminates the specified listener''s SSL connections. The specified certificate replaces any prior certificate that was used on the same load balancer and port.</p> <p>For more information about updating your SSL certificate, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-update-ssl-cert.html">Replace the SSL Certificate for Your Load Balancer</a> in the <i>Classic Load Balancer Guide</i>.</p>'
      operationId: SetLoadBalancerListenerSSLCertificate
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SetLoadBalancerListenerSSLCertificateInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SetLoadBalancerListenerSSLCertificateOutput'
        '480':
          description: CertificateNotFoundException
          schema:
            $ref: '#/definitions/CertificateNotFoundException'
        '481':
          description: AccessPointNotFoundException
          schema:
            $ref: '#/definitions/AccessPointNotFoundException'
        '482':
          description: ListenerNotFoundException
          schema:
            $ref: '#/definitions/ListenerNotFoundException'
        '483':
          description: InvalidConfigurationRequestException
          schema:
            $ref: '#/definitions/InvalidConfigurationRequestException'
        '484':
          description: UnsupportedProtocolException
          schema:
            $ref: '#/definitions/UnsupportedProtocolException'
  '/#SetLoadBalancerPoliciesForBackendServer':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Replaces the set of policies associated with the specified port on which the EC2 instance is listening with a new set of policies. At this time, only the back-end server authentication policy type can be applied to the instance ports; this policy type is composed of multiple public key policies.</p> <p>Each time you use <code>SetLoadBalancerPoliciesForBackendServer</code> to enable the policies, use the <code>PolicyNames</code> parameter to list the policies that you want to enable.</p> <p>You can use <a>DescribeLoadBalancers</a> or <a>DescribeLoadBalancerPolicies</a> to verify that the policy is associated with the EC2 instance.</p> <p>For more information about enabling back-end instance authentication, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-create-https-ssl-load-balancer.html#configure_backendauth_clt">Configure Back-end Instance Authentication</a> in the <i>Classic Load Balancer Guide</i>. For more information about Proxy Protocol, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/enable-proxy-protocol.html">Configure Proxy Protocol Support</a> in the <i>Classic Load Balancer Guide</i>.</p>'
      operationId: SetLoadBalancerPoliciesForBackendServer
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SetLoadBalancerPoliciesForBackendServerInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SetLoadBalancerPoliciesForBackendServerOutput'
        '480':
          description: AccessPointNotFoundException
          schema:
            $ref: '#/definitions/AccessPointNotFoundException'
        '481':
          description: PolicyNotFoundException
          schema:
            $ref: '#/definitions/PolicyNotFoundException'
        '482':
          description: InvalidConfigurationRequestException
          schema:
            $ref: '#/definitions/InvalidConfigurationRequestException'
  '/#SetLoadBalancerPoliciesOfListener':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: '<p>Replaces the current set of policies for the specified load balancer port with the specified set of policies.</p> <p>To enable back-end server authentication, use <a>SetLoadBalancerPoliciesForBackendServer</a>.</p> <p>For more information about setting policies, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/ssl-config-update.html">Update the SSL Negotiation Configuration</a>, <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-sticky-sessions.html#enable-sticky-sessions-duration">Duration-Based Session Stickiness</a>, and <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-sticky-sessions.html#enable-sticky-sessions-application">Application-Controlled Session Stickiness</a> in the <i>Classic Load Balancer Guide</i>.</p>'
      operationId: SetLoadBalancerPoliciesOfListener
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SetLoadBalancerPoliciesOfListenerInput'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SetLoadBalancerPoliciesOfListenerOutput'
        '480':
          description: AccessPointNotFoundException
          schema:
            $ref: '#/definitions/AccessPointNotFoundException'
        '481':
          description: PolicyNotFoundException
          schema:
            $ref: '#/definitions/PolicyNotFoundException'
        '482':
          description: ListenerNotFoundException
          schema:
            $ref: '#/definitions/ListenerNotFoundException'
        '483':
          description: InvalidConfigurationRequestException
          schema:
            $ref: '#/definitions/InvalidConfigurationRequestException'
definitions:
  AccessLog:
    description: Information about the <code>AccessLog</code> attribute.
    properties:
      EmitInterval:
        $ref: '#/definitions/AccessLogInterval'
        description: '<p>The interval for publishing the access logs. You can specify an interval of either 5 minutes or 60 minutes.</p> <p>Default: 60 minutes</p>'
      Enabled:
        $ref: '#/definitions/AccessLogEnabled'
        description: Specifies whether access logs are enabled for the load balancer.
      S3BucketName:
        $ref: '#/definitions/S3BucketName'
        description: The name of the Amazon S3 bucket where the access logs are stored.
      S3BucketPrefix:
        $ref: '#/definitions/AccessLogPrefix'
        description: 'The logical hierarchy you created for your Amazon S3 bucket, for example <code>my-bucket-prefix/prod</code>. If the prefix is not provided, the log is placed at the root level of the bucket.'
    required:
      - Enabled
    type: object
  AccessLogEnabled:
    type: boolean
  AccessLogInterval:
    type: integer
  AccessLogPrefix:
    type: string
  AccessPointName:
    type: string
  AccessPointNotFoundException:
    description: The specified load balancer does not exist.
    properties: {}
    type: object
  AccessPointPort:
    type: integer
  AddAvailabilityZonesInput:
    description: Contains the parameters for EnableAvailabilityZonesForLoadBalancer.
    example:
      AvailabilityZones:
        - us-west-2b
      LoadBalancerName: my-load-balancer
    properties:
      AvailabilityZones:
        $ref: '#/definitions/AvailabilityZones'
        description: The Availability Zones. These must be in the same region as the load balancer.
      LoadBalancerName:
        $ref: '#/definitions/AccessPointName'
        description: The name of the load balancer.
    required:
      - LoadBalancerName
      - AvailabilityZones
    type: object
  AddAvailabilityZonesOutput:
    description: Contains the output of EnableAvailabilityZonesForLoadBalancer.
    example:
      AvailabilityZones:
        - us-west-2a
        - us-west-2b
    properties:
      AvailabilityZones:
        $ref: '#/definitions/AvailabilityZones'
        description: The updated list of Availability Zones for the load balancer.
    type: object
  AddTagsInput:
    description: Contains the parameters for AddTags.
    example:
      LoadBalancerNames:
        - my-load-balancer
      Tags:
        - Key: project
          Value: lima
        - Key: department
          Value: digital-media
    properties:
      LoadBalancerNames:
        $ref: '#/definitions/LoadBalancerNames'
        description: The name of the load balancer. You can specify one load balancer only.
      Tags:
        $ref: '#/definitions/TagList'
        description: The tags.
    required:
      - LoadBalancerNames
      - Tags
    type: object
  AddTagsOutput:
    description: Contains the output of AddTags.
    properties: {}
    type: object
  AdditionalAttribute:
    description: This data type is reserved.
    properties:
      Key:
        $ref: '#/definitions/AdditionalAttributeKey'
        description: This parameter is reserved.
      Value:
        $ref: '#/definitions/AdditionalAttributeValue'
        description: This parameter is reserved.
    type: object
  AdditionalAttributeKey:
    maxLength: 256
    pattern: '^[a-zA-Z0-9.]+$'
    type: string
  AdditionalAttributeValue:
    maxLength: 256
    pattern: '^[a-zA-Z0-9.]+$'
    type: string
  AdditionalAttributes:
    items:
      $ref: '#/definitions/AdditionalAttribute'
    maxItems: 10
    type: array
  AppCookieStickinessPolicies:
    items:
      $ref: '#/definitions/AppCookieStickinessPolicy'
    type: array
  AppCookieStickinessPolicy:
    description: Information about a policy for application-controlled session stickiness.
    properties:
      CookieName:
        $ref: '#/definitions/CookieName'
        description: The name of the application cookie used for stickiness.
      PolicyName:
        $ref: '#/definitions/PolicyName'
        description: The mnemonic name for the policy being created. The name must be unique within a set of policies for this load balancer.
    type: object
  ApplySecurityGroupsToLoadBalancerInput:
    description: Contains the parameters for ApplySecurityGroupsToLoadBalancer.
    example:
      LoadBalancerName: my-load-balancer
      SecurityGroups:
        - sg-fc448899
    properties:
      LoadBalancerName:
        $ref: '#/definitions/AccessPointName'
        description: The name of the load balancer.
      SecurityGroups:
        $ref: '#/definitions/SecurityGroups'
        description: The IDs of the security groups to associate with the load balancer. Note that you cannot specify the name of the security group.
    required:
      - LoadBalancerName
      - SecurityGroups
    type: object
  ApplySecurityGroupsToLoadBalancerOutput:
    description: Contains the output of ApplySecurityGroupsToLoadBalancer.
    example:
      SecurityGroups:
        - sg-fc448899
    properties:
      SecurityGroups:
        $ref: '#/definitions/SecurityGroups'
        description: The IDs of the security groups associated with the load balancer.
    type: object
  AttachLoadBalancerToSubnetsInput:
    description: Contains the parameters for AttachLoaBalancerToSubnets.
    example:
      LoadBalancerName: my-load-balancer
      Subnets:
        - subnet-0ecac448
    properties:
      LoadBalancerName:
        $ref: '#/definitions/AccessPointName'
        description: The name of the load balancer.
      Subnets:
        $ref: '#/definitions/Subnets'
        description: The IDs of the subnets to add. You can add only one subnet per Availability Zone.
    required:
      - LoadBalancerName
      - Subnets
    type: object
  AttachLoadBalancerToSubnetsOutput:
    description: Contains the output of AttachLoadBalancerToSubnets.
    example:
      Subnets:
        - subnet-15aaab61
        - subnet-0ecac448
    properties:
      Subnets:
        $ref: '#/definitions/Subnets'
        description: The IDs of the subnets attached to the load balancer.
    type: object
  AttributeName:
    type: string
  AttributeType:
    type: string
  AttributeValue:
    type: string
  AvailabilityZone:
    type: string
  AvailabilityZones:
    items:
      $ref: '#/definitions/AvailabilityZone'
    type: array
  BackendServerDescription:
    description: Information about the configuration of an EC2 instance.
    properties:
      InstancePort:
        $ref: '#/definitions/InstancePort'
        description: The port on which the EC2 instance is listening.
      PolicyNames:
        $ref: '#/definitions/PolicyNames'
        description: The names of the policies enabled for the EC2 instance.
    type: object
  BackendServerDescriptions:
    items:
      $ref: '#/definitions/BackendServerDescription'
    type: array
  Cardinality:
    type: string
  CertificateNotFoundException:
    description: 'The specified ARN does not refer to a valid SSL certificate in AWS Identity and Access Management (IAM) or AWS Certificate Manager (ACM). Note that if you recently uploaded the certificate to IAM, this error might indicate that the certificate is not fully available yet.'
    properties: {}
    type: object
  ConfigureHealthCheckInput:
    description: Contains the parameters for ConfigureHealthCheck.
    example:
      HealthCheck:
        HealthyThreshold: 2
        Interval: 30
        Target: 'HTTP:80/png'
        Timeout: 3
        UnhealthyThreshold: 2
      LoadBalancerName: my-load-balancer
    properties:
      HealthCheck:
        $ref: '#/definitions/HealthCheck'
        description: The configuration information.
      LoadBalancerName:
        $ref: '#/definitions/AccessPointName'
        description: The name of the load balancer.
    required:
      - LoadBalancerName
      - HealthCheck
    type: object
  ConfigureHealthCheckOutput:
    description: Contains the output of ConfigureHealthCheck.
    example:
      HealthCheck:
        HealthyThreshold: 2
        Interval: 30
        Target: 'HTTP:80/png'
        Timeout: 3
        UnhealthyThreshold: 2
    properties:
      HealthCheck:
        $ref: '#/definitions/HealthCheck'
        description: The updated health check.
    type: object
  ConnectionDraining:
    description: Information about the <code>ConnectionDraining</code> attribute.
    properties:
      Enabled:
        $ref: '#/definitions/ConnectionDrainingEnabled'
        description: Specifies whether connection draining is enabled for the load balancer.
      Timeout:
        $ref: '#/definitions/ConnectionDrainingTimeout'
        description: 'The maximum time, in seconds, to keep the existing connections open before deregistering the instances.'
    required:
      - Enabled
    type: object
  ConnectionDrainingEnabled:
    type: boolean
  ConnectionDrainingTimeout:
    type: integer
  ConnectionSettings:
    description: Information about the <code>ConnectionSettings</code> attribute.
    properties:
      IdleTimeout:
        $ref: '#/definitions/IdleTimeout'
        description: 'The time, in seconds, that the connection is allowed to be idle (no data has been sent over the connection) before it is closed by the load balancer.'
    required:
      - IdleTimeout
    type: object
  CookieExpirationPeriod:
    type: integer
  CookieName:
    type: string
  CreateAccessPointInput:
    description: Contains the parameters for CreateLoadBalancer.
    example:
      Listeners:
        - InstancePort: 80
          InstanceProtocol: HTTP
          LoadBalancerPort: 80
          Protocol: HTTP
      LoadBalancerName: my-load-balancer
      Scheme: internal
      SecurityGroups:
        - sg-a61988c3
      Subnets:
        - subnet-15aaab61
    properties:
      AvailabilityZones:
        $ref: '#/definitions/AvailabilityZones'
        description: <p>One or more Availability Zones from the same region as the load balancer.</p> <p>You must specify at least one Availability Zone.</p> <p>You can add more Availability Zones after you create the load balancer using <a>EnableAvailabilityZonesForLoadBalancer</a>.</p>
      Listeners:
        $ref: '#/definitions/Listeners'
        description: '<p>The listeners.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-listener-config.html">Listeners for Your Classic Load Balancer</a> in the <i>Classic Load Balancer Guide</i>.</p>'
      LoadBalancerName:
        $ref: '#/definitions/AccessPointName'
        description: '<p>The name of the load balancer.</p> <p>This name must be unique within your set of load balancers for the region, must have a maximum of 32 characters, must contain only alphanumeric characters or hyphens, and cannot begin or end with a hyphen.</p>'
      Scheme:
        $ref: '#/definitions/LoadBalancerScheme'
        description: '<p>The type of a load balancer. Valid only for load balancers in a VPC.</p> <p>By default, Elastic Load Balancing creates an Internet-facing load balancer with a DNS name that resolves to public IP addresses. For more information about Internet-facing and Internal load balancers, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/userguide/how-elastic-load-balancing-works.html#load-balancer-scheme">Load Balancer Scheme</a> in the <i>Elastic Load Balancing User Guide</i>.</p> <p>Specify <code>internal</code> to create a load balancer with a DNS name that resolves to private IP addresses.</p>'
      SecurityGroups:
        $ref: '#/definitions/SecurityGroups'
        description: The IDs of the security groups to assign to the load balancer.
      Subnets:
        $ref: '#/definitions/Subnets'
        description: The IDs of the subnets in your VPC to attach to the load balancer. Specify one subnet per Availability Zone specified in <code>AvailabilityZones</code>.
      Tags:
        $ref: '#/definitions/TagList'
        description: '<p>A list of tags to assign to the load balancer.</p> <p>For more information about tagging your load balancer, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/add-remove-tags.html">Tag Your Classic Load Balancer</a> in the <i>Classic Load Balancer Guide</i>.</p>'
    required:
      - LoadBalancerName
      - Listeners
    type: object
  CreateAccessPointOutput:
    description: Contains the output for CreateLoadBalancer.
    example:
      DNSName: internal-my-load-balancer-123456789.us-west-2.elb.amazonaws.com
    properties:
      DNSName:
        $ref: '#/definitions/DNSName'
        description: The DNS name of the load balancer.
    type: object
  CreateAppCookieStickinessPolicyInput:
    description: Contains the parameters for CreateAppCookieStickinessPolicy.
    example:
      CookieName: my-app-cookie
      LoadBalancerName: my-load-balancer
      PolicyName: my-app-cookie-policy
    properties:
      CookieName:
        $ref: '#/definitions/CookieName'
        description: The name of the application cookie used for stickiness.
      LoadBalancerName:
        $ref: '#/definitions/AccessPointName'
        description: The name of the load balancer.
      PolicyName:
        $ref: '#/definitions/PolicyName'
        description: The name of the policy being created. Policy names must consist of alphanumeric characters and dashes (-). This name must be unique within the set of policies for this load balancer.
    required:
      - LoadBalancerName
      - PolicyName
      - CookieName
    type: object
  CreateAppCookieStickinessPolicyOutput:
    description: Contains the output for CreateAppCookieStickinessPolicy.
    properties: {}
    type: object
  CreateLBCookieStickinessPolicyInput:
    description: Contains the parameters for CreateLBCookieStickinessPolicy.
    example:
      CookieExpirationPeriod: 60
      LoadBalancerName: my-load-balancer
      PolicyName: my-duration-cookie-policy
    properties:
      CookieExpirationPeriod:
        $ref: '#/definitions/CookieExpirationPeriod'
        description: 'The time period, in seconds, after which the cookie should be considered stale. If you do not specify this parameter, the default value is 0, which indicates that the sticky session should last for the duration of the browser session.'
      LoadBalancerName:
        $ref: '#/definitions/AccessPointName'
        description: The name of the load balancer.
      PolicyName:
        $ref: '#/definitions/PolicyName'
        description: The name of the policy being created. Policy names must consist of alphanumeric characters and dashes (-). This name must be unique within the set of policies for this load balancer.
    required:
      - LoadBalancerName
      - PolicyName
    type: object
  CreateLBCookieStickinessPolicyOutput:
    description: Contains the output for CreateLBCookieStickinessPolicy.
    properties: {}
    type: object
  CreateLoadBalancerListenerInput:
    description: Contains the parameters for CreateLoadBalancerListeners.
    example:
      Listeners:
        - InstancePort: 80
          InstanceProtocol: HTTP
          LoadBalancerPort: 443
          Protocol: HTTPS
          SSLCertificateId: 'arn:aws:iam::123456789012:server-certificate/my-server-cert'
      LoadBalancerName: my-load-balancer
    properties:
      Listeners:
        $ref: '#/definitions/Listeners'
        description: The listeners.
      LoadBalancerName:
        $ref: '#/definitions/AccessPointName'
        description: The name of the load balancer.
    required:
      - LoadBalancerName
      - Listeners
    type: object
  CreateLoadBalancerListenerOutput:
    description: Contains the parameters for CreateLoadBalancerListener.
    properties: {}
    type: object
  CreateLoadBalancerPolicyInput:
    description: Contains the parameters for CreateLoadBalancerPolicy.
    example:
      LoadBalancerName: my-load-balancer
      PolicyAttributes:
        - AttributeName: PublicKeyPolicyName
          AttributeValue: my-PublicKey-policy
      PolicyName: my-authentication-policy
      PolicyTypeName: BackendServerAuthenticationPolicyType
    properties:
      LoadBalancerName:
        $ref: '#/definitions/AccessPointName'
        description: The name of the load balancer.
      PolicyAttributes:
        $ref: '#/definitions/PolicyAttributes'
        description: The policy attributes.
      PolicyName:
        $ref: '#/definitions/PolicyName'
        description: The name of the load balancer policy to be created. This name must be unique within the set of policies for this load balancer.
      PolicyTypeName:
        $ref: '#/definitions/PolicyTypeName'
        description: 'The name of the base policy type. To get the list of policy types, use <a>DescribeLoadBalancerPolicyTypes</a>.'
    required:
      - LoadBalancerName
      - PolicyName
      - PolicyTypeName
    type: object
  CreateLoadBalancerPolicyOutput:
    description: Contains the output of CreateLoadBalancerPolicy.
    properties: {}
    type: object
  CreatedTime:
    format: date-time
    type: string
  CrossZoneLoadBalancing:
    description: Information about the <code>CrossZoneLoadBalancing</code> attribute.
    properties:
      Enabled:
        $ref: '#/definitions/CrossZoneLoadBalancingEnabled'
        description: Specifies whether cross-zone load balancing is enabled for the load balancer.
    required:
      - Enabled
    type: object
  CrossZoneLoadBalancingEnabled:
    type: boolean
  DNSName:
    type: string
  DefaultValue:
    type: string
  DeleteAccessPointInput:
    description: Contains the parameters for DeleteLoadBalancer.
    example:
      LoadBalancerName: my-load-balancer
    properties:
      LoadBalancerName:
        $ref: '#/definitions/AccessPointName'
        description: The name of the load balancer.
    required:
      - LoadBalancerName
    type: object
  DeleteAccessPointOutput:
    description: Contains the output of DeleteLoadBalancer.
    properties: {}
    type: object
  DeleteLoadBalancerListenerInput:
    description: Contains the parameters for DeleteLoadBalancerListeners.
    example:
      LoadBalancerName: my-load-balancer
      LoadBalancerPorts:
        - 80
    properties:
      LoadBalancerName:
        $ref: '#/definitions/AccessPointName'
        description: The name of the load balancer.
      LoadBalancerPorts:
        $ref: '#/definitions/Ports'
        description: The client port numbers of the listeners.
    required:
      - LoadBalancerName
      - LoadBalancerPorts
    type: object
  DeleteLoadBalancerListenerOutput:
    description: Contains the output of DeleteLoadBalancerListeners.
    properties: {}
    type: object
  DeleteLoadBalancerPolicyInput:
    description: Contains the parameters for DeleteLoadBalancerPolicy.
    example:
      LoadBalancerName: my-load-balancer
      PolicyName: my-duration-cookie-policy
    properties:
      LoadBalancerName:
        $ref: '#/definitions/AccessPointName'
        description: The name of the load balancer.
      PolicyName:
        $ref: '#/definitions/PolicyName'
        description: The name of the policy.
    required:
      - LoadBalancerName
      - PolicyName
    type: object
  DeleteLoadBalancerPolicyOutput:
    description: Contains the output of DeleteLoadBalancerPolicy.
    properties: {}
    type: object
  DependencyThrottleException:
    properties: {}
    type: object
  DeregisterEndPointsInput:
    description: Contains the parameters for DeregisterInstancesFromLoadBalancer.
    example:
      Instances:
        - InstanceId: i-d6f6fae3
      LoadBalancerName: my-load-balancer
    properties:
      Instances:
        $ref: '#/definitions/Instances'
        description: The IDs of the instances.
      LoadBalancerName:
        $ref: '#/definitions/AccessPointName'
        description: The name of the load balancer.
    required:
      - LoadBalancerName
      - Instances
    type: object
  DeregisterEndPointsOutput:
    description: Contains the output of DeregisterInstancesFromLoadBalancer.
    example:
      Instances:
        - InstanceId: i-207d9717
        - InstanceId: i-afefb49b
    properties:
      Instances:
        $ref: '#/definitions/Instances'
        description: The remaining instances registered with the load balancer.
    type: object
  DescribeAccessPointsInput:
    description: Contains the parameters for DescribeLoadBalancers.
    example:
      LoadBalancerNames:
        - my-load-balancer
    properties:
      LoadBalancerNames:
        $ref: '#/definitions/LoadBalancerNames'
        description: The names of the load balancers.
      Marker:
        $ref: '#/definitions/Marker'
        description: The marker for the next set of results. (You received this marker from a previous call.)
      PageSize:
        $ref: '#/definitions/PageSize'
        description: The maximum number of results to return with this call (a number from 1 to 400). The default is 400.
    type: object
  DescribeAccessPointsOutput:
    description: Contains the parameters for DescribeLoadBalancers.
    example:
      LoadBalancerDescriptions:
        - AvailabilityZones:
            - us-west-2a
          BackendServerDescriptions:
            - InstancePort: 80
              PolicyNames:
                - my-ProxyProtocol-policy
          CanonicalHostedZoneName: my-load-balancer-1234567890.us-west-2.elb.amazonaws.com
          CanonicalHostedZoneNameID: Z3DZXE0EXAMPLE
          CreatedTime: '2015-03-19T03:24:02.650Z'
          DNSName: my-load-balancer-1234567890.us-west-2.elb.amazonaws.com
          HealthCheck:
            HealthyThreshold: 2
            Interval: 30
            Target: 'HTTP:80/png'
            Timeout: 3
            UnhealthyThreshold: 2
          Instances:
            - InstanceId: i-207d9717
            - InstanceId: i-afefb49b
          ListenerDescriptions:
            - Listener:
                InstancePort: 80
                InstanceProtocol: HTTP
                LoadBalancerPort: 80
                Protocol: HTTP
              PolicyNames: []
            - Listener:
                InstancePort: 443
                InstanceProtocol: HTTPS
                LoadBalancerPort: 443
                Protocol: HTTPS
                SSLCertificateId: 'arn:aws:iam::123456789012:server-certificate/my-server-cert'
              PolicyNames:
                - ELBSecurityPolicy-2015-03
          LoadBalancerName: my-load-balancer
          Policies:
            AppCookieStickinessPolicies: []
            LBCookieStickinessPolicies:
              - CookieExpirationPeriod: 60
                PolicyName: my-duration-cookie-policy
            OtherPolicies:
              - my-PublicKey-policy
              - my-authentication-policy
              - my-SSLNegotiation-policy
              - my-ProxyProtocol-policy
              - ELBSecurityPolicy-2015-03
          Scheme: internet-facing
          SecurityGroups:
            - sg-a61988c3
          SourceSecurityGroup:
            GroupName: my-elb-sg
            OwnerAlias: '123456789012'
          Subnets:
            - subnet-15aaab61
          VPCId: vpc-a01106c2
    properties:
      LoadBalancerDescriptions:
        $ref: '#/definitions/LoadBalancerDescriptions'
        description: Information about the load balancers.
      NextMarker:
        $ref: '#/definitions/Marker'
        description: 'The marker to use when requesting the next set of results. If there are no additional results, the string is empty.'
    type: object
  DescribeAccountLimitsInput:
    properties:
      Marker:
        $ref: '#/definitions/Marker'
        description: The marker for the next set of results. (You received this marker from a previous call.)
      PageSize:
        $ref: '#/definitions/PageSize'
        description: The maximum number of results to return with this call.
    type: object
  DescribeAccountLimitsOutput:
    properties:
      Limits:
        $ref: '#/definitions/Limits'
        description: Information about the limits.
      NextMarker:
        $ref: '#/definitions/Marker'
        description: 'The marker to use when requesting the next set of results. If there are no additional results, the string is empty.'
    type: object
  DescribeEndPointStateInput:
    description: Contains the parameters for DescribeInstanceHealth.
    example:
      LoadBalancerName: my-load-balancer
    properties:
      Instances:
        $ref: '#/definitions/Instances'
        description: The IDs of the instances.
      LoadBalancerName:
        $ref: '#/definitions/AccessPointName'
        description: The name of the load balancer.
    required:
      - LoadBalancerName
    type: object
  DescribeEndPointStateOutput:
    description: Contains the output for DescribeInstanceHealth.
    example:
      InstanceStates:
        - Description: N/A
          InstanceId: i-207d9717
          ReasonCode: N/A
          State: InService
        - Description: N/A
          InstanceId: i-afefb49b
          ReasonCode: N/A
          State: InService
    properties:
      InstanceStates:
        $ref: '#/definitions/InstanceStates'
        description: Information about the health of the instances.
    type: object
  DescribeLoadBalancerAttributesInput:
    description: Contains the parameters for DescribeLoadBalancerAttributes.
    example:
      LoadBalancerName: my-load-balancer
    properties:
      LoadBalancerName:
        $ref: '#/definitions/AccessPointName'
        description: The name of the load balancer.
    required:
      - LoadBalancerName
    type: object
  DescribeLoadBalancerAttributesOutput:
    description: Contains the output of DescribeLoadBalancerAttributes.
    example:
      LoadBalancerAttributes:
        AccessLog:
          Enabled: false
        ConnectionDraining:
          Enabled: false
          Timeout: 300
        ConnectionSettings:
          IdleTimeout: 60
        CrossZoneLoadBalancing:
          Enabled: false
    properties:
      LoadBalancerAttributes:
        $ref: '#/definitions/LoadBalancerAttributes'
        description: Information about the load balancer attributes.
    type: object
  DescribeLoadBalancerPoliciesInput:
    description: Contains the parameters for DescribeLoadBalancerPolicies.
    example:
      LoadBalancerName: my-load-balancer
      PolicyNames:
        - my-authentication-policy
    properties:
      LoadBalancerName:
        $ref: '#/definitions/AccessPointName'
        description: The name of the load balancer.
      PolicyNames:
        $ref: '#/definitions/PolicyNames'
        description: The names of the policies.
    type: object
  DescribeLoadBalancerPoliciesOutput:
    description: Contains the output of DescribeLoadBalancerPolicies.
    example:
      PolicyDescriptions:
        - PolicyAttributeDescriptions:
            - AttributeName: PublicKeyPolicyName
              AttributeValue: my-PublicKey-policy
          PolicyName: my-authentication-policy
          PolicyTypeName: BackendServerAuthenticationPolicyType
    properties:
      PolicyDescriptions:
        $ref: '#/definitions/PolicyDescriptions'
        description: Information about the policies.
    type: object
  DescribeLoadBalancerPolicyTypesInput:
    description: Contains the parameters for DescribeLoadBalancerPolicyTypes.
    example:
      PolicyTypeNames:
        - ProxyProtocolPolicyType
    properties:
      PolicyTypeNames:
        $ref: '#/definitions/PolicyTypeNames'
        description: 'The names of the policy types. If no names are specified, describes all policy types defined by Elastic Load Balancing.'
    type: object
  DescribeLoadBalancerPolicyTypesOutput:
    description: Contains the output of DescribeLoadBalancerPolicyTypes.
    example:
      PolicyTypeDescriptions:
        - Description: Policy that controls whether to include the IP address and port of the originating request for TCP messages. This policy operates on TCP listeners only.
          PolicyAttributeTypeDescriptions:
            - AttributeName: ProxyProtocol
              AttributeType: Boolean
              Cardinality: ONE
          PolicyTypeName: ProxyProtocolPolicyType
    properties:
      PolicyTypeDescriptions:
        $ref: '#/definitions/PolicyTypeDescriptions'
        description: Information about the policy types.
    type: object
  DescribeTagsInput:
    description: Contains the parameters for DescribeTags.
    example:
      LoadBalancerNames:
        - my-load-balancer
    properties:
      LoadBalancerNames:
        $ref: '#/definitions/LoadBalancerNamesMax20'
        description: The names of the load balancers.
    required:
      - LoadBalancerNames
    type: object
  DescribeTagsOutput:
    description: Contains the output for DescribeTags.
    example:
      TagDescriptions:
        - LoadBalancerName: my-load-balancer
          Tags:
            - Key: project
              Value: lima
            - Key: department
              Value: digital-media
    properties:
      TagDescriptions:
        $ref: '#/definitions/TagDescriptions'
        description: Information about the tags.
    type: object
  Description:
    type: string
  DetachLoadBalancerFromSubnetsInput:
    description: Contains the parameters for DetachLoadBalancerFromSubnets.
    example:
      LoadBalancerName: my-load-balancer
      Subnets:
        - subnet-0ecac448
    properties:
      LoadBalancerName:
        $ref: '#/definitions/AccessPointName'
        description: The name of the load balancer.
      Subnets:
        $ref: '#/definitions/Subnets'
        description: The IDs of the subnets.
    required:
      - LoadBalancerName
      - Subnets
    type: object
  DetachLoadBalancerFromSubnetsOutput:
    description: Contains the output of DetachLoadBalancerFromSubnets.
    example:
      Subnets:
        - subnet-15aaab61
    properties:
      Subnets:
        $ref: '#/definitions/Subnets'
        description: The IDs of the remaining subnets for the load balancer.
    type: object
  DuplicateAccessPointNameException:
    description: The specified load balancer name already exists for this account.
    properties: {}
    type: object
  DuplicateListenerException:
    description: 'A listener already exists for the specified load balancer name and port, but with a different instance port, protocol, or SSL certificate.'
    properties: {}
    type: object
  DuplicatePolicyNameException:
    description: A policy with the specified name already exists for this load balancer.
    properties: {}
    type: object
  DuplicateTagKeysException:
    description: A tag key was specified more than once.
    properties: {}
    type: object
  EndPointPort:
    type: integer
  HealthCheck:
    description: Information about a health check.
    properties:
      HealthyThreshold:
        $ref: '#/definitions/HealthyThreshold'
        description: The number of consecutive health checks successes required before moving the instance to the <code>Healthy</code> state.
      Interval:
        $ref: '#/definitions/HealthCheckInterval'
        description: 'The approximate interval, in seconds, between health checks of an individual instance.'
      Target:
        $ref: '#/definitions/HealthCheckTarget'
        description: '<p>The instance being checked. The protocol is either TCP, HTTP, HTTPS, or SSL. The range of valid ports is one (1) through 65535.</p> <p>TCP is the default, specified as a TCP: port pair, for example "TCP:5000". In this case, a health check simply attempts to open a TCP connection to the instance on the specified port. Failure to connect within the configured timeout is considered unhealthy.</p> <p>SSL is also specified as SSL: port pair, for example, SSL:5000.</p> <p>For HTTP/HTTPS, you must include a ping path in the string. HTTP is specified as a HTTP:port;/;PathToPing; grouping, for example "HTTP:80/weather/us/wa/seattle". In this case, a HTTP GET request is issued to the instance on the given port and path. Any answer other than "200 OK" within the timeout period is considered unhealthy.</p> <p>The total length of the HTTP ping target must be 1024 16-bit Unicode characters or less.</p>'
      Timeout:
        $ref: '#/definitions/HealthCheckTimeout'
        description: '<p>The amount of time, in seconds, during which no response means a failed health check.</p> <p>This value must be less than the <code>Interval</code> value.</p>'
      UnhealthyThreshold:
        $ref: '#/definitions/UnhealthyThreshold'
        description: The number of consecutive health check failures required before moving the instance to the <code>Unhealthy</code> state.
    required:
      - Target
      - Interval
      - Timeout
      - UnhealthyThreshold
      - HealthyThreshold
    type: object
  HealthCheckInterval:
    maximum: 300
    minimum: 5
    type: integer
  HealthCheckTarget:
    type: string
  HealthCheckTimeout:
    maximum: 60
    minimum: 2
    type: integer
  HealthyThreshold:
    maximum: 10
    minimum: 2
    type: integer
  IdleTimeout:
    maximum: 3600
    minimum: 1
    type: integer
  Instance:
    description: The ID of an EC2 instance.
    properties:
      InstanceId:
        $ref: '#/definitions/InstanceId'
        description: The instance ID.
    type: object
  InstanceId:
    type: string
  InstancePort:
    maximum: 65535
    minimum: 1
    type: integer
  InstanceState:
    description: Information about the state of an EC2 instance.
    properties:
      Description:
        $ref: '#/definitions/Description'
        description: <p>A description of the instance state. This string can contain one or more of the following messages.</p> <ul> <li> <p> <code>N/A</code> </p> </li> <li> <p> <code>A transient error occurred. Please try again later.</code> </p> </li> <li> <p> <code>Instance has failed at least the UnhealthyThreshold number of health checks consecutively.</code> </p> </li> <li> <p> <code>Instance has not passed the configured HealthyThreshold number of health checks consecutively.</code> </p> </li> <li> <p> <code>Instance registration is still in progress.</code> </p> </li> <li> <p> <code>Instance is in the EC2 Availability Zone for which LoadBalancer is not configured to route traffic to.</code> </p> </li> <li> <p> <code>Instance is not currently registered with the LoadBalancer.</code> </p> </li> <li> <p> <code>Instance deregistration currently in progress.</code> </p> </li> <li> <p> <code>Disable Availability Zone is currently in progress.</code> </p> </li> <li> <p> <code>Instance is in pending state.</code> </p> </li> <li> <p> <code>Instance is in stopped state.</code> </p> </li> <li> <p> <code>Instance is in terminated state.</code> </p> </li> </ul>
      InstanceId:
        $ref: '#/definitions/InstanceId'
        description: The ID of the instance.
      ReasonCode:
        $ref: '#/definitions/ReasonCode'
        description: '<p>Information about the cause of <code>OutOfService</code> instances. Specifically, whether the cause is Elastic Load Balancing or the instance.</p> <p>Valid values: <code>ELB</code> | <code>Instance</code> | <code>N/A</code> </p>'
      State:
        $ref: '#/definitions/State'
        description: '<p>The current state of the instance.</p> <p>Valid values: <code>InService</code> | <code>OutOfService</code> | <code>Unknown</code> </p>'
    type: object
  InstanceStates:
    items:
      $ref: '#/definitions/InstanceState'
    type: array
  Instances:
    items:
      $ref: '#/definitions/Instance'
    type: array
  InvalidConfigurationRequestException:
    description: The requested configuration change is not valid.
    properties: {}
    type: object
  InvalidEndPointException:
    description: The specified endpoint is not valid.
    properties: {}
    type: object
  InvalidSchemeException:
    description: The specified value for the schema is not valid. You can only specify a scheme for load balancers in a VPC.
    properties: {}
    type: object
  InvalidSecurityGroupException:
    description: One or more of the specified security groups do not exist.
    properties: {}
    type: object
  InvalidSubnetException:
    description: The specified VPC has no associated Internet gateway.
    properties: {}
    type: object
  LBCookieStickinessPolicies:
    items:
      $ref: '#/definitions/LBCookieStickinessPolicy'
    type: array
  LBCookieStickinessPolicy:
    description: Information about a policy for duration-based session stickiness.
    properties:
      CookieExpirationPeriod:
        $ref: '#/definitions/CookieExpirationPeriod'
        description: 'The time period, in seconds, after which the cookie should be considered stale. If this parameter is not specified, the stickiness session lasts for the duration of the browser session.'
      PolicyName:
        $ref: '#/definitions/PolicyName'
        description: The name of the policy. This name must be unique within the set of policies for this load balancer.
    type: object
  Limit:
    description: Information about an Elastic Load Balancing resource limit for your AWS account.
    properties:
      Max:
        $ref: '#/definitions/Max'
        description: The maximum value of the limit.
      Name:
        $ref: '#/definitions/Name'
        description: '<p>The name of the limit. The possible values are:</p> <ul> <li> <p>classic-listeners</p> </li> <li> <p>classic-load-balancers</p> </li> </ul>'
    type: object
  Limits:
    items:
      $ref: '#/definitions/Limit'
    type: array
  Listener:
    description: '<p>Information about a listener.</p> <p>For information about the protocols and the ports supported by Elastic Load Balancing, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-listener-config.html">Listeners for Your Classic Load Balancer</a> in the <i>Classic Load Balancer Guide</i>.</p>'
    properties:
      InstancePort:
        $ref: '#/definitions/InstancePort'
        description: The port on which the instance is listening.
      InstanceProtocol:
        $ref: '#/definitions/Protocol'
        description: '<p>The protocol to use for routing traffic to instances: HTTP, HTTPS, TCP, or SSL.</p> <p>If the front-end protocol is HTTP, HTTPS, TCP, or SSL, <code>InstanceProtocol</code> must be at the same protocol.</p> <p>If there is another listener with the same <code>InstancePort</code> whose <code>InstanceProtocol</code> is secure, (HTTPS or SSL), the listener''s <code>InstanceProtocol</code> must also be secure.</p> <p>If there is another listener with the same <code>InstancePort</code> whose <code>InstanceProtocol</code> is HTTP or TCP, the listener''s <code>InstanceProtocol</code> must be HTTP or TCP.</p>'
      LoadBalancerPort:
        $ref: '#/definitions/AccessPointPort'
        description: 'The port on which the load balancer is listening. On EC2-VPC, you can specify any port from the range 1-65535. On EC2-Classic, you can specify any port from the following list: 25, 80, 443, 465, 587, 1024-65535.'
      Protocol:
        $ref: '#/definitions/Protocol'
        description: 'The load balancer transport protocol to use for routing: HTTP, HTTPS, TCP, or SSL.'
      SSLCertificateId:
        $ref: '#/definitions/SSLCertificateId'
        description: The Amazon Resource Name (ARN) of the server certificate.
    required:
      - Protocol
      - LoadBalancerPort
      - InstancePort
    type: object
  ListenerDescription:
    description: The policies enabled for a listener.
    properties:
      Listener:
        $ref: '#/definitions/Listener'
        description: The listener.
      PolicyNames:
        $ref: '#/definitions/PolicyNames'
        description: 'The policies. If there are no policies enabled, the list is empty.'
    type: object
  ListenerDescriptions:
    items:
      $ref: '#/definitions/ListenerDescription'
    type: array
  ListenerNotFoundException:
    description: The load balancer does not have a listener configured at the specified port.
    properties: {}
    type: object
  Listeners:
    items:
      $ref: '#/definitions/Listener'
    type: array
  LoadBalancerAttributeNotFoundException:
    description: The specified load balancer attribute does not exist.
    properties: {}
    type: object
  LoadBalancerAttributes:
    description: The attributes for a load balancer.
    properties:
      AccessLog:
        $ref: '#/definitions/AccessLog'
        description: '<p>If enabled, the load balancer captures detailed information of all requests and delivers the information to the Amazon S3 bucket that you specify.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/enable-access-logs.html">Enable Access Logs</a> in the <i>Classic Load Balancer Guide</i>.</p>'
      AdditionalAttributes:
        $ref: '#/definitions/AdditionalAttributes'
        description: This parameter is reserved.
      ConnectionDraining:
        $ref: '#/definitions/ConnectionDraining'
        description: '<p>If enabled, the load balancer allows existing requests to complete before the load balancer shifts traffic away from a deregistered or unhealthy instance.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/config-conn-drain.html">Configure Connection Draining</a> in the <i>Classic Load Balancer Guide</i>.</p>'
      ConnectionSettings:
        $ref: '#/definitions/ConnectionSettings'
        description: '<p>If enabled, the load balancer allows the connections to remain idle (no data is sent over the connection) for the specified duration.</p> <p>By default, Elastic Load Balancing maintains a 60-second idle connection timeout for both front-end and back-end connections of your load balancer. For more information, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/config-idle-timeout.html">Configure Idle Connection Timeout</a> in the <i>Classic Load Balancer Guide</i>.</p>'
      CrossZoneLoadBalancing:
        $ref: '#/definitions/CrossZoneLoadBalancing'
        description: '<p>If enabled, the load balancer routes the request traffic evenly across all instances regardless of the Availability Zones.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/enable-disable-crosszone-lb.html">Configure Cross-Zone Load Balancing</a> in the <i>Classic Load Balancer Guide</i>.</p>'
    type: object
  LoadBalancerDescription:
    description: Information about a load balancer.
    properties:
      AvailabilityZones:
        $ref: '#/definitions/AvailabilityZones'
        description: The Availability Zones for the load balancer.
      BackendServerDescriptions:
        $ref: '#/definitions/BackendServerDescriptions'
        description: Information about your EC2 instances.
      CanonicalHostedZoneName:
        $ref: '#/definitions/DNSName'
        description: '<p>The DNS name of the load balancer.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/using-domain-names-with-elb.html">Configure a Custom Domain Name</a> in the <i>Classic Load Balancer Guide</i>.</p>'
      CanonicalHostedZoneNameID:
        $ref: '#/definitions/DNSName'
        description: The ID of the Amazon Route 53 hosted zone for the load balancer.
      CreatedTime:
        $ref: '#/definitions/CreatedTime'
        description: The date and time the load balancer was created.
      DNSName:
        $ref: '#/definitions/DNSName'
        description: The DNS name of the load balancer.
      HealthCheck:
        $ref: '#/definitions/HealthCheck'
        description: Information about the health checks conducted on the load balancer.
      Instances:
        $ref: '#/definitions/Instances'
        description: The IDs of the instances for the load balancer.
      ListenerDescriptions:
        $ref: '#/definitions/ListenerDescriptions'
        description: The listeners for the load balancer.
      LoadBalancerName:
        $ref: '#/definitions/AccessPointName'
        description: The name of the load balancer.
      Policies:
        $ref: '#/definitions/Policies'
        description: The policies defined for the load balancer.
      Scheme:
        $ref: '#/definitions/LoadBalancerScheme'
        description: '<p>The type of load balancer. Valid only for load balancers in a VPC.</p> <p>If <code>Scheme</code> is <code>internet-facing</code>, the load balancer has a public DNS name that resolves to a public IP address.</p> <p>If <code>Scheme</code> is <code>internal</code>, the load balancer has a public DNS name that resolves to a private IP address.</p>'
      SecurityGroups:
        $ref: '#/definitions/SecurityGroups'
        description: The security groups for the load balancer. Valid only for load balancers in a VPC.
      SourceSecurityGroup:
        $ref: '#/definitions/SourceSecurityGroup'
        description: 'The security group for the load balancer, which you can use as part of your inbound rules for your registered instances. To only allow traffic from load balancers, add a security group rule that specifies this source security group as the inbound source.'
      Subnets:
        $ref: '#/definitions/Subnets'
        description: The IDs of the subnets for the load balancer.
      VPCId:
        $ref: '#/definitions/VPCId'
        description: The ID of the VPC for the load balancer.
    type: object
  LoadBalancerDescriptions:
    items:
      $ref: '#/definitions/LoadBalancerDescription'
    type: array
  LoadBalancerNames:
    items:
      $ref: '#/definitions/AccessPointName'
    type: array
  LoadBalancerNamesMax20:
    items:
      $ref: '#/definitions/AccessPointName'
    maxItems: 20
    minItems: 1
    type: array
  LoadBalancerScheme:
    type: string
  Marker:
    type: string
  Max:
    type: string
  ModifyLoadBalancerAttributesInput:
    description: Contains the parameters for ModifyLoadBalancerAttributes.
    example:
      LoadBalancerAttributes:
        ConnectionDraining:
          Enabled: true
          Timeout: 300
      LoadBalancerName: my-load-balancer
    properties:
      LoadBalancerAttributes:
        $ref: '#/definitions/LoadBalancerAttributes'
        description: The attributes for the load balancer.
      LoadBalancerName:
        $ref: '#/definitions/AccessPointName'
        description: The name of the load balancer.
    required:
      - LoadBalancerName
      - LoadBalancerAttributes
    type: object
  ModifyLoadBalancerAttributesOutput:
    description: Contains the output of ModifyLoadBalancerAttributes.
    example:
      LoadBalancerAttributes:
        ConnectionDraining:
          Enabled: true
          Timeout: 300
      LoadBalancerName: my-load-balancer
    properties:
      LoadBalancerAttributes:
        $ref: '#/definitions/LoadBalancerAttributes'
        description: Information about the load balancer attributes.
      LoadBalancerName:
        $ref: '#/definitions/AccessPointName'
        description: The name of the load balancer.
    type: object
  Name:
    type: string
  PageSize:
    maximum: 400
    minimum: 1
    type: integer
  Policies:
    description: The policies for a load balancer.
    properties:
      AppCookieStickinessPolicies:
        $ref: '#/definitions/AppCookieStickinessPolicies'
        description: The stickiness policies created using <a>CreateAppCookieStickinessPolicy</a>.
      LBCookieStickinessPolicies:
        $ref: '#/definitions/LBCookieStickinessPolicies'
        description: The stickiness policies created using <a>CreateLBCookieStickinessPolicy</a>.
      OtherPolicies:
        $ref: '#/definitions/PolicyNames'
        description: The policies other than the stickiness policies.
    type: object
  PolicyAttribute:
    description: Information about a policy attribute.
    properties:
      AttributeName:
        $ref: '#/definitions/AttributeName'
        description: The name of the attribute.
      AttributeValue:
        $ref: '#/definitions/AttributeValue'
        description: The value of the attribute.
    type: object
  PolicyAttributeDescription:
    description: Information about a policy attribute.
    properties:
      AttributeName:
        $ref: '#/definitions/AttributeName'
        description: The name of the attribute.
      AttributeValue:
        $ref: '#/definitions/AttributeValue'
        description: The value of the attribute.
    type: object
  PolicyAttributeDescriptions:
    items:
      $ref: '#/definitions/PolicyAttributeDescription'
    type: array
  PolicyAttributeTypeDescription:
    description: Information about a policy attribute type.
    properties:
      AttributeName:
        $ref: '#/definitions/AttributeName'
        description: The name of the attribute.
      AttributeType:
        $ref: '#/definitions/AttributeType'
        description: 'The type of the attribute. For example, <code>Boolean</code> or <code>Integer</code>.'
      Cardinality:
        $ref: '#/definitions/Cardinality'
        description: '<p>The cardinality of the attribute.</p> <p>Valid values:</p> <ul> <li> <p>ONE(1) : Single value required</p> </li> <li> <p>ZERO_OR_ONE(0..1) : Up to one value is allowed</p> </li> <li> <p>ZERO_OR_MORE(0..*) : Optional. Multiple values are allowed</p> </li> <li> <p>ONE_OR_MORE(1..*0) : Required. Multiple values are allowed</p> </li> </ul>'
      DefaultValue:
        $ref: '#/definitions/DefaultValue'
        description: 'The default value of the attribute, if applicable.'
      Description:
        $ref: '#/definitions/Description'
        description: A description of the attribute.
    type: object
  PolicyAttributeTypeDescriptions:
    items:
      $ref: '#/definitions/PolicyAttributeTypeDescription'
    type: array
  PolicyAttributes:
    items:
      $ref: '#/definitions/PolicyAttribute'
    type: array
  PolicyDescription:
    description: Information about a policy.
    properties:
      PolicyAttributeDescriptions:
        $ref: '#/definitions/PolicyAttributeDescriptions'
        description: The policy attributes.
      PolicyName:
        $ref: '#/definitions/PolicyName'
        description: The name of the policy.
      PolicyTypeName:
        $ref: '#/definitions/PolicyTypeName'
        description: The name of the policy type.
    type: object
  PolicyDescriptions:
    items:
      $ref: '#/definitions/PolicyDescription'
    type: array
  PolicyName:
    type: string
  PolicyNames:
    items:
      $ref: '#/definitions/PolicyName'
    type: array
  PolicyNotFoundException:
    description: One or more of the specified policies do not exist.
    properties: {}
    type: object
  PolicyTypeDescription:
    description: Information about a policy type.
    properties:
      Description:
        $ref: '#/definitions/Description'
        description: A description of the policy type.
      PolicyAttributeTypeDescriptions:
        $ref: '#/definitions/PolicyAttributeTypeDescriptions'
        description: The description of the policy attributes associated with the policies defined by Elastic Load Balancing.
      PolicyTypeName:
        $ref: '#/definitions/PolicyTypeName'
        description: The name of the policy type.
    type: object
  PolicyTypeDescriptions:
    items:
      $ref: '#/definitions/PolicyTypeDescription'
    type: array
  PolicyTypeName:
    type: string
  PolicyTypeNames:
    items:
      $ref: '#/definitions/PolicyTypeName'
    type: array
  PolicyTypeNotFoundException:
    description: One or more of the specified policy types do not exist.
    properties: {}
    type: object
  Ports:
    items:
      $ref: '#/definitions/AccessPointPort'
    type: array
  Protocol:
    type: string
  ReasonCode:
    type: string
  RegisterEndPointsInput:
    description: Contains the parameters for RegisterInstancesWithLoadBalancer.
    example:
      Instances:
        - InstanceId: i-d6f6fae3
      LoadBalancerName: my-load-balancer
    properties:
      Instances:
        $ref: '#/definitions/Instances'
        description: The IDs of the instances.
      LoadBalancerName:
        $ref: '#/definitions/AccessPointName'
        description: The name of the load balancer.
    required:
      - LoadBalancerName
      - Instances
    type: object
  RegisterEndPointsOutput:
    description: Contains the output of RegisterInstancesWithLoadBalancer.
    example:
      Instances:
        - InstanceId: i-d6f6fae3
        - InstanceId: i-207d9717
        - InstanceId: i-afefb49b
    properties:
      Instances:
        $ref: '#/definitions/Instances'
        description: The updated list of instances for the load balancer.
    type: object
  RemoveAvailabilityZonesInput:
    description: Contains the parameters for DisableAvailabilityZonesForLoadBalancer.
    example:
      AvailabilityZones:
        - us-west-2a
      LoadBalancerName: my-load-balancer
    properties:
      AvailabilityZones:
        $ref: '#/definitions/AvailabilityZones'
        description: The Availability Zones.
      LoadBalancerName:
        $ref: '#/definitions/AccessPointName'
        description: The name of the load balancer.
    required:
      - LoadBalancerName
      - AvailabilityZones
    type: object
  RemoveAvailabilityZonesOutput:
    description: Contains the output for DisableAvailabilityZonesForLoadBalancer.
    example:
      AvailabilityZones:
        - us-west-2b
    properties:
      AvailabilityZones:
        $ref: '#/definitions/AvailabilityZones'
        description: The remaining Availability Zones for the load balancer.
    type: object
  RemoveTagsInput:
    description: Contains the parameters for RemoveTags.
    example:
      LoadBalancerNames:
        - my-load-balancer
      Tags:
        - Key: project
    properties:
      LoadBalancerNames:
        $ref: '#/definitions/LoadBalancerNames'
        description: The name of the load balancer. You can specify a maximum of one load balancer name.
      Tags:
        $ref: '#/definitions/TagKeyList'
        description: The list of tag keys to remove.
    required:
      - LoadBalancerNames
      - Tags
    type: object
  RemoveTagsOutput:
    description: Contains the output of RemoveTags.
    properties: {}
    type: object
  S3BucketName:
    type: string
  SSLCertificateId:
    type: string
  SecurityGroupId:
    type: string
  SecurityGroupName:
    type: string
  SecurityGroupOwnerAlias:
    type: string
  SecurityGroups:
    items:
      $ref: '#/definitions/SecurityGroupId'
    type: array
  SetLoadBalancerListenerSSLCertificateInput:
    description: Contains the parameters for SetLoadBalancerListenerSSLCertificate.
    example:
      LoadBalancerName: my-load-balancer
      LoadBalancerPort: 443
      SSLCertificateId: 'arn:aws:iam::123456789012:server-certificate/new-server-cert'
    properties:
      LoadBalancerName:
        $ref: '#/definitions/AccessPointName'
        description: The name of the load balancer.
      LoadBalancerPort:
        $ref: '#/definitions/AccessPointPort'
        description: The port that uses the specified SSL certificate.
      SSLCertificateId:
        $ref: '#/definitions/SSLCertificateId'
        description: The Amazon Resource Name (ARN) of the SSL certificate.
    required:
      - LoadBalancerName
      - LoadBalancerPort
      - SSLCertificateId
    type: object
  SetLoadBalancerListenerSSLCertificateOutput:
    description: Contains the output of SetLoadBalancerListenerSSLCertificate.
    properties: {}
    type: object
  SetLoadBalancerPoliciesForBackendServerInput:
    description: Contains the parameters for SetLoadBalancerPoliciesForBackendServer.
    example:
      InstancePort: 80
      LoadBalancerName: my-load-balancer
      PolicyNames:
        - my-ProxyProtocol-policy
    properties:
      InstancePort:
        $ref: '#/definitions/EndPointPort'
        description: The port number associated with the EC2 instance.
      LoadBalancerName:
        $ref: '#/definitions/AccessPointName'
        description: The name of the load balancer.
      PolicyNames:
        $ref: '#/definitions/PolicyNames'
        description: 'The names of the policies. If the list is empty, then all current polices are removed from the EC2 instance.'
    required:
      - LoadBalancerName
      - InstancePort
      - PolicyNames
    type: object
  SetLoadBalancerPoliciesForBackendServerOutput:
    description: Contains the output of SetLoadBalancerPoliciesForBackendServer.
    properties: {}
    type: object
  SetLoadBalancerPoliciesOfListenerInput:
    description: Contains the parameters for SetLoadBalancePoliciesOfListener.
    example:
      LoadBalancerName: my-load-balancer
      LoadBalancerPort: 80
      PolicyNames:
        - my-SSLNegotiation-policy
    properties:
      LoadBalancerName:
        $ref: '#/definitions/AccessPointName'
        description: The name of the load balancer.
      LoadBalancerPort:
        $ref: '#/definitions/AccessPointPort'
        description: The external port of the load balancer.
      PolicyNames:
        $ref: '#/definitions/PolicyNames'
        description: 'The names of the policies. This list must include all policies to be enabled. If you omit a policy that is currently enabled, it is disabled. If the list is empty, all current policies are disabled.'
    required:
      - LoadBalancerName
      - LoadBalancerPort
      - PolicyNames
    type: object
  SetLoadBalancerPoliciesOfListenerOutput:
    description: Contains the output of SetLoadBalancePoliciesOfListener.
    properties: {}
    type: object
  SourceSecurityGroup:
    description: Information about a source security group.
    properties:
      GroupName:
        $ref: '#/definitions/SecurityGroupName'
        description: The name of the security group.
      OwnerAlias:
        $ref: '#/definitions/SecurityGroupOwnerAlias'
        description: The owner of the security group.
    type: object
  State:
    type: string
  SubnetId:
    type: string
  SubnetNotFoundException:
    description: One or more of the specified subnets do not exist.
    properties: {}
    type: object
  Subnets:
    items:
      $ref: '#/definitions/SubnetId'
    type: array
  Tag:
    description: Information about a tag.
    properties:
      Key:
        $ref: '#/definitions/TagKey'
        description: The key of the tag.
      Value:
        $ref: '#/definitions/TagValue'
        description: The value of the tag.
    required:
      - Key
    type: object
  TagDescription:
    description: The tags associated with a load balancer.
    properties:
      LoadBalancerName:
        $ref: '#/definitions/AccessPointName'
        description: The name of the load balancer.
      Tags:
        $ref: '#/definitions/TagList'
        description: The tags.
    type: object
  TagDescriptions:
    items:
      $ref: '#/definitions/TagDescription'
    type: array
  TagKey:
    maxLength: 128
    minLength: 1
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    type: string
  TagKeyList:
    items:
      $ref: '#/definitions/TagKeyOnly'
    minItems: 1
    type: array
  TagKeyOnly:
    description: The key of a tag.
    properties:
      Key:
        $ref: '#/definitions/TagKey'
        description: The name of the key.
    type: object
  TagList:
    items:
      $ref: '#/definitions/Tag'
    minItems: 1
    type: array
  TagValue:
    maxLength: 256
    minLength: 0
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    type: string
  TooManyAccessPointsException:
    description: The quota for the number of load balancers has been reached.
    properties: {}
    type: object
  TooManyPoliciesException:
    description: The quota for the number of policies for this load balancer has been reached.
    properties: {}
    type: object
  TooManyTagsException:
    description: The quota for the number of tags that can be assigned to a load balancer has been reached.
    properties: {}
    type: object
  UnhealthyThreshold:
    maximum: 10
    minimum: 2
    type: integer
  UnsupportedProtocolException:
    description: The specified protocol or signature version is not supported.
    properties: {}
    type: object
  VPCId:
    type: string
