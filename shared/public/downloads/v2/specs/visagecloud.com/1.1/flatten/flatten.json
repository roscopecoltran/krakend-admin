{
	"basePath": "/",
	"definitions.RestResponse.properties.message.type": "string",
	"definitions.RestResponse.properties.payload.type": "object",
	"definitions.RestResponse.properties.status.type": "string",
	"definitions.RestResponse.type": "object",
	"host": "visagecloud.com",
	"info.contact.email": "office@visagecloud.com",
	"info.contact.name": "VisageCloud",
	"info.contact.url": "https://visagecloud.com",
	"info.description": "Face search, recognition \u0026 classification API. Just make a call to our REST API each time your app needs to access face recognition and classification capabilities.",
	"info.license.name": "As per Developer Terms of Use",
	"info.license.url": "https://visagecloud.com/developer-terms-of-use",
	"info.termsOfService": "https://visagecloud.com/terms-of-use",
	"info.title": "VisageCloud",
	"info.version": "1.1",
	"info.x-apisguru-categories.length": 1,
	"info.x-apisguru-categories[0]": "search",
	"info.x-logo.url": "https://api.apis.guru/v2/cache/logo/https_visagecloud.com_visage-cloud-logo.png",
	"info.x-origin.length": 1,
	"info.x-origin[0].format": "swagger",
	"info.x-origin[0].url": "https://visagecloud.com/v2/api-docs",
	"info.x-origin[0].version": "2.0",
	"info.x-preferred": true,
	"info.x-providerName": "visagecloud.com",
	"paths./rest/v1.1/analysis/detection.post.consumes.length": 1,
	"paths./rest/v1.1/analysis/detection.post.consumes[0]": "multipart/form-data",
	"paths./rest/v1.1/analysis/detection.post.operationId": "performAnalysisUsingPOST",
	"paths./rest/v1.1/analysis/detection.post.parameters.length": 4,
	"paths./rest/v1.1/analysis/detection.post.parameters[0].description": "The secretKey or readOnlyKey provided by VisageCloud",
	"paths./rest/v1.1/analysis/detection.post.parameters[0].in": "query",
	"paths./rest/v1.1/analysis/detection.post.parameters[0].name": "secretKey",
	"paths./rest/v1.1/analysis/detection.post.parameters[0].required": true,
	"paths./rest/v1.1/analysis/detection.post.parameters[0].type": "string",
	"paths./rest/v1.1/analysis/detection.post.parameters[1].default": true,
	"paths./rest/v1.1/analysis/detection.post.parameters[1].description": "Boolean value indicating whether you want the original picture to be stored for later retrieval",
	"paths./rest/v1.1/analysis/detection.post.parameters[1].in": "query",
	"paths./rest/v1.1/analysis/detection.post.parameters[1].name": "storePicture",
	"paths./rest/v1.1/analysis/detection.post.parameters[1].required": false,
	"paths./rest/v1.1/analysis/detection.post.parameters[1].type": "boolean",
	"paths./rest/v1.1/analysis/detection.post.parameters[2].description": "The URL of the picture, assuming it is served by a third party server. Server should be accesible from the Internet or through another netwoek by VisageCloud infrastructure",
	"paths./rest/v1.1/analysis/detection.post.parameters[2].in": "query",
	"paths./rest/v1.1/analysis/detection.post.parameters[2].name": "pictureURL",
	"paths./rest/v1.1/analysis/detection.post.parameters[2].required": false,
	"paths./rest/v1.1/analysis/detection.post.parameters[2].type": "string",
	"paths./rest/v1.1/analysis/detection.post.parameters[3].description": "The multipart/form-data version of the image, in case a direct upload is used. At least one of picture or pictureURL must be present",
	"paths./rest/v1.1/analysis/detection.post.parameters[3].in": "formData",
	"paths./rest/v1.1/analysis/detection.post.parameters[3].name": "picture",
	"paths./rest/v1.1/analysis/detection.post.parameters[3].required": false,
	"paths./rest/v1.1/analysis/detection.post.parameters[3].type": "string",
	"paths./rest/v1.1/analysis/detection.post.produces.length": 1,
	"paths./rest/v1.1/analysis/detection.post.produces[0]": "application/json",
	"paths./rest/v1.1/analysis/detection.post.responses.200.description": "OK",
	"paths./rest/v1.1/analysis/detection.post.responses.200.schema.$ref": "#/definitions/RestResponse",
	"paths./rest/v1.1/analysis/detection.post.responses.201.description": "Created",
	"paths./rest/v1.1/analysis/detection.post.responses.401.description": "Unauthorized",
	"paths./rest/v1.1/analysis/detection.post.responses.403.description": "Forbidden",
	"paths./rest/v1.1/analysis/detection.post.responses.404.description": "Not Found",
	"paths./rest/v1.1/analysis/detection.post.summary": "Perform detection on a given picture or picture URL",
	"paths./rest/v1.1/analysis/detection.post.tags.length": 1,
	"paths./rest/v1.1/analysis/detection.post.tags[0]": "Analysis",
	"paths./rest/v1.1/analysis/listLatest.get.consumes.length": 1,
	"paths./rest/v1.1/analysis/listLatest.get.consumes[0]": "application/json",
	"paths./rest/v1.1/analysis/listLatest.get.operationId": "retriveLatestUsingGET",
	"paths./rest/v1.1/analysis/listLatest.get.parameters.length": 2,
	"paths./rest/v1.1/analysis/listLatest.get.parameters[0].description": "The secretKey or readOnlyKey provided by VisageCloud",
	"paths./rest/v1.1/analysis/listLatest.get.parameters[0].in": "query",
	"paths./rest/v1.1/analysis/listLatest.get.parameters[0].name": "secretKey",
	"paths./rest/v1.1/analysis/listLatest.get.parameters[0].required": true,
	"paths./rest/v1.1/analysis/listLatest.get.parameters[0].type": "string",
	"paths./rest/v1.1/analysis/listLatest.get.parameters[1].default": 100,
	"paths./rest/v1.1/analysis/listLatest.get.parameters[1].description": "How many records to retrieve at a time",
	"paths./rest/v1.1/analysis/listLatest.get.parameters[1].format": "int32",
	"paths./rest/v1.1/analysis/listLatest.get.parameters[1].in": "query",
	"paths./rest/v1.1/analysis/listLatest.get.parameters[1].name": "count",
	"paths./rest/v1.1/analysis/listLatest.get.parameters[1].required": false,
	"paths./rest/v1.1/analysis/listLatest.get.parameters[1].type": "integer",
	"paths./rest/v1.1/analysis/listLatest.get.produces.length": 1,
	"paths./rest/v1.1/analysis/listLatest.get.produces[0]": "application/json",
	"paths./rest/v1.1/analysis/listLatest.get.responses.200.description": "OK",
	"paths./rest/v1.1/analysis/listLatest.get.responses.200.schema.$ref": "#/definitions/RestResponse",
	"paths./rest/v1.1/analysis/listLatest.get.responses.401.description": "Unauthorized",
	"paths./rest/v1.1/analysis/listLatest.get.responses.403.description": "Forbidden",
	"paths./rest/v1.1/analysis/listLatest.get.responses.404.description": "Not Found",
	"paths./rest/v1.1/analysis/listLatest.get.summary": "Retrieve the last *count* operations per current account",
	"paths./rest/v1.1/analysis/listLatest.get.tags.length": 1,
	"paths./rest/v1.1/analysis/listLatest.get.tags[0]": "Analysis",
	"paths./rest/v1.1/analysis/recognition.post.consumes.length": 1,
	"paths./rest/v1.1/analysis/recognition.post.consumes[0]": "multipart/form-data",
	"paths./rest/v1.1/analysis/recognition.post.operationId": "performRecognitionUsingPOST",
	"paths./rest/v1.1/analysis/recognition.post.parameters.length": 7,
	"paths./rest/v1.1/analysis/recognition.post.parameters[0].description": "The secretKey or readOnlyKey provided by VisageCloud",
	"paths./rest/v1.1/analysis/recognition.post.parameters[0].in": "query",
	"paths./rest/v1.1/analysis/recognition.post.parameters[0].name": "secretKey",
	"paths./rest/v1.1/analysis/recognition.post.parameters[0].required": true,
	"paths./rest/v1.1/analysis/recognition.post.parameters[0].type": "string",
	"paths./rest/v1.1/analysis/recognition.post.parameters[1].default": true,
	"paths./rest/v1.1/analysis/recognition.post.parameters[1].description": "Boolean value indicating whether you want the original picture to be stored for later retrieval",
	"paths./rest/v1.1/analysis/recognition.post.parameters[1].in": "query",
	"paths./rest/v1.1/analysis/recognition.post.parameters[1].name": "storePicture",
	"paths./rest/v1.1/analysis/recognition.post.parameters[1].required": false,
	"paths./rest/v1.1/analysis/recognition.post.parameters[1].type": "boolean",
	"paths./rest/v1.1/analysis/recognition.post.parameters[2].description": "Uniquely identified collection that can store multiple profiles",
	"paths./rest/v1.1/analysis/recognition.post.parameters[2].in": "query",
	"paths./rest/v1.1/analysis/recognition.post.parameters[2].name": "collectionId",
	"paths./rest/v1.1/analysis/recognition.post.parameters[2].required": true,
	"paths./rest/v1.1/analysis/recognition.post.parameters[2].type": "string",
	"paths./rest/v1.1/analysis/recognition.post.parameters[3].collectionFormat": "multi",
	"paths./rest/v1.1/analysis/recognition.post.parameters[3].description": "Labels associated with the given picture or picture URL",
	"paths./rest/v1.1/analysis/recognition.post.parameters[3].in": "query",
	"paths./rest/v1.1/analysis/recognition.post.parameters[3].items.type": "string",
	"paths./rest/v1.1/analysis/recognition.post.parameters[3].name": "labels",
	"paths./rest/v1.1/analysis/recognition.post.parameters[3].required": false,
	"paths./rest/v1.1/analysis/recognition.post.parameters[3].type": "array",
	"paths./rest/v1.1/analysis/recognition.post.parameters[4].collectionFormat": "multi",
	"paths./rest/v1.1/analysis/recognition.post.parameters[4].description": "Filters that will be applied on the recognition operation",
	"paths./rest/v1.1/analysis/recognition.post.parameters[4].enum.length": 2,
	"paths./rest/v1.1/analysis/recognition.post.parameters[4].enum[0]": "GENDER_FILTER",
	"paths./rest/v1.1/analysis/recognition.post.parameters[4].enum[1]": "AGE_GROUP_FILTER",
	"paths./rest/v1.1/analysis/recognition.post.parameters[4].in": "query",
	"paths./rest/v1.1/analysis/recognition.post.parameters[4].items.enum.length": 2,
	"paths./rest/v1.1/analysis/recognition.post.parameters[4].items.enum[0]": "GENDER_FILTER",
	"paths./rest/v1.1/analysis/recognition.post.parameters[4].items.enum[1]": "AGE_GROUP_FILTER",
	"paths./rest/v1.1/analysis/recognition.post.parameters[4].items.type": "string",
	"paths./rest/v1.1/analysis/recognition.post.parameters[4].name": "attributeFilters",
	"paths./rest/v1.1/analysis/recognition.post.parameters[4].required": false,
	"paths./rest/v1.1/analysis/recognition.post.parameters[4].type": "array",
	"paths./rest/v1.1/analysis/recognition.post.parameters[5].description": "The URL of the picture",
	"paths./rest/v1.1/analysis/recognition.post.parameters[5].in": "query",
	"paths./rest/v1.1/analysis/recognition.post.parameters[5].name": "pictureURL",
	"paths./rest/v1.1/analysis/recognition.post.parameters[5].required": false,
	"paths./rest/v1.1/analysis/recognition.post.parameters[5].type": "string",
	"paths./rest/v1.1/analysis/recognition.post.parameters[6].description": "The picture itself",
	"paths./rest/v1.1/analysis/recognition.post.parameters[6].in": "formData",
	"paths./rest/v1.1/analysis/recognition.post.parameters[6].name": "picture",
	"paths./rest/v1.1/analysis/recognition.post.parameters[6].required": false,
	"paths./rest/v1.1/analysis/recognition.post.parameters[6].type": "string",
	"paths./rest/v1.1/analysis/recognition.post.produces.length": 1,
	"paths./rest/v1.1/analysis/recognition.post.produces[0]": "application/json",
	"paths./rest/v1.1/analysis/recognition.post.responses.200.description": "OK",
	"paths./rest/v1.1/analysis/recognition.post.responses.200.schema.$ref": "#/definitions/RestResponse",
	"paths./rest/v1.1/analysis/recognition.post.responses.201.description": "Created",
	"paths./rest/v1.1/analysis/recognition.post.responses.401.description": "Unauthorized",
	"paths./rest/v1.1/analysis/recognition.post.responses.403.description": "Forbidden",
	"paths./rest/v1.1/analysis/recognition.post.responses.404.description": "Not Found",
	"paths./rest/v1.1/analysis/recognition.post.summary": "Perform labeled recognition on a given picture or picture URL",
	"paths./rest/v1.1/analysis/recognition.post.tags.length": 1,
	"paths./rest/v1.1/analysis/recognition.post.tags[0]": "Analysis",
	"paths./rest/v1.1/analysis/retrieve.get.consumes.length": 1,
	"paths./rest/v1.1/analysis/retrieve.get.consumes[0]": "application/json",
	"paths./rest/v1.1/analysis/retrieve.get.operationId": "retrieveAnalysisUsingGET",
	"paths./rest/v1.1/analysis/retrieve.get.parameters.length": 2,
	"paths./rest/v1.1/analysis/retrieve.get.parameters[0].description": "The secretKey or readOnlyKey provided by VisageCloud",
	"paths./rest/v1.1/analysis/retrieve.get.parameters[0].in": "query",
	"paths./rest/v1.1/analysis/retrieve.get.parameters[0].name": "secretKey",
	"paths./rest/v1.1/analysis/retrieve.get.parameters[0].required": true,
	"paths./rest/v1.1/analysis/retrieve.get.parameters[0].type": "string",
	"paths./rest/v1.1/analysis/retrieve.get.parameters[1].description": "The ID of the analysis for which the data will be retrieved",
	"paths./rest/v1.1/analysis/retrieve.get.parameters[1].in": "query",
	"paths./rest/v1.1/analysis/retrieve.get.parameters[1].name": "analysisId",
	"paths./rest/v1.1/analysis/retrieve.get.parameters[1].required": true,
	"paths./rest/v1.1/analysis/retrieve.get.parameters[1].type": "string",
	"paths./rest/v1.1/analysis/retrieve.get.produces.length": 1,
	"paths./rest/v1.1/analysis/retrieve.get.produces[0]": "application/json",
	"paths./rest/v1.1/analysis/retrieve.get.responses.200.description": "OK",
	"paths./rest/v1.1/analysis/retrieve.get.responses.200.schema.$ref": "#/definitions/RestResponse",
	"paths./rest/v1.1/analysis/retrieve.get.responses.401.description": "Unauthorized",
	"paths./rest/v1.1/analysis/retrieve.get.responses.403.description": "Forbidden",
	"paths./rest/v1.1/analysis/retrieve.get.responses.404.description": "Not Found",
	"paths./rest/v1.1/analysis/retrieve.get.summary": "Retrieve a complete analysis object including both detection and recognition information",
	"paths./rest/v1.1/analysis/retrieve.get.tags.length": 1,
	"paths./rest/v1.1/analysis/retrieve.get.tags[0]": "Analysis",
	"paths./rest/v1.1/collection/all.get.consumes.length": 1,
	"paths./rest/v1.1/collection/all.get.consumes[0]": "application/json",
	"paths./rest/v1.1/collection/all.get.operationId": "getAllCollectionsUsingGET",
	"paths./rest/v1.1/collection/all.get.parameters.length": 1,
	"paths./rest/v1.1/collection/all.get.parameters[0].description": "The secretKey or readOnlyKey provided by VisageCloud",
	"paths./rest/v1.1/collection/all.get.parameters[0].in": "query",
	"paths./rest/v1.1/collection/all.get.parameters[0].name": "secretKey",
	"paths./rest/v1.1/collection/all.get.parameters[0].required": true,
	"paths./rest/v1.1/collection/all.get.parameters[0].type": "string",
	"paths./rest/v1.1/collection/all.get.produces.length": 1,
	"paths./rest/v1.1/collection/all.get.produces[0]": "application/json",
	"paths./rest/v1.1/collection/all.get.responses.200.description": "OK",
	"paths./rest/v1.1/collection/all.get.responses.200.schema.$ref": "#/definitions/RestResponse",
	"paths./rest/v1.1/collection/all.get.responses.401.description": "Unauthorized",
	"paths./rest/v1.1/collection/all.get.responses.403.description": "Forbidden",
	"paths./rest/v1.1/collection/all.get.responses.404.description": "Not Found",
	"paths./rest/v1.1/collection/all.get.summary": "Retrieve all collections",
	"paths./rest/v1.1/collection/all.get.tags.length": 1,
	"paths./rest/v1.1/collection/all.get.tags[0]": "Collection",
	"paths./rest/v1.1/collection/collection.delete.consumes.length": 1,
	"paths./rest/v1.1/collection/collection.delete.consumes[0]": "application/json",
	"paths./rest/v1.1/collection/collection.delete.operationId": "removeFaceFromProfileUsingDELETE",
	"paths./rest/v1.1/collection/collection.delete.parameters.length": 2,
	"paths./rest/v1.1/collection/collection.delete.parameters[0].description": "The secretKey or readOnlyKey provided by VisageCloud",
	"paths./rest/v1.1/collection/collection.delete.parameters[0].in": "query",
	"paths./rest/v1.1/collection/collection.delete.parameters[0].name": "secretKey",
	"paths./rest/v1.1/collection/collection.delete.parameters[0].required": true,
	"paths./rest/v1.1/collection/collection.delete.parameters[0].type": "string",
	"paths./rest/v1.1/collection/collection.delete.parameters[1].description": "The id of the collection that will be removed",
	"paths./rest/v1.1/collection/collection.delete.parameters[1].in": "query",
	"paths./rest/v1.1/collection/collection.delete.parameters[1].name": "collectionId",
	"paths./rest/v1.1/collection/collection.delete.parameters[1].required": true,
	"paths./rest/v1.1/collection/collection.delete.parameters[1].type": "string",
	"paths./rest/v1.1/collection/collection.delete.produces.length": 1,
	"paths./rest/v1.1/collection/collection.delete.produces[0]": "application/json",
	"paths./rest/v1.1/collection/collection.delete.responses.200.description": "OK",
	"paths./rest/v1.1/collection/collection.delete.responses.200.schema.$ref": "#/definitions/RestResponse",
	"paths./rest/v1.1/collection/collection.delete.responses.204.description": "No Content",
	"paths./rest/v1.1/collection/collection.delete.responses.401.description": "Unauthorized",
	"paths./rest/v1.1/collection/collection.delete.responses.403.description": "Forbidden",
	"paths./rest/v1.1/collection/collection.delete.summary": "Delete existing collection",
	"paths./rest/v1.1/collection/collection.delete.tags.length": 1,
	"paths./rest/v1.1/collection/collection.delete.tags[0]": "Collection",
	"paths./rest/v1.1/collection/collection.get.consumes.length": 1,
	"paths./rest/v1.1/collection/collection.get.consumes[0]": "application/json",
	"paths./rest/v1.1/collection/collection.get.operationId": "getProfilesFromCollectionUsingGET",
	"paths./rest/v1.1/collection/collection.get.parameters.length": 2,
	"paths./rest/v1.1/collection/collection.get.parameters[0].description": "The secretKey or readOnlyKey provided by VisageCloud",
	"paths./rest/v1.1/collection/collection.get.parameters[0].in": "query",
	"paths./rest/v1.1/collection/collection.get.parameters[0].name": "secretKey",
	"paths./rest/v1.1/collection/collection.get.parameters[0].required": true,
	"paths./rest/v1.1/collection/collection.get.parameters[0].type": "string",
	"paths./rest/v1.1/collection/collection.get.parameters[1].description": "The id of the collection for which the data will be retrieved",
	"paths./rest/v1.1/collection/collection.get.parameters[1].in": "query",
	"paths./rest/v1.1/collection/collection.get.parameters[1].name": "collectionId",
	"paths./rest/v1.1/collection/collection.get.parameters[1].required": true,
	"paths./rest/v1.1/collection/collection.get.parameters[1].type": "string",
	"paths./rest/v1.1/collection/collection.get.produces.length": 1,
	"paths./rest/v1.1/collection/collection.get.produces[0]": "application/json",
	"paths./rest/v1.1/collection/collection.get.responses.200.description": "OK",
	"paths./rest/v1.1/collection/collection.get.responses.200.schema.$ref": "#/definitions/RestResponse",
	"paths./rest/v1.1/collection/collection.get.responses.401.description": "Unauthorized",
	"paths./rest/v1.1/collection/collection.get.responses.403.description": "Forbidden",
	"paths./rest/v1.1/collection/collection.get.responses.404.description": "Not Found",
	"paths./rest/v1.1/collection/collection.get.summary": "Retrieve existing collection content",
	"paths./rest/v1.1/collection/collection.get.tags.length": 1,
	"paths./rest/v1.1/collection/collection.get.tags[0]": "Collection",
	"paths./rest/v1.1/collection/collection.post.consumes.length": 1,
	"paths./rest/v1.1/collection/collection.post.consumes[0]": "application/json",
	"paths./rest/v1.1/collection/collection.post.operationId": "addCollectionUsingPOST",
	"paths./rest/v1.1/collection/collection.post.parameters.length": 2,
	"paths./rest/v1.1/collection/collection.post.parameters[0].description": "The secretKey or readOnlyKey provided by VisageCloud",
	"paths./rest/v1.1/collection/collection.post.parameters[0].in": "query",
	"paths./rest/v1.1/collection/collection.post.parameters[0].name": "secretKey",
	"paths./rest/v1.1/collection/collection.post.parameters[0].required": true,
	"paths./rest/v1.1/collection/collection.post.parameters[0].type": "string",
	"paths./rest/v1.1/collection/collection.post.parameters[1].description": "The name of the collection that will be created",
	"paths./rest/v1.1/collection/collection.post.parameters[1].in": "query",
	"paths./rest/v1.1/collection/collection.post.parameters[1].name": "collectionName",
	"paths./rest/v1.1/collection/collection.post.parameters[1].required": true,
	"paths./rest/v1.1/collection/collection.post.parameters[1].type": "string",
	"paths./rest/v1.1/collection/collection.post.produces.length": 1,
	"paths./rest/v1.1/collection/collection.post.produces[0]": "application/json",
	"paths./rest/v1.1/collection/collection.post.responses.200.description": "OK",
	"paths./rest/v1.1/collection/collection.post.responses.200.schema.$ref": "#/definitions/RestResponse",
	"paths./rest/v1.1/collection/collection.post.responses.201.description": "Created",
	"paths./rest/v1.1/collection/collection.post.responses.401.description": "Unauthorized",
	"paths./rest/v1.1/collection/collection.post.responses.403.description": "Forbidden",
	"paths./rest/v1.1/collection/collection.post.responses.404.description": "Not Found",
	"paths./rest/v1.1/collection/collection.post.summary": "Create new empty collection with given name",
	"paths./rest/v1.1/collection/collection.post.tags.length": 1,
	"paths./rest/v1.1/collection/collection.post.tags[0]": "Collection",
	"paths./rest/v1.1/profile/enrollmentStatus.get.consumes.length": 1,
	"paths./rest/v1.1/profile/enrollmentStatus.get.consumes[0]": "application/json",
	"paths./rest/v1.1/profile/enrollmentStatus.get.operationId": "getProfileEnrollmentStatusUsingGET",
	"paths./rest/v1.1/profile/enrollmentStatus.get.parameters.length": 3,
	"paths./rest/v1.1/profile/enrollmentStatus.get.parameters[0].description": "The secretKey or readOnlyKey provided by VisageCloud",
	"paths./rest/v1.1/profile/enrollmentStatus.get.parameters[0].in": "query",
	"paths./rest/v1.1/profile/enrollmentStatus.get.parameters[0].name": "secretKey",
	"paths./rest/v1.1/profile/enrollmentStatus.get.parameters[0].required": true,
	"paths./rest/v1.1/profile/enrollmentStatus.get.parameters[0].type": "string",
	"paths./rest/v1.1/profile/enrollmentStatus.get.parameters[1].description": "The profile that contains the faces",
	"paths./rest/v1.1/profile/enrollmentStatus.get.parameters[1].in": "query",
	"paths./rest/v1.1/profile/enrollmentStatus.get.parameters[1].name": "profileId",
	"paths./rest/v1.1/profile/enrollmentStatus.get.parameters[1].required": true,
	"paths./rest/v1.1/profile/enrollmentStatus.get.parameters[1].type": "string",
	"paths./rest/v1.1/profile/enrollmentStatus.get.parameters[2].description": "The collection that contains the profile",
	"paths./rest/v1.1/profile/enrollmentStatus.get.parameters[2].in": "query",
	"paths./rest/v1.1/profile/enrollmentStatus.get.parameters[2].name": "collectionId",
	"paths./rest/v1.1/profile/enrollmentStatus.get.parameters[2].required": true,
	"paths./rest/v1.1/profile/enrollmentStatus.get.parameters[2].type": "string",
	"paths./rest/v1.1/profile/enrollmentStatus.get.produces.length": 1,
	"paths./rest/v1.1/profile/enrollmentStatus.get.produces[0]": "application/json",
	"paths./rest/v1.1/profile/enrollmentStatus.get.responses.200.description": "OK",
	"paths./rest/v1.1/profile/enrollmentStatus.get.responses.200.schema.$ref": "#/definitions/RestResponse",
	"paths./rest/v1.1/profile/enrollmentStatus.get.responses.401.description": "Unauthorized",
	"paths./rest/v1.1/profile/enrollmentStatus.get.responses.403.description": "Forbidden",
	"paths./rest/v1.1/profile/enrollmentStatus.get.responses.404.description": "Not Found",
	"paths./rest/v1.1/profile/enrollmentStatus.get.summary": "Gets the enrollment status of a profile: information on whether it is suitable for authentication.",
	"paths./rest/v1.1/profile/enrollmentStatus.get.tags.length": 1,
	"paths./rest/v1.1/profile/enrollmentStatus.get.tags[0]": "Profile",
	"paths./rest/v1.1/profile/map.delete.consumes.length": 1,
	"paths./rest/v1.1/profile/map.delete.consumes[0]": "application/json",
	"paths./rest/v1.1/profile/map.delete.operationId": "removeFaceFromProfileUsingDELETE_1",
	"paths./rest/v1.1/profile/map.delete.parameters.length": 4,
	"paths./rest/v1.1/profile/map.delete.parameters[0].description": "The secretKey or readOnlyKey provided by VisageCloud",
	"paths./rest/v1.1/profile/map.delete.parameters[0].in": "query",
	"paths./rest/v1.1/profile/map.delete.parameters[0].name": "secretKey",
	"paths./rest/v1.1/profile/map.delete.parameters[0].required": true,
	"paths./rest/v1.1/profile/map.delete.parameters[0].type": "string",
	"paths./rest/v1.1/profile/map.delete.parameters[1].description": "The face that will be removed from a profile",
	"paths./rest/v1.1/profile/map.delete.parameters[1].in": "query",
	"paths./rest/v1.1/profile/map.delete.parameters[1].name": "faceHash",
	"paths./rest/v1.1/profile/map.delete.parameters[1].required": true,
	"paths./rest/v1.1/profile/map.delete.parameters[1].type": "string",
	"paths./rest/v1.1/profile/map.delete.parameters[2].description": "The profile that contains the face",
	"paths./rest/v1.1/profile/map.delete.parameters[2].in": "query",
	"paths./rest/v1.1/profile/map.delete.parameters[2].name": "profileId",
	"paths./rest/v1.1/profile/map.delete.parameters[2].required": true,
	"paths./rest/v1.1/profile/map.delete.parameters[2].type": "string",
	"paths./rest/v1.1/profile/map.delete.parameters[3].description": "The collection that contains the profile",
	"paths./rest/v1.1/profile/map.delete.parameters[3].in": "query",
	"paths./rest/v1.1/profile/map.delete.parameters[3].name": "collectionId",
	"paths./rest/v1.1/profile/map.delete.parameters[3].required": true,
	"paths./rest/v1.1/profile/map.delete.parameters[3].type": "string",
	"paths./rest/v1.1/profile/map.delete.produces.length": 1,
	"paths./rest/v1.1/profile/map.delete.produces[0]": "*/*",
	"paths./rest/v1.1/profile/map.delete.responses.200.description": "OK",
	"paths./rest/v1.1/profile/map.delete.responses.200.schema.$ref": "#/definitions/RestResponse",
	"paths./rest/v1.1/profile/map.delete.responses.204.description": "No Content",
	"paths./rest/v1.1/profile/map.delete.responses.401.description": "Unauthorized",
	"paths./rest/v1.1/profile/map.delete.responses.403.description": "Forbidden",
	"paths./rest/v1.1/profile/map.delete.summary": "Removes (unmaps) a face, identified by faceHash, from a profile, identified by profileId",
	"paths./rest/v1.1/profile/map.delete.tags.length": 1,
	"paths./rest/v1.1/profile/map.delete.tags[0]": "Profile",
	"paths./rest/v1.1/profile/map.get.consumes.length": 1,
	"paths./rest/v1.1/profile/map.get.consumes[0]": "application/json",
	"paths./rest/v1.1/profile/map.get.operationId": "getFacesFromProfileUsingGET",
	"paths./rest/v1.1/profile/map.get.parameters.length": 3,
	"paths./rest/v1.1/profile/map.get.parameters[0].description": "The secretKey or readOnlyKey provided by VisageCloud",
	"paths./rest/v1.1/profile/map.get.parameters[0].in": "query",
	"paths./rest/v1.1/profile/map.get.parameters[0].name": "secretKey",
	"paths./rest/v1.1/profile/map.get.parameters[0].required": true,
	"paths./rest/v1.1/profile/map.get.parameters[0].type": "string",
	"paths./rest/v1.1/profile/map.get.parameters[1].description": "The profile that contains the faces",
	"paths./rest/v1.1/profile/map.get.parameters[1].in": "query",
	"paths./rest/v1.1/profile/map.get.parameters[1].name": "profileId",
	"paths./rest/v1.1/profile/map.get.parameters[1].required": true,
	"paths./rest/v1.1/profile/map.get.parameters[1].type": "string",
	"paths./rest/v1.1/profile/map.get.parameters[2].description": "The collection that contains the profile",
	"paths./rest/v1.1/profile/map.get.parameters[2].in": "query",
	"paths./rest/v1.1/profile/map.get.parameters[2].name": "collectionId",
	"paths./rest/v1.1/profile/map.get.parameters[2].required": true,
	"paths./rest/v1.1/profile/map.get.parameters[2].type": "string",
	"paths./rest/v1.1/profile/map.get.produces.length": 1,
	"paths./rest/v1.1/profile/map.get.produces[0]": "application/json",
	"paths./rest/v1.1/profile/map.get.responses.200.description": "OK",
	"paths./rest/v1.1/profile/map.get.responses.200.schema.$ref": "#/definitions/RestResponse",
	"paths./rest/v1.1/profile/map.get.responses.401.description": "Unauthorized",
	"paths./rest/v1.1/profile/map.get.responses.403.description": "Forbidden",
	"paths./rest/v1.1/profile/map.get.responses.404.description": "Not Found",
	"paths./rest/v1.1/profile/map.get.summary": "Gets all the faceHashes associated to a profile",
	"paths./rest/v1.1/profile/map.get.tags.length": 1,
	"paths./rest/v1.1/profile/map.get.tags[0]": "Profile",
	"paths./rest/v1.1/profile/map.post.consumes.length": 1,
	"paths./rest/v1.1/profile/map.post.consumes[0]": "application/json",
	"paths./rest/v1.1/profile/map.post.operationId": "mapFaceToProfileUsingPOST",
	"paths./rest/v1.1/profile/map.post.parameters.length": 4,
	"paths./rest/v1.1/profile/map.post.parameters[0].description": "The secretKey or readOnlyKey provided by VisageCloud",
	"paths./rest/v1.1/profile/map.post.parameters[0].in": "query",
	"paths./rest/v1.1/profile/map.post.parameters[0].name": "secretKey",
	"paths./rest/v1.1/profile/map.post.parameters[0].required": true,
	"paths./rest/v1.1/profile/map.post.parameters[0].type": "string",
	"paths./rest/v1.1/profile/map.post.parameters[1].description": "The face that will be added to a profile",
	"paths./rest/v1.1/profile/map.post.parameters[1].in": "query",
	"paths./rest/v1.1/profile/map.post.parameters[1].name": "faceHash",
	"paths./rest/v1.1/profile/map.post.parameters[1].required": true,
	"paths./rest/v1.1/profile/map.post.parameters[1].type": "string",
	"paths./rest/v1.1/profile/map.post.parameters[2].description": "The profile that will store the face",
	"paths./rest/v1.1/profile/map.post.parameters[2].in": "query",
	"paths./rest/v1.1/profile/map.post.parameters[2].name": "profileId",
	"paths./rest/v1.1/profile/map.post.parameters[2].required": true,
	"paths./rest/v1.1/profile/map.post.parameters[2].type": "string",
	"paths./rest/v1.1/profile/map.post.parameters[3].description": "The collection that contains the profile",
	"paths./rest/v1.1/profile/map.post.parameters[3].in": "query",
	"paths./rest/v1.1/profile/map.post.parameters[3].name": "collectionId",
	"paths./rest/v1.1/profile/map.post.parameters[3].required": true,
	"paths./rest/v1.1/profile/map.post.parameters[3].type": "string",
	"paths./rest/v1.1/profile/map.post.produces.length": 1,
	"paths./rest/v1.1/profile/map.post.produces[0]": "application/json",
	"paths./rest/v1.1/profile/map.post.responses.200.description": "OK",
	"paths./rest/v1.1/profile/map.post.responses.200.schema.$ref": "#/definitions/RestResponse",
	"paths./rest/v1.1/profile/map.post.responses.201.description": "Created",
	"paths./rest/v1.1/profile/map.post.responses.401.description": "Unauthorized",
	"paths./rest/v1.1/profile/map.post.responses.403.description": "Forbidden",
	"paths./rest/v1.1/profile/map.post.responses.404.description": "Not Found",
	"paths./rest/v1.1/profile/map.post.summary": "Adds (maps) a face, identified by faceHash, to a profile, identified by profileId",
	"paths./rest/v1.1/profile/map.post.tags.length": 1,
	"paths./rest/v1.1/profile/map.post.tags[0]": "Profile",
	"paths./rest/v1.1/profile/profile.post.consumes.length": 1,
	"paths./rest/v1.1/profile/profile.post.consumes[0]": "application/json",
	"paths./rest/v1.1/profile/profile.post.operationId": "addProfileUsingPOST",
	"paths./rest/v1.1/profile/profile.post.parameters.length": 5,
	"paths./rest/v1.1/profile/profile.post.parameters[0].description": "The secretKey or readOnlyKey provided by VisageCloud",
	"paths./rest/v1.1/profile/profile.post.parameters[0].in": "query",
	"paths./rest/v1.1/profile/profile.post.parameters[0].name": "secretKey",
	"paths./rest/v1.1/profile/profile.post.parameters[0].required": true,
	"paths./rest/v1.1/profile/profile.post.parameters[0].type": "string",
	"paths./rest/v1.1/profile/profile.post.parameters[1].description": "Uniquely identified collection that can store multiple profiles",
	"paths./rest/v1.1/profile/profile.post.parameters[1].in": "query",
	"paths./rest/v1.1/profile/profile.post.parameters[1].name": "collectionId",
	"paths./rest/v1.1/profile/profile.post.parameters[1].required": true,
	"paths./rest/v1.1/profile/profile.post.parameters[1].type": "string",
	"paths./rest/v1.1/profile/profile.post.parameters[2].description": "External reference to additional information you don’t want to share with VisageCloud",
	"paths./rest/v1.1/profile/profile.post.parameters[2].in": "query",
	"paths./rest/v1.1/profile/profile.post.parameters[2].name": "externalId",
	"paths./rest/v1.1/profile/profile.post.parameters[2].required": false,
	"paths./rest/v1.1/profile/profile.post.parameters[2].type": "string",
	"paths./rest/v1.1/profile/profile.post.parameters[3].description": "Human-readable label for the profile",
	"paths./rest/v1.1/profile/profile.post.parameters[3].in": "query",
	"paths./rest/v1.1/profile/profile.post.parameters[3].name": "screenName",
	"paths./rest/v1.1/profile/profile.post.parameters[3].required": false,
	"paths./rest/v1.1/profile/profile.post.parameters[3].type": "string",
	"paths./rest/v1.1/profile/profile.post.parameters[4].collectionFormat": "multi",
	"paths./rest/v1.1/profile/profile.post.parameters[4].description": "Allows you to do finer filtering in face recognition",
	"paths./rest/v1.1/profile/profile.post.parameters[4].in": "query",
	"paths./rest/v1.1/profile/profile.post.parameters[4].items.type": "string",
	"paths./rest/v1.1/profile/profile.post.parameters[4].name": "labels",
	"paths./rest/v1.1/profile/profile.post.parameters[4].required": false,
	"paths./rest/v1.1/profile/profile.post.parameters[4].type": "array",
	"paths./rest/v1.1/profile/profile.post.produces.length": 1,
	"paths./rest/v1.1/profile/profile.post.produces[0]": "application/json",
	"paths./rest/v1.1/profile/profile.post.responses.200.description": "OK",
	"paths./rest/v1.1/profile/profile.post.responses.200.schema.$ref": "#/definitions/RestResponse",
	"paths./rest/v1.1/profile/profile.post.responses.201.description": "Created",
	"paths./rest/v1.1/profile/profile.post.responses.401.description": "Unauthorized",
	"paths./rest/v1.1/profile/profile.post.responses.403.description": "Forbidden",
	"paths./rest/v1.1/profile/profile.post.responses.404.description": "Not Found",
	"paths./rest/v1.1/profile/profile.post.summary": "Creates a new profile with no faces associated to it (empty profile)",
	"paths./rest/v1.1/profile/profile.post.tags.length": 1,
	"paths./rest/v1.1/profile/profile.post.tags[0]": "Profile",
	"paths./rest/v1.1/stream/frames.get.consumes.length": 1,
	"paths./rest/v1.1/stream/frames.get.consumes[0]": "application/json",
	"paths./rest/v1.1/stream/frames.get.operationId": "getLastNFramesUsingGET",
	"paths./rest/v1.1/stream/frames.get.parameters.length": 3,
	"paths./rest/v1.1/stream/frames.get.parameters[0].description": "The secretKey or readOnlyKey provided by VisageCloud",
	"paths./rest/v1.1/stream/frames.get.parameters[0].in": "query",
	"paths./rest/v1.1/stream/frames.get.parameters[0].name": "secretKey",
	"paths./rest/v1.1/stream/frames.get.parameters[0].required": true,
	"paths./rest/v1.1/stream/frames.get.parameters[0].type": "string",
	"paths./rest/v1.1/stream/frames.get.parameters[1].description": "The id of the stream for which the frames will be retrieved",
	"paths./rest/v1.1/stream/frames.get.parameters[1].in": "query",
	"paths./rest/v1.1/stream/frames.get.parameters[1].name": "streamId",
	"paths./rest/v1.1/stream/frames.get.parameters[1].required": true,
	"paths./rest/v1.1/stream/frames.get.parameters[1].type": "string",
	"paths./rest/v1.1/stream/frames.get.parameters[2].default": 10,
	"paths./rest/v1.1/stream/frames.get.parameters[2].description": "How many frames to retrieve at a time",
	"paths./rest/v1.1/stream/frames.get.parameters[2].format": "int32",
	"paths./rest/v1.1/stream/frames.get.parameters[2].in": "query",
	"paths./rest/v1.1/stream/frames.get.parameters[2].name": "count",
	"paths./rest/v1.1/stream/frames.get.parameters[2].required": false,
	"paths./rest/v1.1/stream/frames.get.parameters[2].type": "integer",
	"paths./rest/v1.1/stream/frames.get.produces.length": 1,
	"paths./rest/v1.1/stream/frames.get.produces[0]": "application/json",
	"paths./rest/v1.1/stream/frames.get.responses.200.description": "OK",
	"paths./rest/v1.1/stream/frames.get.responses.200.schema.$ref": "#/definitions/RestResponse",
	"paths./rest/v1.1/stream/frames.get.responses.401.description": "Unauthorized",
	"paths./rest/v1.1/stream/frames.get.responses.403.description": "Forbidden",
	"paths./rest/v1.1/stream/frames.get.responses.404.description": "Not Found",
	"paths./rest/v1.1/stream/frames.get.summary": "Get last processed N frames from stream",
	"paths./rest/v1.1/stream/frames.get.tags.length": 1,
	"paths./rest/v1.1/stream/frames.get.tags[0]": "Stream",
	"paths./rest/v1.1/stream/start.patch.consumes.length": 1,
	"paths./rest/v1.1/stream/start.patch.consumes[0]": "application/json",
	"paths./rest/v1.1/stream/start.patch.operationId": "startStreamUsingPATCH",
	"paths./rest/v1.1/stream/start.patch.parameters.length": 2,
	"paths./rest/v1.1/stream/start.patch.parameters[0].description": "The secretKey or readOnlyKey provided by VisageCloud",
	"paths./rest/v1.1/stream/start.patch.parameters[0].in": "query",
	"paths./rest/v1.1/stream/start.patch.parameters[0].name": "secretKey",
	"paths./rest/v1.1/stream/start.patch.parameters[0].required": true,
	"paths./rest/v1.1/stream/start.patch.parameters[0].type": "string",
	"paths./rest/v1.1/stream/start.patch.parameters[1].description": "The id of the stream that will be started",
	"paths./rest/v1.1/stream/start.patch.parameters[1].in": "query",
	"paths./rest/v1.1/stream/start.patch.parameters[1].name": "id",
	"paths./rest/v1.1/stream/start.patch.parameters[1].required": true,
	"paths./rest/v1.1/stream/start.patch.parameters[1].type": "string",
	"paths./rest/v1.1/stream/start.patch.produces.length": 1,
	"paths./rest/v1.1/stream/start.patch.produces[0]": "application/json",
	"paths./rest/v1.1/stream/start.patch.responses.200.description": "OK",
	"paths./rest/v1.1/stream/start.patch.responses.200.schema.$ref": "#/definitions/RestResponse",
	"paths./rest/v1.1/stream/start.patch.responses.204.description": "No Content",
	"paths./rest/v1.1/stream/start.patch.responses.401.description": "Unauthorized",
	"paths./rest/v1.1/stream/start.patch.responses.403.description": "Forbidden",
	"paths./rest/v1.1/stream/start.patch.summary": "Start existing stream",
	"paths./rest/v1.1/stream/start.patch.tags.length": 1,
	"paths./rest/v1.1/stream/start.patch.tags[0]": "Stream",
	"paths./rest/v1.1/stream/stop.patch.consumes.length": 1,
	"paths./rest/v1.1/stream/stop.patch.consumes[0]": "application/json",
	"paths./rest/v1.1/stream/stop.patch.operationId": "stopStreamUsingPATCH",
	"paths./rest/v1.1/stream/stop.patch.parameters.length": 2,
	"paths./rest/v1.1/stream/stop.patch.parameters[0].description": "The secretKey or readOnlyKey provided by VisageCloud",
	"paths./rest/v1.1/stream/stop.patch.parameters[0].in": "query",
	"paths./rest/v1.1/stream/stop.patch.parameters[0].name": "secretKey",
	"paths./rest/v1.1/stream/stop.patch.parameters[0].required": true,
	"paths./rest/v1.1/stream/stop.patch.parameters[0].type": "string",
	"paths./rest/v1.1/stream/stop.patch.parameters[1].description": "The id of the stream that will be stopped",
	"paths./rest/v1.1/stream/stop.patch.parameters[1].in": "query",
	"paths./rest/v1.1/stream/stop.patch.parameters[1].name": "id",
	"paths./rest/v1.1/stream/stop.patch.parameters[1].required": true,
	"paths./rest/v1.1/stream/stop.patch.parameters[1].type": "string",
	"paths./rest/v1.1/stream/stop.patch.produces.length": 1,
	"paths./rest/v1.1/stream/stop.patch.produces[0]": "application/json",
	"paths./rest/v1.1/stream/stop.patch.responses.200.description": "OK",
	"paths./rest/v1.1/stream/stop.patch.responses.200.schema.$ref": "#/definitions/RestResponse",
	"paths./rest/v1.1/stream/stop.patch.responses.204.description": "No Content",
	"paths./rest/v1.1/stream/stop.patch.responses.401.description": "Unauthorized",
	"paths./rest/v1.1/stream/stop.patch.responses.403.description": "Forbidden",
	"paths./rest/v1.1/stream/stop.patch.summary": "Stop existing stream",
	"paths./rest/v1.1/stream/stop.patch.tags.length": 1,
	"paths./rest/v1.1/stream/stop.patch.tags[0]": "Stream",
	"paths./rest/v1.1/stream/stream.delete.consumes.length": 1,
	"paths./rest/v1.1/stream/stream.delete.consumes[0]": "application/json",
	"paths./rest/v1.1/stream/stream.delete.operationId": "removeStreamUsingDELETE",
	"paths./rest/v1.1/stream/stream.delete.parameters.length": 2,
	"paths./rest/v1.1/stream/stream.delete.parameters[0].description": "The secretKey or readOnlyKey provided by VisageCloud",
	"paths./rest/v1.1/stream/stream.delete.parameters[0].in": "query",
	"paths./rest/v1.1/stream/stream.delete.parameters[0].name": "secretKey",
	"paths./rest/v1.1/stream/stream.delete.parameters[0].required": true,
	"paths./rest/v1.1/stream/stream.delete.parameters[0].type": "string",
	"paths./rest/v1.1/stream/stream.delete.parameters[1].description": "The id of the stream that will be removed",
	"paths./rest/v1.1/stream/stream.delete.parameters[1].in": "query",
	"paths./rest/v1.1/stream/stream.delete.parameters[1].name": "id",
	"paths./rest/v1.1/stream/stream.delete.parameters[1].required": true,
	"paths./rest/v1.1/stream/stream.delete.parameters[1].type": "string",
	"paths./rest/v1.1/stream/stream.delete.produces.length": 1,
	"paths./rest/v1.1/stream/stream.delete.produces[0]": "application/json",
	"paths./rest/v1.1/stream/stream.delete.responses.200.description": "OK",
	"paths./rest/v1.1/stream/stream.delete.responses.200.schema.$ref": "#/definitions/RestResponse",
	"paths./rest/v1.1/stream/stream.delete.responses.204.description": "No Content",
	"paths./rest/v1.1/stream/stream.delete.responses.401.description": "Unauthorized",
	"paths./rest/v1.1/stream/stream.delete.responses.403.description": "Forbidden",
	"paths./rest/v1.1/stream/stream.delete.summary": "Delete existing stream",
	"paths./rest/v1.1/stream/stream.delete.tags.length": 1,
	"paths./rest/v1.1/stream/stream.delete.tags[0]": "Stream",
	"paths./rest/v1.1/stream/stream.post.consumes.length": 1,
	"paths./rest/v1.1/stream/stream.post.consumes[0]": "application/json",
	"paths./rest/v1.1/stream/stream.post.operationId": "addStreamUsingPOST",
	"paths./rest/v1.1/stream/stream.post.parameters.length": 8,
	"paths./rest/v1.1/stream/stream.post.parameters[0].description": "The secretKey or readOnlyKey provided by VisageCloud",
	"paths./rest/v1.1/stream/stream.post.parameters[0].in": "query",
	"paths./rest/v1.1/stream/stream.post.parameters[0].name": "secretKey",
	"paths./rest/v1.1/stream/stream.post.parameters[0].required": true,
	"paths./rest/v1.1/stream/stream.post.parameters[0].type": "string",
	"paths./rest/v1.1/stream/stream.post.parameters[1].description": "The name of the stream that will be created",
	"paths./rest/v1.1/stream/stream.post.parameters[1].in": "query",
	"paths./rest/v1.1/stream/stream.post.parameters[1].name": "name",
	"paths./rest/v1.1/stream/stream.post.parameters[1].required": true,
	"paths./rest/v1.1/stream/stream.post.parameters[1].type": "string",
	"paths./rest/v1.1/stream/stream.post.parameters[2].description": "The url of the stream",
	"paths./rest/v1.1/stream/stream.post.parameters[2].in": "query",
	"paths./rest/v1.1/stream/stream.post.parameters[2].name": "url",
	"paths./rest/v1.1/stream/stream.post.parameters[2].required": true,
	"paths./rest/v1.1/stream/stream.post.parameters[2].type": "string",
	"paths./rest/v1.1/stream/stream.post.parameters[3].default": "WEBRTC_PULL",
	"paths./rest/v1.1/stream/stream.post.parameters[3].description": "Streaming method",
	"paths./rest/v1.1/stream/stream.post.parameters[3].enum.length": 3,
	"paths./rest/v1.1/stream/stream.post.parameters[3].enum[0]": "WEBRTC_PULL",
	"paths./rest/v1.1/stream/stream.post.parameters[3].enum[1]": "WEBRTC_PUSH",
	"paths./rest/v1.1/stream/stream.post.parameters[3].enum[2]": "SNAPSHOT_PULL",
	"paths./rest/v1.1/stream/stream.post.parameters[3].in": "query",
	"paths./rest/v1.1/stream/stream.post.parameters[3].name": "method",
	"paths./rest/v1.1/stream/stream.post.parameters[3].required": false,
	"paths./rest/v1.1/stream/stream.post.parameters[3].type": "string",
	"paths./rest/v1.1/stream/stream.post.parameters[4].description": "Username",
	"paths./rest/v1.1/stream/stream.post.parameters[4].in": "query",
	"paths./rest/v1.1/stream/stream.post.parameters[4].name": "username",
	"paths./rest/v1.1/stream/stream.post.parameters[4].required": true,
	"paths./rest/v1.1/stream/stream.post.parameters[4].type": "string",
	"paths./rest/v1.1/stream/stream.post.parameters[5].description": "Password",
	"paths./rest/v1.1/stream/stream.post.parameters[5].in": "query",
	"paths./rest/v1.1/stream/stream.post.parameters[5].name": "password",
	"paths./rest/v1.1/stream/stream.post.parameters[5].required": true,
	"paths./rest/v1.1/stream/stream.post.parameters[5].type": "string",
	"paths./rest/v1.1/stream/stream.post.parameters[6].default": false,
	"paths./rest/v1.1/stream/stream.post.parameters[6].description": "Boolean value indicating whether you want the original picture to be stored for later retrieval",
	"paths./rest/v1.1/stream/stream.post.parameters[6].in": "query",
	"paths./rest/v1.1/stream/stream.post.parameters[6].name": "storeOriginalFrames",
	"paths./rest/v1.1/stream/stream.post.parameters[6].required": false,
	"paths./rest/v1.1/stream/stream.post.parameters[6].type": "boolean",
	"paths./rest/v1.1/stream/stream.post.parameters[7].default": false,
	"paths./rest/v1.1/stream/stream.post.parameters[7].description": "Boolean value indicating whether the stream is currently active or not",
	"paths./rest/v1.1/stream/stream.post.parameters[7].in": "query",
	"paths./rest/v1.1/stream/stream.post.parameters[7].name": "isActive",
	"paths./rest/v1.1/stream/stream.post.parameters[7].required": false,
	"paths./rest/v1.1/stream/stream.post.parameters[7].type": "boolean",
	"paths./rest/v1.1/stream/stream.post.produces.length": 1,
	"paths./rest/v1.1/stream/stream.post.produces[0]": "application/json",
	"paths./rest/v1.1/stream/stream.post.responses.200.description": "OK",
	"paths./rest/v1.1/stream/stream.post.responses.200.schema.$ref": "#/definitions/RestResponse",
	"paths./rest/v1.1/stream/stream.post.responses.201.description": "Created",
	"paths./rest/v1.1/stream/stream.post.responses.401.description": "Unauthorized",
	"paths./rest/v1.1/stream/stream.post.responses.403.description": "Forbidden",
	"paths./rest/v1.1/stream/stream.post.responses.404.description": "Not Found",
	"paths./rest/v1.1/stream/stream.post.summary": "Create new stream with given name",
	"paths./rest/v1.1/stream/stream.post.tags.length": 1,
	"paths./rest/v1.1/stream/stream.post.tags[0]": "Stream",
	"schemes.length": 1,
	"schemes[0]": "https",
	"security.length": 1,
	"securityDefinitions.accessKey.description": "The accessKey provided by VisageCloud",
	"securityDefinitions.accessKey.in": "query",
	"securityDefinitions.accessKey.name": "accessKey",
	"securityDefinitions.accessKey.type": "apiKey",
	"security[0].accessKey.length": 0,
	"swagger": "2.0",
	"tags.length": 4,
	"tags[0].description": "Manages Streams",
	"tags[0].name": "Stream",
	"tags[1].description": "Performs image-recognition related operations",
	"tags[1].name": "Analysis",
	"tags[2].description": "Manages collections",
	"tags[2].name": "Collection",
	"tags[3].description": "Manages profiles associated with collections",
	"tags[3].name": "Profile"
}