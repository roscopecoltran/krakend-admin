{
	"basePath": "/",
	"consumes.length": 1,
	"consumes[0]": "application/x-www-form-urlencoded",
	"definitions.Account.properties.billing.properties.city.type": "string",
	"definitions.Account.properties.billing.properties.country.type": "string",
	"definitions.Account.properties.billing.properties.name.type": "string",
	"definitions.Account.properties.billing.properties.state.type": "string",
	"definitions.Account.properties.billing.properties.street.type": "string",
	"definitions.Account.properties.billing.properties.zip.type": "string",
	"definitions.Account.properties.billing.type": "object",
	"definitions.Account.properties.created_at.type": "integer",
	"definitions.Account.properties.id.type": "integer",
	"definitions.Account.properties.links.properties.projects.properties.href.type": "string",
	"definitions.Account.properties.links.properties.projects.type": "object",
	"definitions.Account.properties.links.properties.self.properties.href.type": "string",
	"definitions.Account.properties.links.properties.self.type": "object",
	"definitions.Account.properties.links.type": "object",
	"definitions.Account.properties.name.type": "string",
	"definitions.Account.properties.stats.properties.started_projects.type": "integer",
	"definitions.Account.properties.stats.properties.total_projects.type": "integer",
	"definitions.Account.properties.stats.type": "object",
	"definitions.Activity.properties.activity_at.format": "date",
	"definitions.Activity.properties.activity_at.type": "string",
	"definitions.Activity.properties.id.type": "integer",
	"definitions.Activity.properties.links.$ref": "#/definitions/ActivityLinks",
	"definitions.Activity.properties.source_text.description": "Source text",
	"definitions.Activity.properties.source_text.type": "string",
	"definitions.Activity.properties.target_text.description": "Target text of the activity, which is actually the translation of the source text.",
	"definitions.Activity.properties.target_text.type": "string",
	"definitions.Activity.properties.translator.description": "Unique identifier of the translator/proofreader of this activity.",
	"definitions.Activity.properties.translator.type": "integer",
	"definitions.Activity.properties.type.description": "Currently there are two available activity types; 'translated', 'proofread'.",
	"definitions.Activity.properties.type.enum.length": 2,
	"definitions.Activity.properties.type.enum[0]": "translated",
	"definitions.Activity.properties.type.enum[1]": "proofread",
	"definitions.Activity.properties.type.type": "string",
	"definitions.Activity.type": "object",
	"definitions.ActivityLinks.allOf.length": 1,
	"definitions.ActivityLinks.allOf[0].$ref": "#/definitions/LinksMeta",
	"definitions.ActivityLinks.properties.comments.properties.href.type": "string",
	"definitions.ActivityLinks.properties.comments.type": "object",
	"definitions.ActivityLinks.properties.project.properties.href.type": "string",
	"definitions.ActivityLinks.properties.project.type": "object",
	"definitions.ActivityLinks.type": "object",
	"definitions.ActivityList.properties.activities.items.$ref": "#/definitions/Activity",
	"definitions.ActivityList.properties.activities.type": "array",
	"definitions.ActivityList.properties.meta.$ref": "#/definitions/PagingMeta",
	"definitions.ActivityList.type": "object",
	"definitions.CallbackResult.properties.data.$ref": "#/definitions/Project",
	"definitions.CallbackResult.properties.result.description": "Callback response returned from `url`.",
	"definitions.CallbackResult.properties.result.type": "string",
	"definitions.CallbackResult.properties.type.enum.length": 3,
	"definitions.CallbackResult.properties.type.enum[0]": "translated",
	"definitions.CallbackResult.properties.type.enum[1]": "proofread",
	"definitions.CallbackResult.properties.type.enum[2]": "completed",
	"definitions.CallbackResult.properties.type.type": "string",
	"definitions.CallbackResult.properties.url.description": "The URL that received the callback.",
	"definitions.CallbackResult.properties.url.type": "string",
	"definitions.CallbackResult.type": "object",
	"definitions.Comment.properties.comment.description": "Comment text.",
	"definitions.Comment.properties.comment.type": "string",
	"definitions.Comment.properties.commented_at.format": "date",
	"definitions.Comment.properties.commented_at.type": "string",
	"definitions.Comment.properties.id.type": "integer",
	"definitions.Comment.properties.links.$ref": "#/definitions/CommentLinks",
	"definitions.Comment.type": "object",
	"definitions.CommentLinks.allOf.length": 1,
	"definitions.CommentLinks.allOf[0].$ref": "#/definitions/LinksMeta",
	"definitions.CommentLinks.properties.activity.description": "Link to the activity to which this comment was submitted.",
	"definitions.CommentLinks.properties.activity.properties.href.type": "string",
	"definitions.CommentLinks.properties.activity.type": "object",
	"definitions.CommentLinks.properties.project.properties.href.type": "string",
	"definitions.CommentLinks.properties.project.type": "object",
	"definitions.CommentLinks.type": "object",
	"definitions.CommentList.properties.activities.items.$ref": "#/definitions/Comment",
	"definitions.CommentList.properties.activities.type": "array",
	"definitions.CommentList.properties.meta.$ref": "#/definitions/PagingMeta",
	"definitions.CommentList.type": "object",
	"definitions.Document.properties.id.type": "integer",
	"definitions.Document.properties.links.$ref": "#/definitions/DocumentLinks",
	"definitions.Document.properties.name.type": "string",
	"definitions.Document.properties.scheme.type": "object",
	"definitions.Document.properties.uploaded_at.format": "date",
	"definitions.Document.properties.uploaded_at.type": "string",
	"definitions.Document.properties.word_count.type": "integer",
	"definitions.Document.type": "object",
	"definitions.DocumentLinks.allOf.length": 1,
	"definitions.DocumentLinks.allOf[0].$ref": "#/definitions/LinksMeta",
	"definitions.DocumentLinks.properties.download.properties.href.type": "string",
	"definitions.DocumentLinks.properties.download.type": "object",
	"definitions.DocumentLinks.properties.project.properties.href.type": "string",
	"definitions.DocumentLinks.properties.project.type": "object",
	"definitions.DocumentLinks.type": "object",
	"definitions.DocumentList.properties.documents.items.$ref": "#/definitions/Document",
	"definitions.DocumentList.properties.documents.type": "array",
	"definitions.DocumentList.properties.meta.$ref": "#/definitions/PagingMeta",
	"definitions.DocumentList.type": "object",
	"definitions.Error.properties.code.type": "string",
	"definitions.Error.properties.help.type": "string",
	"definitions.Error.properties.http_code.format": "int32",
	"definitions.Error.properties.http_code.type": "integer",
	"definitions.Error.properties.message.type": "string",
	"definitions.Error.type": "object",
	"definitions.Formats.properties.documents.properties.extensions.items.type": "string",
	"definitions.Formats.properties.documents.properties.extensions.type": "array",
	"definitions.Formats.properties.documents.properties.mimes.items.type": "string",
	"definitions.Formats.properties.documents.properties.mimes.type": "array",
	"definitions.Formats.properties.documents.type": "object",
	"definitions.Formats.properties.glossaries.properties.extensions.items.type": "string",
	"definitions.Formats.properties.glossaries.properties.extensions.type": "array",
	"definitions.Formats.properties.glossaries.type": "object",
	"definitions.Formats.properties.styleguides.properties.extensions.items.type": "string",
	"definitions.Formats.properties.styleguides.properties.extensions.type": "array",
	"definitions.Formats.properties.styleguides.type": "object",
	"definitions.Formats.type": "object",
	"definitions.Glossary.properties.id.type": "integer",
	"definitions.Glossary.properties.links.$ref": "#/definitions/DocumentLinks",
	"definitions.Glossary.properties.name.type": "string",
	"definitions.Glossary.properties.uploaded_at.format": "date",
	"definitions.Glossary.properties.uploaded_at.type": "string",
	"definitions.Glossary.type": "object",
	"definitions.GlossaryList.properties.glossaries.items.$ref": "#/definitions/Glossary",
	"definitions.GlossaryList.properties.glossaries.type": "array",
	"definitions.GlossaryList.properties.meta.$ref": "#/definitions/PagingMeta",
	"definitions.GlossaryList.type": "object",
	"definitions.Language.properties.code.type": "string",
	"definitions.Language.properties.name.type": "string",
	"definitions.Language.type": "object",
	"definitions.LanguageProgress.properties.languageCode.$ref": "#/definitions/ProgressSub",
	"definitions.LanguageProgress.type": "object",
	"definitions.LinksMeta.properties.self.properties.href.type": "string",
	"definitions.LinksMeta.properties.self.type": "object",
	"definitions.LinksMeta.type": "object",
	"definitions.Package.properties.key.description": "This is the unique package tracking key. You can use this key to track the current progress of the translation packaging with /package/check call.",
	"definitions.Package.properties.key.type": "string",
	"definitions.Package.properties.status.description": "The status of translation packaging. Possible values are 'started', 'packaging', 'completed'. When completed, you can make a /download call to download the last translation package.",
	"definitions.Package.properties.status.enum.length": 3,
	"definitions.Package.properties.status.enum[0]": "started",
	"definitions.Package.properties.status.enum[1]": "packaging",
	"definitions.Package.properties.status.enum[2]": "completed",
	"definitions.Package.properties.status.type": "string",
	"definitions.Package.type": "object",
	"definitions.PackageStatus.properties.status.description": "The status of translation packaging. Possible values are 'started', 'packaging', 'completed'. When completed, you can make a /download call to download the last translation package.",
	"definitions.PackageStatus.properties.status.enum.length": 3,
	"definitions.PackageStatus.properties.status.enum[0]": "started",
	"definitions.PackageStatus.properties.status.enum[1]": "packaging",
	"definitions.PackageStatus.properties.status.enum[2]": "completed",
	"definitions.PackageStatus.properties.status.type": "string",
	"definitions.PackageStatus.type": "object",
	"definitions.PagingLinksMeta.allOf.length": 1,
	"definitions.PagingLinksMeta.allOf[0].$ref": "#/definitions/LinksMeta",
	"definitions.PagingLinksMeta.properties.next.type": "string",
	"definitions.PagingLinksMeta.properties.previous.type": "string",
	"definitions.PagingLinksMeta.type": "object",
	"definitions.PagingMeta.properties.paging.properties.links.$ref": "#/definitions/PagingLinksMeta",
	"definitions.PagingMeta.properties.paging.properties.page.default": 1,
	"definitions.PagingMeta.properties.paging.properties.page.type": "integer",
	"definitions.PagingMeta.properties.paging.properties.per_page.default": 10,
	"definitions.PagingMeta.properties.paging.properties.per_page.type": "integer",
	"definitions.PagingMeta.properties.paging.properties.total_count.type": "integer",
	"definitions.PagingMeta.properties.paging.type": "object",
	"definitions.PagingMeta.type": "object",
	"definitions.Progress.allOf.length": 1,
	"definitions.Progress.allOf[0].$ref": "#/definitions/ProgressSub",
	"definitions.Progress.properties.languages.$ref": "#/definitions/LanguageProgress",
	"definitions.Progress.properties.links.$ref": "#/definitions/ProgressLink",
	"definitions.Progress.type": "object",
	"definitions.ProgressLink.allOf.length": 1,
	"definitions.ProgressLink.allOf[0].$ref": "#/definitions/LinksMeta",
	"definitions.ProgressLink.properties.project.properties.href.type": "string",
	"definitions.ProgressLink.properties.project.type": "object",
	"definitions.ProgressLink.type": "object",
	"definitions.ProgressSub.properties.proofreading.type": "integer",
	"definitions.ProgressSub.properties.total.type": "integer",
	"definitions.ProgressSub.properties.translation.type": "integer",
	"definitions.ProgressSub.type": "object",
	"definitions.Project.properties.callback_url.description": "Callback URL to notify when project status changed.",
	"definitions.Project.properties.callback_url.type": "string",
	"definitions.Project.properties.created_at.format": "date",
	"definitions.Project.properties.created_at.type": "string",
	"definitions.Project.properties.custom.description": "Custom data provided while creating a new project.",
	"definitions.Project.properties.custom.type": "object",
	"definitions.Project.properties.delivery_at.format": "date",
	"definitions.Project.properties.delivery_at.type": "string",
	"definitions.Project.properties.errors.description": "A list of errors. Visible when creating a project and uploading your documents at the same time, in case of multiple errors.",
	"definitions.Project.properties.errors.items.$ref": "#/definitions/Error",
	"definitions.Project.properties.errors.type": "array",
	"definitions.Project.properties.id.type": "integer",
	"definitions.Project.properties.links.$ref": "#/definitions/ProjectLinks",
	"definitions.Project.properties.price.properties.amount.format": "float",
	"definitions.Project.properties.price.properties.amount.type": "number",
	"definitions.Project.properties.price.properties.currency.default": "usd",
	"definitions.Project.properties.price.properties.currency.type": "string",
	"definitions.Project.properties.price.type": "object",
	"definitions.Project.properties.source_language.type": "string",
	"definitions.Project.properties.status.enum.length": 3,
	"definitions.Project.properties.status.enum[0]": "pending",
	"definitions.Project.properties.status.enum[1]": "started",
	"definitions.Project.properties.status.enum[2]": "completed",
	"definitions.Project.properties.status.type": "string",
	"definitions.Project.properties.target_languages.items.type": "string",
	"definitions.Project.properties.target_languages.type": "array",
	"definitions.Project.properties.valid_until.description": "Available only if status is `pending`",
	"definitions.Project.properties.valid_until.format": "date",
	"definitions.Project.properties.valid_until.type": "string",
	"definitions.Project.properties.word_count.type": "integer",
	"definitions.Project.type": "object",
	"definitions.ProjectLinks.allOf.length": 1,
	"definitions.ProjectLinks.allOf[0].$ref": "#/definitions/LinksMeta",
	"definitions.ProjectLinks.properties.documents.properties.href.type": "string",
	"definitions.ProjectLinks.properties.documents.type": "object",
	"definitions.ProjectLinks.properties.glossaries.properties.href.type": "string",
	"definitions.ProjectLinks.properties.glossaries.type": "object",
	"definitions.ProjectLinks.properties.styleguides.properties.href.type": "string",
	"definitions.ProjectLinks.properties.styleguides.type": "object",
	"definitions.ProjectLinks.type": "object",
	"definitions.ProjectList.properties.meta.$ref": "#/definitions/PagingMeta",
	"definitions.ProjectList.properties.projects.items.$ref": "#/definitions/Project",
	"definitions.ProjectList.properties.projects.type": "array",
	"definitions.ProjectList.type": "object",
	"definitions.StyleGuide.properties.id.type": "integer",
	"definitions.StyleGuide.properties.links.$ref": "#/definitions/DocumentLinks",
	"definitions.StyleGuide.properties.name.type": "string",
	"definitions.StyleGuide.properties.uploaded_at.format": "date",
	"definitions.StyleGuide.properties.uploaded_at.type": "string",
	"definitions.StyleGuide.type": "object",
	"definitions.StyleGuideList.properties.meta.$ref": "#/definitions/PagingMeta",
	"definitions.StyleGuideList.properties.styleguides.items.$ref": "#/definitions/StyleGuide",
	"definitions.StyleGuideList.properties.styleguides.type": "array",
	"definitions.StyleGuideList.type": "object",
	"definitions.Token.properties.access_token.type": "string",
	"definitions.Token.properties.expires_in.type": "integer",
	"definitions.Token.properties.scope.type": "string",
	"definitions.Token.properties.token_type.type": "string",
	"externalDocs.url": "https://www.motaword.com/developer",
	"host": "api.motaword.com",
	"info.description": "Use MotaWord API to post and track your translation projects.",
	"info.title": "MotaWord",
	"info.version": "alpha-0.1.0",
	"info.x-apiClientRegistration.url": "https://www.motaword.com/developer/register",
	"info.x-apisguru-categories.length": 1,
	"info.x-apisguru-categories[0]": "text",
	"info.x-logo.url": "https://api.apis.guru/v2/cache/logo/https_dentycj2qhk72.cloudfront.net_new_images_new_logo_horizontal.png",
	"info.x-origin.length": 1,
	"info.x-origin[0].format": "swagger",
	"info.x-origin[0].url": "https://api.motaword.com/swagger",
	"info.x-origin[0].version": "2.0",
	"info.x-preferred": true,
	"info.x-providerName": "motaword.com",
	"paths./.get.description": "The root endpoint will provide you a JSON Swagger definition.\n",
	"paths./.get.operationId": "getEndpoints",
	"paths./.get.responses.200.description": "JSON representation of our Swagger API definition.",
	"paths./.get.responses.200.schema.type": "object",
	"paths./.get.responses.default.description": "Authentication error",
	"paths./.get.responses.default.schema.$ref": "#/definitions/Error",
	"paths./.get.security.length": 1,
	"paths./.get.security[0].client_credentials.length": 0,
	"paths./.get.summary": "Available endpoints",
	"paths./.get.tags.length": 1,
	"paths./.get.tags[0]": "Static",
	"paths./formats.get.description": "Get a list of supported formats for documents, style guides and extensions.\n",
	"paths./formats.get.operationId": "getFormats",
	"paths./formats.get.responses.200.description": "A list of supported formats",
	"paths./formats.get.responses.200.schema.items.$ref": "#/definitions/Formats",
	"paths./formats.get.responses.200.schema.type": "object",
	"paths./formats.get.security.length": 1,
	"paths./formats.get.security[0].client_credentials.length": 0,
	"paths./formats.get.summary": "Get a list of supported formats",
	"paths./formats.get.tags.length": 1,
	"paths./formats.get.tags[0]": "Static",
	"paths./glossary.get.description": "Download your corporate account's global glossary. This endpoint is available only for corporate account customers.",
	"paths./glossary.get.operationId": "downloadGlobalGlossary",
	"paths./glossary.get.responses.200.description": "Glossary file streamed.",
	"paths./glossary.get.responses.200.schema.type": "string",
	"paths./glossary.get.responses.404.description": "GlossaryNotFound",
	"paths./glossary.get.responses.404.schema.$ref": "#/definitions/Error",
	"paths./glossary.get.security.length": 1,
	"paths./glossary.get.security[0].client_credentials.length": 0,
	"paths./glossary.get.summary": "Download the global glossary.",
	"paths./glossary.get.tags.length": 2,
	"paths./glossary.get.tags[0]": "Account",
	"paths./glossary.get.tags[1]": "Glossary",
	"paths./glossary.post.consumes.length": 2,
	"paths./glossary.post.consumes[0]": "multipart/form-data",
	"paths./glossary.post.consumes[1]": "application/json",
	"paths./glossary.post.description": "Update your corporate account's global glossary. This endpoint is available only for corporate account customers.",
	"paths./glossary.post.operationId": "updateGlobalGlossary",
	"paths./glossary.post.parameters.length": 1,
	"paths./glossary.post.parameters[0].description": "Glossary file. Currently supported formats: .xlsx, .tbx\n",
	"paths./glossary.post.parameters[0].in": "formData",
	"paths./glossary.post.parameters[0].name": "glossary",
	"paths./glossary.post.parameters[0].required": true,
	"paths./glossary.post.parameters[0].type": "file",
	"paths./glossary.post.responses.200.description": "Success response",
	"paths./glossary.post.responses.200.schema.properties.status.default": "success",
	"paths./glossary.post.responses.200.schema.properties.status.type": "string",
	"paths./glossary.post.responses.200.schema.type": "object",
	"paths./glossary.post.responses.400.description": "FileTooLarge FileTooSmall NoFileUploaded",
	"paths./glossary.post.responses.400.schema.$ref": "#/definitions/Error",
	"paths./glossary.post.responses.405.description": "UnsupportedGlossaryFormat",
	"paths./glossary.post.responses.405.schema.$ref": "#/definitions/Error",
	"paths./glossary.post.security.length": 1,
	"paths./glossary.post.security[0].client_credentials.length": 0,
	"paths./glossary.post.summary": "Create or update the global glossary.",
	"paths./glossary.post.tags.length": 2,
	"paths./glossary.post.tags[0]": "Account",
	"paths./glossary.post.tags[1]": "Glossary",
	"paths./languages.get.description": "Get a list of supported languages",
	"paths./languages.get.operationId": "getLanguages",
	"paths./languages.get.responses.200.description": "A list of supported languages",
	"paths./languages.get.responses.200.schema.items.$ref": "#/definitions/Language",
	"paths./languages.get.responses.200.schema.type": "array",
	"paths./languages.get.security.length": 1,
	"paths./languages.get.security[0].client_credentials.length": 0,
	"paths./languages.get.summary": "Get a list of supported languages",
	"paths./languages.get.tags.length": 1,
	"paths./languages.get.tags[0]": "Static",
	"paths./me.get.operationId": "getAccount",
	"paths./me.get.responses.200.description": "Account summary",
	"paths./me.get.responses.200.schema.$ref": "#/definitions/Account",
	"paths./me.get.responses.404.description": "UserNotFound",
	"paths./me.get.responses.404.schema.$ref": "#/definitions/Error",
	"paths./me.get.security.length": 1,
	"paths./me.get.security[0].client_credentials.length": 0,
	"paths./me.get.summary": "Get your account information and summary.",
	"paths./me.get.tags.length": 1,
	"paths./me.get.tags[0]": "Account",
	"paths./projects.get.description": "Get a list of your projects",
	"paths./projects.get.operationId": "getProjects",
	"paths./projects.get.parameters.length": 2,
	"paths./projects.get.parameters[0].default": 1,
	"paths./projects.get.parameters[0].in": "query",
	"paths./projects.get.parameters[0].name": "page",
	"paths./projects.get.parameters[0].type": "integer",
	"paths./projects.get.parameters[1].default": 10,
	"paths./projects.get.parameters[1].in": "query",
	"paths./projects.get.parameters[1].name": "per_page",
	"paths./projects.get.parameters[1].type": "integer",
	"paths./projects.get.responses.200.description": "Project list",
	"paths./projects.get.responses.200.schema.items.$ref": "#/definitions/ProjectList",
	"paths./projects.get.responses.200.schema.type": "object",
	"paths./projects.get.security.length": 1,
	"paths./projects.get.security[0].client_credentials.length": 0,
	"paths./projects.get.summary": "Get a list of your projects",
	"paths./projects.get.tags.length": 1,
	"paths./projects.get.tags[0]": "Project",
	"paths./projects.post.consumes.length": 2,
	"paths./projects.post.consumes[0]": "multipart/form-data",
	"paths./projects.post.consumes[1]": "application/json",
	"paths./projects.post.description": "Create a new project",
	"paths./projects.post.operationId": "createProject",
	"paths./projects.post.parameters.length": 7,
	"paths./projects.post.parameters[0].in": "formData",
	"paths./projects.post.parameters[0].name": "source_language",
	"paths./projects.post.parameters[0].required": true,
	"paths./projects.post.parameters[0].type": "string",
	"paths./projects.post.parameters[1].collectionFormat": "multi",
	"paths./projects.post.parameters[1].in": "formData",
	"paths./projects.post.parameters[1].items.type": "string",
	"paths./projects.post.parameters[1].name": "target_languages[]",
	"paths./projects.post.parameters[1].required": true,
	"paths./projects.post.parameters[1].type": "array",
	"paths./projects.post.parameters[2].description": "Optional. If you provide a callback URL, we will send POST callbacks when the status of the current project is changed. Possible status changes are, 'translated', 'proofread', 'completed'.",
	"paths./projects.post.parameters[2].in": "formData",
	"paths./projects.post.parameters[2].name": "callback_url",
	"paths./projects.post.parameters[2].type": "string",
	"paths./projects.post.parameters[3].description": "Optional. This is a consistent custom data parameter that will be given to you in the response across every request of this project model. Values should be provided like this, custom[my_key] = my_value.",
	"paths./projects.post.parameters[3].in": "formData",
	"paths./projects.post.parameters[3].items.type": "string",
	"paths./projects.post.parameters[3].name": "custom",
	"paths./projects.post.parameters[3].type": "array",
	"paths./projects.post.parameters[4].description": "Optional. You can add as many files as you want in documents[] parameter. Or you add your documents later in separate calls.",
	"paths./projects.post.parameters[4].in": "formData",
	"paths./projects.post.parameters[4].name": "documents[]",
	"paths./projects.post.parameters[4].type": "file",
	"paths./projects.post.parameters[5].description": "Optional. You can add as many files as you want in styleguides[] parameter. Or you add your style guides later in separate calls.",
	"paths./projects.post.parameters[5].in": "formData",
	"paths./projects.post.parameters[5].name": "styleguides[]",
	"paths./projects.post.parameters[5].type": "file",
	"paths./projects.post.parameters[6].description": "Optional. Only one glossary is supported at the moment.",
	"paths./projects.post.parameters[6].in": "formData",
	"paths./projects.post.parameters[6].name": "glossaries[]",
	"paths./projects.post.parameters[6].type": "file",
	"paths./projects.post.responses.200.description": "Newly created project",
	"paths./projects.post.responses.200.schema.items.$ref": "#/definitions/Project",
	"paths./projects.post.responses.200.schema.type": "object",
	"paths./projects.post.responses.400.description": "FileTooLarge FileTooSmall FileWasAlreadyUploaded",
	"paths./projects.post.responses.400.schema.$ref": "#/definitions/Error",
	"paths./projects.post.responses.405.description": "UnsupportedDocumentFormat UnsupportedStyleGuideFormat UnsupportedGlossaryFormat",
	"paths./projects.post.responses.405.schema.$ref": "#/definitions/Error",
	"paths./projects.post.responses.406.description": "UnsupportedLanguage TooManyGlossaries ProjectAlreadyHasGlossary",
	"paths./projects.post.responses.406.schema.$ref": "#/definitions/Error",
	"paths./projects.post.responses.500.description": "ProjectInsertFailed",
	"paths./projects.post.responses.500.schema.$ref": "#/definitions/Error",
	"paths./projects.post.security.length": 1,
	"paths./projects.post.security[0].client_credentials.length": 0,
	"paths./projects.post.summary": "Get a new quote",
	"paths./projects.post.tags.length": 1,
	"paths./projects.post.tags[0]": "Project",
	"paths./projects/{id}.delete.description": "Delete(cancel) a project.",
	"paths./projects/{id}.delete.operationId": "deleteProject",
	"paths./projects/{id}.delete.parameters.length": 1,
	"paths./projects/{id}.delete.parameters[0].description": "Project ID",
	"paths./projects/{id}.delete.parameters[0].format": "int64",
	"paths./projects/{id}.delete.parameters[0].in": "path",
	"paths./projects/{id}.delete.parameters[0].name": "id",
	"paths./projects/{id}.delete.parameters[0].required": true,
	"paths./projects/{id}.delete.parameters[0].type": "integer",
	"paths./projects/{id}.delete.responses.200.description": "Project canceled successfully",
	"paths./projects/{id}.delete.responses.200.schema.properties.status.default": "success",
	"paths./projects/{id}.delete.responses.200.schema.properties.status.type": "string",
	"paths./projects/{id}.delete.responses.200.schema.type": "object",
	"paths./projects/{id}.delete.responses.404.description": "ProjectNotFound",
	"paths./projects/{id}.delete.responses.404.schema.$ref": "#/definitions/Error",
	"paths./projects/{id}.delete.security.length": 1,
	"paths./projects/{id}.delete.security[0].client_credentials.length": 0,
	"paths./projects/{id}.delete.summary": "Delete a project",
	"paths./projects/{id}.delete.tags.length": 1,
	"paths./projects/{id}.delete.tags[0]": "Project",
	"paths./projects/{id}.get.description": "Get single project",
	"paths./projects/{id}.get.operationId": "getProject",
	"paths./projects/{id}.get.parameters.length": 1,
	"paths./projects/{id}.get.parameters[0].description": "Project ID",
	"paths./projects/{id}.get.parameters[0].format": "int64",
	"paths./projects/{id}.get.parameters[0].in": "path",
	"paths./projects/{id}.get.parameters[0].name": "id",
	"paths./projects/{id}.get.parameters[0].required": true,
	"paths./projects/{id}.get.parameters[0].type": "integer",
	"paths./projects/{id}.get.responses.200.description": "Project model",
	"paths./projects/{id}.get.responses.200.schema.$ref": "#/definitions/Project",
	"paths./projects/{id}.get.responses.404.description": "ProjectNotFound",
	"paths./projects/{id}.get.responses.404.schema.$ref": "#/definitions/Error",
	"paths./projects/{id}.get.security.length": 1,
	"paths./projects/{id}.get.security[0].client_credentials.length": 0,
	"paths./projects/{id}.get.summary": "Get single project",
	"paths./projects/{id}.get.tags.length": 1,
	"paths./projects/{id}.get.tags[0]": "Project",
	"paths./projects/{id}.put.consumes.length": 2,
	"paths./projects/{id}.put.consumes[0]": "multipart/form-data",
	"paths./projects/{id}.put.consumes[1]": "application/json",
	"paths./projects/{id}.put.description": "Update project language pairs",
	"paths./projects/{id}.put.operationId": "updateProject",
	"paths./projects/{id}.put.parameters.length": 5,
	"paths./projects/{id}.put.parameters[0].description": "Project ID",
	"paths./projects/{id}.put.parameters[0].format": "int64",
	"paths./projects/{id}.put.parameters[0].in": "path",
	"paths./projects/{id}.put.parameters[0].name": "id",
	"paths./projects/{id}.put.parameters[0].required": true,
	"paths./projects/{id}.put.parameters[0].type": "integer",
	"paths./projects/{id}.put.parameters[1].in": "formData",
	"paths./projects/{id}.put.parameters[1].name": "source_language",
	"paths./projects/{id}.put.parameters[1].required": true,
	"paths./projects/{id}.put.parameters[1].type": "string",
	"paths./projects/{id}.put.parameters[2].collectionFormat": "multi",
	"paths./projects/{id}.put.parameters[2].in": "formData",
	"paths./projects/{id}.put.parameters[2].items.type": "string",
	"paths./projects/{id}.put.parameters[2].name": "target_languages[]",
	"paths./projects/{id}.put.parameters[2].required": true,
	"paths./projects/{id}.put.parameters[2].type": "array",
	"paths./projects/{id}.put.parameters[3].description": "Optional. If you provide a callback URL, we will send POST callbacks when the status of the current project is changed. Possible status changes are, 'translated', 'proofread', 'completed'.",
	"paths./projects/{id}.put.parameters[3].in": "formData",
	"paths./projects/{id}.put.parameters[3].name": "callback_url",
	"paths./projects/{id}.put.parameters[3].type": "string",
	"paths./projects/{id}.put.parameters[4].description": "Optional. This is a consistent custom data parameter that will be given to you in the response across every request of this project model. Values should be provided like this, custom[my_key] = my_value. If you previously provided one, it will be replaced.",
	"paths./projects/{id}.put.parameters[4].in": "formData",
	"paths./projects/{id}.put.parameters[4].items.type": "string",
	"paths./projects/{id}.put.parameters[4].name": "custom",
	"paths./projects/{id}.put.parameters[4].type": "array",
	"paths./projects/{id}.put.responses.200.description": "Updated project",
	"paths./projects/{id}.put.responses.200.schema.items.$ref": "#/definitions/Project",
	"paths./projects/{id}.put.responses.200.schema.type": "object",
	"paths./projects/{id}.put.responses.404.description": "ProjectNotFound",
	"paths./projects/{id}.put.responses.404.schema.$ref": "#/definitions/Error",
	"paths./projects/{id}.put.responses.406.description": "UnsupportedLanguage",
	"paths./projects/{id}.put.responses.406.schema.$ref": "#/definitions/Error",
	"paths./projects/{id}.put.security.length": 1,
	"paths./projects/{id}.put.security[0].client_credentials.length": 0,
	"paths./projects/{id}.put.summary": "Update project language pairs",
	"paths./projects/{id}.put.tags.length": 1,
	"paths./projects/{id}.put.tags[0]": "Project",
	"paths./projects/{id}/callback/{actionType}.get.description": "Trigger a call to your callback URL related to this project.",
	"paths./projects/{id}/callback/{actionType}.get.operationId": "triggerCallback",
	"paths./projects/{id}/callback/{actionType}.get.parameters.length": 2,
	"paths./projects/{id}/callback/{actionType}.get.parameters[0].description": "Project ID",
	"paths./projects/{id}/callback/{actionType}.get.parameters[0].format": "int64",
	"paths./projects/{id}/callback/{actionType}.get.parameters[0].in": "path",
	"paths./projects/{id}/callback/{actionType}.get.parameters[0].name": "id",
	"paths./projects/{id}/callback/{actionType}.get.parameters[0].required": true,
	"paths./projects/{id}/callback/{actionType}.get.parameters[0].type": "integer",
	"paths./projects/{id}/callback/{actionType}.get.parameters[1].description": "Callback type",
	"paths./projects/{id}/callback/{actionType}.get.parameters[1].enum.length": 3,
	"paths./projects/{id}/callback/{actionType}.get.parameters[1].enum[0]": "translated",
	"paths./projects/{id}/callback/{actionType}.get.parameters[1].enum[1]": "proofread",
	"paths./projects/{id}/callback/{actionType}.get.parameters[1].enum[2]": "completed",
	"paths./projects/{id}/callback/{actionType}.get.parameters[1].in": "path",
	"paths./projects/{id}/callback/{actionType}.get.parameters[1].name": "actionType",
	"paths./projects/{id}/callback/{actionType}.get.parameters[1].required": true,
	"paths./projects/{id}/callback/{actionType}.get.parameters[1].type": "string",
	"paths./projects/{id}/callback/{actionType}.get.responses.200.description": "Callback result",
	"paths./projects/{id}/callback/{actionType}.get.responses.200.schema.$ref": "#/definitions/CallbackResult",
	"paths./projects/{id}/callback/{actionType}.get.responses.404.description": "ProjectNotFound",
	"paths./projects/{id}/callback/{actionType}.get.responses.404.schema.$ref": "#/definitions/Error",
	"paths./projects/{id}/callback/{actionType}.get.security.length": 1,
	"paths./projects/{id}/callback/{actionType}.get.security[0].client_credentials.length": 0,
	"paths./projects/{id}/callback/{actionType}.get.summary": "Trigger a call to your callback URL related to this project.",
	"paths./projects/{id}/callback/{actionType}.get.tags.length": 1,
	"paths./projects/{id}/callback/{actionType}.get.tags[0]": "Project",
	"paths./projects/{id}/cancel.post.consumes.length": 2,
	"paths./projects/{id}/cancel.post.consumes[0]": "multipart/form-data",
	"paths./projects/{id}/cancel.post.consumes[1]": "application/json",
	"paths./projects/{id}/cancel.post.operationId": "cancelProject",
	"paths./projects/{id}/cancel.post.parameters.length": 2,
	"paths./projects/{id}/cancel.post.parameters[0].description": "Project ID",
	"paths./projects/{id}/cancel.post.parameters[0].format": "int64",
	"paths./projects/{id}/cancel.post.parameters[0].in": "path",
	"paths./projects/{id}/cancel.post.parameters[0].name": "id",
	"paths./projects/{id}/cancel.post.parameters[0].required": true,
	"paths./projects/{id}/cancel.post.parameters[0].type": "integer",
	"paths./projects/{id}/cancel.post.parameters[1].description": "Cancellation reason",
	"paths./projects/{id}/cancel.post.parameters[1].in": "formData",
	"paths./projects/{id}/cancel.post.parameters[1].name": "reason",
	"paths./projects/{id}/cancel.post.parameters[1].type": "string",
	"paths./projects/{id}/cancel.post.responses.200.description": "Project canceled successfully",
	"paths./projects/{id}/cancel.post.responses.200.schema.properties.status.default": "success",
	"paths./projects/{id}/cancel.post.responses.200.schema.properties.status.type": "string",
	"paths./projects/{id}/cancel.post.responses.200.schema.type": "object",
	"paths./projects/{id}/cancel.post.responses.404.description": "ProjectNotFound",
	"paths./projects/{id}/cancel.post.responses.404.schema.$ref": "#/definitions/Error",
	"paths./projects/{id}/cancel.post.security.length": 1,
	"paths./projects/{id}/cancel.post.security[0].client_credentials.length": 0,
	"paths./projects/{id}/cancel.post.summary": "Cancel your translation project",
	"paths./projects/{id}/cancel.post.tags.length": 1,
	"paths./projects/{id}/cancel.post.tags[0]": "Project",
	"paths./projects/{id}/download.post.description": "Download the latest translation package. You must have given a /package call beforehand and wait until the packaging status is 'completed'.",
	"paths./projects/{id}/download.post.operationId": "download",
	"paths./projects/{id}/download.post.parameters.length": 1,
	"paths./projects/{id}/download.post.parameters[0].description": "Project ID",
	"paths./projects/{id}/download.post.parameters[0].format": "int64",
	"paths./projects/{id}/download.post.parameters[0].in": "path",
	"paths./projects/{id}/download.post.parameters[0].name": "id",
	"paths./projects/{id}/download.post.parameters[0].required": true,
	"paths./projects/{id}/download.post.parameters[0].type": "integer",
	"paths./projects/{id}/download.post.responses.200.description": "Translation package streamed. The streamed file is always a ZIP file, except when the API client is configured for Drupal and Wordpress.",
	"paths./projects/{id}/download.post.responses.200.schema.type": "string",
	"paths./projects/{id}/download.post.responses.402.description": "ProjectNotLaunchedYet",
	"paths./projects/{id}/download.post.responses.402.schema.$ref": "#/definitions/Error",
	"paths./projects/{id}/download.post.responses.404.description": "TranslationPackageNotFound",
	"paths./projects/{id}/download.post.responses.404.schema.$ref": "#/definitions/Error",
	"paths./projects/{id}/download.post.security.length": 1,
	"paths./projects/{id}/download.post.security[0].client_credentials.length": 0,
	"paths./projects/{id}/download.post.summary": "Download the latest translation package.",
	"paths./projects/{id}/download.post.tags.length": 1,
	"paths./projects/{id}/download.post.tags[0]": "Project",
	"paths./projects/{id}/download/{language}.post.description": "Download only the translation package of this language. You must have given a /package call beforehand and wait until the packaging status is 'completed'.",
	"paths./projects/{id}/download/{language}.post.operationId": "downloadLanguage",
	"paths./projects/{id}/download/{language}.post.parameters.length": 2,
	"paths./projects/{id}/download/{language}.post.parameters[0].description": "Project ID",
	"paths./projects/{id}/download/{language}.post.parameters[0].format": "int64",
	"paths./projects/{id}/download/{language}.post.parameters[0].in": "path",
	"paths./projects/{id}/download/{language}.post.parameters[0].name": "id",
	"paths./projects/{id}/download/{language}.post.parameters[0].required": true,
	"paths./projects/{id}/download/{language}.post.parameters[0].type": "integer",
	"paths./projects/{id}/download/{language}.post.parameters[1].description": "Language code. You can download the translation of only a specific language.",
	"paths./projects/{id}/download/{language}.post.parameters[1].in": "path",
	"paths./projects/{id}/download/{language}.post.parameters[1].name": "language",
	"paths./projects/{id}/download/{language}.post.parameters[1].required": true,
	"paths./projects/{id}/download/{language}.post.parameters[1].type": "string",
	"paths./projects/{id}/download/{language}.post.responses.200.description": "Translation package streamed. The streamed file is always a ZIP file, except when the API client is configured for Drupal and Wordpress.",
	"paths./projects/{id}/download/{language}.post.responses.200.schema.type": "string",
	"paths./projects/{id}/download/{language}.post.responses.402.description": "ProjectNotLaunchedYet",
	"paths./projects/{id}/download/{language}.post.responses.402.schema.$ref": "#/definitions/Error",
	"paths./projects/{id}/download/{language}.post.responses.404.description": "TranslationPackageNotFound",
	"paths./projects/{id}/download/{language}.post.responses.404.schema.$ref": "#/definitions/Error",
	"paths./projects/{id}/download/{language}.post.security.length": 1,
	"paths./projects/{id}/download/{language}.post.security[0].client_credentials.length": 0,
	"paths./projects/{id}/download/{language}.post.summary": "Download the latest translation package.",
	"paths./projects/{id}/download/{language}.post.tags.length": 1,
	"paths./projects/{id}/download/{language}.post.tags[0]": "Project",
	"paths./projects/{id}/launch.post.consumes.length": 2,
	"paths./projects/{id}/launch.post.consumes[0]": "multipart/form-data",
	"paths./projects/{id}/launch.post.consumes[1]": "application/json",
	"paths./projects/{id}/launch.post.operationId": "launchProject",
	"paths./projects/{id}/launch.post.parameters.length": 4,
	"paths./projects/{id}/launch.post.parameters[0].description": "Project ID",
	"paths./projects/{id}/launch.post.parameters[0].format": "int64",
	"paths./projects/{id}/launch.post.parameters[0].in": "path",
	"paths./projects/{id}/launch.post.parameters[0].name": "id",
	"paths./projects/{id}/launch.post.parameters[0].required": true,
	"paths./projects/{id}/launch.post.parameters[0].type": "integer",
	"paths./projects/{id}/launch.post.parameters[1].description": "Optional. Determines which method to use for payment. Options are 'corporate', 'client'.",
	"paths./projects/{id}/launch.post.parameters[1].enum.length": 2,
	"paths./projects/{id}/launch.post.parameters[1].enum[0]": "corporate",
	"paths./projects/{id}/launch.post.parameters[1].enum[1]": "client",
	"paths./projects/{id}/launch.post.parameters[1].in": "formData",
	"paths./projects/{id}/launch.post.parameters[1].name": "payment_method",
	"paths./projects/{id}/launch.post.parameters[1].type": "string",
	"paths./projects/{id}/launch.post.parameters[2].description": "Optional. According to your corporate account configuration, this may be required.",
	"paths./projects/{id}/launch.post.parameters[2].in": "formData",
	"paths./projects/{id}/launch.post.parameters[2].name": "payment_code",
	"paths./projects/{id}/launch.post.parameters[2].type": "string",
	"paths./projects/{id}/launch.post.parameters[3].description": "Optional with corporate accounts. Not available for others.",
	"paths./projects/{id}/launch.post.parameters[3].in": "formData",
	"paths./projects/{id}/launch.post.parameters[3].name": "budget_code",
	"paths./projects/{id}/launch.post.parameters[3].type": "string",
	"paths./projects/{id}/launch.post.responses.200.description": "Project launched successfully",
	"paths./projects/{id}/launch.post.responses.200.schema.properties.status.default": "started",
	"paths./projects/{id}/launch.post.responses.200.schema.properties.status.type": "string",
	"paths./projects/{id}/launch.post.responses.200.schema.type": "object",
	"paths./projects/{id}/launch.post.responses.400.description": "MissingPaymentCode MissingCorporateAccount MissingPaymentMethod",
	"paths./projects/{id}/launch.post.responses.400.schema.$ref": "#/definitions/Error",
	"paths./projects/{id}/launch.post.responses.401.description": "CorporateAccountNotAllowedForApiPayment ApiClientMissingPaymentInformation",
	"paths./projects/{id}/launch.post.responses.401.schema.$ref": "#/definitions/Error",
	"paths./projects/{id}/launch.post.responses.404.description": "ProjectNotFound",
	"paths./projects/{id}/launch.post.responses.404.schema.$ref": "#/definitions/Error",
	"paths./projects/{id}/launch.post.security.length": 1,
	"paths./projects/{id}/launch.post.security[0].client_credentials.length": 0,
	"paths./projects/{id}/launch.post.summary": "Launch your translation project",
	"paths./projects/{id}/launch.post.tags.length": 1,
	"paths./projects/{id}/launch.post.tags[0]": "Project",
	"paths./projects/{id}/package.post.description": "Package the translation project, make it ready to be downloaded.",
	"paths./projects/{id}/package.post.operationId": "package",
	"paths./projects/{id}/package.post.parameters.length": 2,
	"paths./projects/{id}/package.post.parameters[0].description": "Project ID",
	"paths./projects/{id}/package.post.parameters[0].format": "int64",
	"paths./projects/{id}/package.post.parameters[0].in": "path",
	"paths./projects/{id}/package.post.parameters[0].name": "id",
	"paths./projects/{id}/package.post.parameters[0].required": true,
	"paths./projects/{id}/package.post.parameters[0].type": "integer",
	"paths./projects/{id}/package.post.parameters[1].default": 0,
	"paths./projects/{id}/package.post.parameters[1].description": "If you want to package and download the translation synchronously, mark this parameter as '0'. It will package the translation and then return the packaged file in the response, identical to /download call after an asynchronous /package call.",
	"paths./projects/{id}/package.post.parameters[1].in": "query",
	"paths./projects/{id}/package.post.parameters[1].name": "async",
	"paths./projects/{id}/package.post.parameters[1].type": "integer",
	"paths./projects/{id}/package.post.responses.200.description": "Packaged translation streamed.",
	"paths./projects/{id}/package.post.responses.200.schema.type": "string",
	"paths./projects/{id}/package.post.responses.402.description": "ProjectNotLaunchedYet",
	"paths./projects/{id}/package.post.responses.402.schema.$ref": "#/definitions/Error",
	"paths./projects/{id}/package.post.responses.404.description": "TranslationPackageNotFound",
	"paths./projects/{id}/package.post.responses.404.schema.$ref": "#/definitions/Error",
	"paths./projects/{id}/package.post.security.length": 1,
	"paths./projects/{id}/package.post.security[0].client_credentials.length": 0,
	"paths./projects/{id}/package.post.summary": "Package the translation of all languages to be downloaded.",
	"paths./projects/{id}/package.post.tags.length": 1,
	"paths./projects/{id}/package.post.tags[0]": "Project",
	"paths./projects/{id}/package/check.get.description": "This request will tell you the current progress of the translation packaging. You will use the 'key' provided by the /package call.",
	"paths./projects/{id}/package/check.get.operationId": "trackPackage",
	"paths./projects/{id}/package/check.get.parameters.length": 2,
	"paths./projects/{id}/package/check.get.parameters[0].description": "Project ID",
	"paths./projects/{id}/package/check.get.parameters[0].format": "int64",
	"paths./projects/{id}/package/check.get.parameters[0].in": "path",
	"paths./projects/{id}/package/check.get.parameters[0].name": "id",
	"paths./projects/{id}/package/check.get.parameters[0].required": true,
	"paths./projects/{id}/package/check.get.parameters[0].type": "integer",
	"paths./projects/{id}/package/check.get.parameters[1].description": "This is the package tracking key provided in the response of a /package call.",
	"paths./projects/{id}/package/check.get.parameters[1].in": "query",
	"paths./projects/{id}/package/check.get.parameters[1].name": "key",
	"paths./projects/{id}/package/check.get.parameters[1].type": "string",
	"paths./projects/{id}/package/check.get.responses.200.description": "Current status of packaging process.",
	"paths./projects/{id}/package/check.get.responses.200.schema.$ref": "#/definitions/PackageStatus",
	"paths./projects/{id}/package/check.get.responses.402.description": "ProjectNotLaunchedYet",
	"paths./projects/{id}/package/check.get.responses.402.schema.$ref": "#/definitions/Error",
	"paths./projects/{id}/package/check.get.responses.404.description": "PackagingStatusMissing",
	"paths./projects/{id}/package/check.get.responses.404.schema.$ref": "#/definitions/Error",
	"paths./projects/{id}/package/check.get.security.length": 1,
	"paths./projects/{id}/package/check.get.security[0].client_credentials.length": 0,
	"paths./projects/{id}/package/check.get.summary": "Track the status of translation packaging.",
	"paths./projects/{id}/package/check.get.tags.length": 1,
	"paths./projects/{id}/package/check.get.tags[0]": "Project",
	"paths./projects/{id}/package/{language}.post.description": "Package the translation project, make it ready to be downloaded.",
	"paths./projects/{id}/package/{language}.post.operationId": "packageLanguage",
	"paths./projects/{id}/package/{language}.post.parameters.length": 3,
	"paths./projects/{id}/package/{language}.post.parameters[0].description": "Project ID",
	"paths./projects/{id}/package/{language}.post.parameters[0].format": "int64",
	"paths./projects/{id}/package/{language}.post.parameters[0].in": "path",
	"paths./projects/{id}/package/{language}.post.parameters[0].name": "id",
	"paths./projects/{id}/package/{language}.post.parameters[0].required": true,
	"paths./projects/{id}/package/{language}.post.parameters[0].type": "integer",
	"paths./projects/{id}/package/{language}.post.parameters[1].description": "Language code. You can package the translation of only a specific language.",
	"paths./projects/{id}/package/{language}.post.parameters[1].in": "path",
	"paths./projects/{id}/package/{language}.post.parameters[1].name": "language",
	"paths./projects/{id}/package/{language}.post.parameters[1].required": true,
	"paths./projects/{id}/package/{language}.post.parameters[1].type": "string",
	"paths./projects/{id}/package/{language}.post.parameters[2].default": 0,
	"paths./projects/{id}/package/{language}.post.parameters[2].description": "If you want to package and download the translation synchronously, mark this parameter as '0'. It will package the translation and then return the packaged file in the response, identical to /download call after an asynchronous /package call.",
	"paths./projects/{id}/package/{language}.post.parameters[2].in": "query",
	"paths./projects/{id}/package/{language}.post.parameters[2].name": "async",
	"paths./projects/{id}/package/{language}.post.parameters[2].type": "integer",
	"paths./projects/{id}/package/{language}.post.responses.200.description": "Packaging status and tracking code. With the package key, you can track the progress of translation packaging.",
	"paths./projects/{id}/package/{language}.post.responses.200.schema.$ref": "#/definitions/Package",
	"paths./projects/{id}/package/{language}.post.responses.201.description": "Packaged translation streamed. Status code is actually 200, not 201.",
	"paths./projects/{id}/package/{language}.post.responses.201.schema.type": "string",
	"paths./projects/{id}/package/{language}.post.responses.402.description": "ProjectNotLaunchedYet",
	"paths./projects/{id}/package/{language}.post.responses.402.schema.$ref": "#/definitions/Error",
	"paths./projects/{id}/package/{language}.post.responses.404.description": "TranslationPackageNotFound",
	"paths./projects/{id}/package/{language}.post.responses.404.schema.$ref": "#/definitions/Error",
	"paths./projects/{id}/package/{language}.post.security.length": 1,
	"paths./projects/{id}/package/{language}.post.security[0].client_credentials.length": 0,
	"paths./projects/{id}/package/{language}.post.summary": "Package the translation of a specific target language to be downloaded.",
	"paths./projects/{id}/package/{language}.post.tags.length": 1,
	"paths./projects/{id}/package/{language}.post.tags[0]": "Project",
	"paths./projects/{id}/progress.get.description": "Get the progress of an already launched project.",
	"paths./projects/{id}/progress.get.operationId": "getProgress",
	"paths./projects/{id}/progress.get.parameters.length": 1,
	"paths./projects/{id}/progress.get.parameters[0].description": "Project ID",
	"paths./projects/{id}/progress.get.parameters[0].format": "int64",
	"paths./projects/{id}/progress.get.parameters[0].in": "path",
	"paths./projects/{id}/progress.get.parameters[0].name": "id",
	"paths./projects/{id}/progress.get.parameters[0].required": true,
	"paths./projects/{id}/progress.get.parameters[0].type": "integer",
	"paths./projects/{id}/progress.get.responses.200.description": "Progress information",
	"paths./projects/{id}/progress.get.responses.200.schema.$ref": "#/definitions/Progress",
	"paths./projects/{id}/progress.get.responses.402.description": "ProjectNotLaunchedYet",
	"paths./projects/{id}/progress.get.responses.402.schema.$ref": "#/definitions/Error",
	"paths./projects/{id}/progress.get.responses.404.description": "ProjectNotFound",
	"paths./projects/{id}/progress.get.responses.404.schema.$ref": "#/definitions/Error",
	"paths./projects/{id}/progress.get.security.length": 1,
	"paths./projects/{id}/progress.get.security[0].client_credentials.length": 0,
	"paths./projects/{id}/progress.get.summary": "Get project progress",
	"paths./projects/{id}/progress.get.tags.length": 1,
	"paths./projects/{id}/progress.get.tags[0]": "Project",
	"paths./projects/{id}/reports.post.consumes.length": 2,
	"paths./projects/{id}/reports.post.consumes[0]": "multipart/form-data",
	"paths./projects/{id}/reports.post.consumes[1]": "application/json",
	"paths./projects/{id}/reports.post.operationId": "submitProjectReports",
	"paths./projects/{id}/reports.post.parameters.length": 3,
	"paths./projects/{id}/reports.post.parameters[0].description": "Project ID",
	"paths./projects/{id}/reports.post.parameters[0].format": "int64",
	"paths./projects/{id}/reports.post.parameters[0].in": "path",
	"paths./projects/{id}/reports.post.parameters[0].name": "id",
	"paths./projects/{id}/reports.post.parameters[0].required": true,
	"paths./projects/{id}/reports.post.parameters[0].type": "integer",
	"paths./projects/{id}/reports.post.parameters[1].description": "Activity Type",
	"paths./projects/{id}/reports.post.parameters[1].in": "formData",
	"paths./projects/{id}/reports.post.parameters[1].name": "activity_type",
	"paths./projects/{id}/reports.post.parameters[1].type": "string",
	"paths./projects/{id}/reports.post.parameters[2].description": "Report Message",
	"paths./projects/{id}/reports.post.parameters[2].in": "formData",
	"paths./projects/{id}/reports.post.parameters[2].name": "message",
	"paths./projects/{id}/reports.post.parameters[2].type": "string",
	"paths./projects/{id}/reports.post.responses.200.description": "Report submitted successfully",
	"paths./projects/{id}/reports.post.responses.200.schema.properties.status.default": "success",
	"paths./projects/{id}/reports.post.responses.200.schema.properties.status.type": "string",
	"paths./projects/{id}/reports.post.responses.200.schema.type": "object",
	"paths./projects/{id}/reports.post.responses.400.description": "MissingMessage",
	"paths./projects/{id}/reports.post.responses.400.schema.$ref": "#/definitions/Error",
	"paths./projects/{id}/reports.post.responses.404.description": "ProjectNotFound",
	"paths./projects/{id}/reports.post.responses.404.schema.$ref": "#/definitions/Error",
	"paths./projects/{id}/reports.post.security.length": 1,
	"paths./projects/{id}/reports.post.security[0].client_credentials.length": 0,
	"paths./projects/{id}/reports.post.summary": "Submit reports for a project",
	"paths./projects/{id}/reports.post.tags.length": 1,
	"paths./projects/{id}/reports.post.tags[0]": "Project",
	"paths./projects/{projectId}/activities.get.description": "Get a list of realtime activities on the project, such as translation suggestion and translation approval.",
	"paths./projects/{projectId}/activities.get.operationId": "getActivities",
	"paths./projects/{projectId}/activities.get.parameters.length": 3,
	"paths./projects/{projectId}/activities.get.parameters[0].description": "Project ID",
	"paths./projects/{projectId}/activities.get.parameters[0].format": "int64",
	"paths./projects/{projectId}/activities.get.parameters[0].in": "path",
	"paths./projects/{projectId}/activities.get.parameters[0].name": "projectId",
	"paths./projects/{projectId}/activities.get.parameters[0].required": true,
	"paths./projects/{projectId}/activities.get.parameters[0].type": "integer",
	"paths./projects/{projectId}/activities.get.parameters[1].default": 1,
	"paths./projects/{projectId}/activities.get.parameters[1].in": "query",
	"paths./projects/{projectId}/activities.get.parameters[1].name": "page",
	"paths./projects/{projectId}/activities.get.parameters[1].type": "integer",
	"paths./projects/{projectId}/activities.get.parameters[2].default": 10,
	"paths./projects/{projectId}/activities.get.parameters[2].in": "query",
	"paths./projects/{projectId}/activities.get.parameters[2].name": "per_page",
	"paths./projects/{projectId}/activities.get.parameters[2].type": "integer",
	"paths./projects/{projectId}/activities.get.responses.200.description": "A list of activity models",
	"paths./projects/{projectId}/activities.get.responses.200.schema.$ref": "#/definitions/ActivityList",
	"paths./projects/{projectId}/activities.get.responses.404.description": "ProjectNotFound",
	"paths./projects/{projectId}/activities.get.responses.404.schema.$ref": "#/definitions/Error",
	"paths./projects/{projectId}/activities.get.security.length": 1,
	"paths./projects/{projectId}/activities.get.security[0].client_credentials.length": 0,
	"paths./projects/{projectId}/activities.get.summary": "Get a list of realtime activities.",
	"paths./projects/{projectId}/activities.get.tags.length": 1,
	"paths./projects/{projectId}/activities.get.tags[0]": "Activity",
	"paths./projects/{projectId}/activities/{activityId}.get.description": "Get a single realtime activity.",
	"paths./projects/{projectId}/activities/{activityId}.get.operationId": "getActivity",
	"paths./projects/{projectId}/activities/{activityId}.get.parameters.length": 2,
	"paths./projects/{projectId}/activities/{activityId}.get.parameters[0].description": "Project ID",
	"paths./projects/{projectId}/activities/{activityId}.get.parameters[0].format": "int64",
	"paths./projects/{projectId}/activities/{activityId}.get.parameters[0].in": "path",
	"paths./projects/{projectId}/activities/{activityId}.get.parameters[0].name": "projectId",
	"paths./projects/{projectId}/activities/{activityId}.get.parameters[0].required": true,
	"paths./projects/{projectId}/activities/{activityId}.get.parameters[0].type": "integer",
	"paths./projects/{projectId}/activities/{activityId}.get.parameters[1].description": "Activity ID",
	"paths./projects/{projectId}/activities/{activityId}.get.parameters[1].format": "int64",
	"paths./projects/{projectId}/activities/{activityId}.get.parameters[1].in": "path",
	"paths./projects/{projectId}/activities/{activityId}.get.parameters[1].name": "activityId",
	"paths./projects/{projectId}/activities/{activityId}.get.parameters[1].required": true,
	"paths./projects/{projectId}/activities/{activityId}.get.parameters[1].type": "integer",
	"paths./projects/{projectId}/activities/{activityId}.get.responses.200.description": "Activity model",
	"paths./projects/{projectId}/activities/{activityId}.get.responses.200.schema.$ref": "#/definitions/Activity",
	"paths./projects/{projectId}/activities/{activityId}.get.responses.404.description": "ProjectActivityNotFound",
	"paths./projects/{projectId}/activities/{activityId}.get.responses.404.schema.$ref": "#/definitions/Error",
	"paths./projects/{projectId}/activities/{activityId}.get.security.length": 1,
	"paths./projects/{projectId}/activities/{activityId}.get.security[0].client_credentials.length": 0,
	"paths./projects/{projectId}/activities/{activityId}.get.summary": "Get a single realtime activity.",
	"paths./projects/{projectId}/activities/{activityId}.get.tags.length": 1,
	"paths./projects/{projectId}/activities/{activityId}.get.tags[0]": "Activity",
	"paths./projects/{projectId}/activities/{activityId}.post.consumes.length": 2,
	"paths./projects/{projectId}/activities/{activityId}.post.consumes[0]": "multipart/form-data",
	"paths./projects/{projectId}/activities/{activityId}.post.consumes[1]": "application/json",
	"paths./projects/{projectId}/activities/{activityId}.post.description": "Submit a comment to an activity.",
	"paths./projects/{projectId}/activities/{activityId}.post.operationId": "submitComment",
	"paths./projects/{projectId}/activities/{activityId}.post.parameters.length": 3,
	"paths./projects/{projectId}/activities/{activityId}.post.parameters[0].description": "Project ID",
	"paths./projects/{projectId}/activities/{activityId}.post.parameters[0].format": "int64",
	"paths./projects/{projectId}/activities/{activityId}.post.parameters[0].in": "path",
	"paths./projects/{projectId}/activities/{activityId}.post.parameters[0].name": "projectId",
	"paths./projects/{projectId}/activities/{activityId}.post.parameters[0].required": true,
	"paths./projects/{projectId}/activities/{activityId}.post.parameters[0].type": "integer",
	"paths./projects/{projectId}/activities/{activityId}.post.parameters[1].description": "Activity ID",
	"paths./projects/{projectId}/activities/{activityId}.post.parameters[1].format": "int64",
	"paths./projects/{projectId}/activities/{activityId}.post.parameters[1].in": "path",
	"paths./projects/{projectId}/activities/{activityId}.post.parameters[1].name": "activityId",
	"paths./projects/{projectId}/activities/{activityId}.post.parameters[1].required": true,
	"paths./projects/{projectId}/activities/{activityId}.post.parameters[1].type": "integer",
	"paths./projects/{projectId}/activities/{activityId}.post.parameters[2].description": "Comment text.",
	"paths./projects/{projectId}/activities/{activityId}.post.parameters[2].in": "formData",
	"paths./projects/{projectId}/activities/{activityId}.post.parameters[2].name": "comment",
	"paths./projects/{projectId}/activities/{activityId}.post.parameters[2].required": true,
	"paths./projects/{projectId}/activities/{activityId}.post.parameters[2].type": "string",
	"paths./projects/{projectId}/activities/{activityId}.post.responses.200.description": "Comment model",
	"paths./projects/{projectId}/activities/{activityId}.post.responses.200.schema.$ref": "#/definitions/Comment",
	"paths./projects/{projectId}/activities/{activityId}.post.responses.404.description": "ProjectActivityNotFound",
	"paths./projects/{projectId}/activities/{activityId}.post.responses.404.schema.$ref": "#/definitions/Error",
	"paths./projects/{projectId}/activities/{activityId}.post.security.length": 1,
	"paths./projects/{projectId}/activities/{activityId}.post.security[0].client_credentials.length": 0,
	"paths./projects/{projectId}/activities/{activityId}.post.summary": "Submit a comment to an activity.",
	"paths./projects/{projectId}/activities/{activityId}.post.tags.length": 1,
	"paths./projects/{projectId}/activities/{activityId}.post.tags[0]": "Activity",
	"paths./projects/{projectId}/activities/{activityId}/comments.get.description": "Get a list of comments belonging to this activity.",
	"paths./projects/{projectId}/activities/{activityId}/comments.get.operationId": "getActivityComments",
	"paths./projects/{projectId}/activities/{activityId}/comments.get.parameters.length": 2,
	"paths./projects/{projectId}/activities/{activityId}/comments.get.parameters[0].description": "Project ID",
	"paths./projects/{projectId}/activities/{activityId}/comments.get.parameters[0].format": "int64",
	"paths./projects/{projectId}/activities/{activityId}/comments.get.parameters[0].in": "path",
	"paths./projects/{projectId}/activities/{activityId}/comments.get.parameters[0].name": "projectId",
	"paths./projects/{projectId}/activities/{activityId}/comments.get.parameters[0].required": true,
	"paths./projects/{projectId}/activities/{activityId}/comments.get.parameters[0].type": "integer",
	"paths./projects/{projectId}/activities/{activityId}/comments.get.parameters[1].description": "Activity ID",
	"paths./projects/{projectId}/activities/{activityId}/comments.get.parameters[1].format": "int64",
	"paths./projects/{projectId}/activities/{activityId}/comments.get.parameters[1].in": "path",
	"paths./projects/{projectId}/activities/{activityId}/comments.get.parameters[1].name": "activityId",
	"paths./projects/{projectId}/activities/{activityId}/comments.get.parameters[1].required": true,
	"paths./projects/{projectId}/activities/{activityId}/comments.get.parameters[1].type": "integer",
	"paths./projects/{projectId}/activities/{activityId}/comments.get.responses.200.description": "A list of Comment models",
	"paths./projects/{projectId}/activities/{activityId}/comments.get.responses.200.schema.$ref": "#/definitions/CommentList",
	"paths./projects/{projectId}/activities/{activityId}/comments.get.responses.404.description": "ProjectActivityNotFound",
	"paths./projects/{projectId}/activities/{activityId}/comments.get.responses.404.schema.$ref": "#/definitions/Error",
	"paths./projects/{projectId}/activities/{activityId}/comments.get.security.length": 1,
	"paths./projects/{projectId}/activities/{activityId}/comments.get.security[0].client_credentials.length": 0,
	"paths./projects/{projectId}/activities/{activityId}/comments.get.summary": "Get a list of comments belonging to this activity.",
	"paths./projects/{projectId}/activities/{activityId}/comments.get.tags.length": 1,
	"paths./projects/{projectId}/activities/{activityId}/comments.get.tags[0]": "Activity",
	"paths./projects/{projectId}/comments.get.description": "Get a list of activity comments throughout the whole project.",
	"paths./projects/{projectId}/comments.get.operationId": "getComments",
	"paths./projects/{projectId}/comments.get.parameters.length": 3,
	"paths./projects/{projectId}/comments.get.parameters[0].description": "Project ID",
	"paths./projects/{projectId}/comments.get.parameters[0].format": "int64",
	"paths./projects/{projectId}/comments.get.parameters[0].in": "path",
	"paths./projects/{projectId}/comments.get.parameters[0].name": "projectId",
	"paths./projects/{projectId}/comments.get.parameters[0].required": true,
	"paths./projects/{projectId}/comments.get.parameters[0].type": "integer",
	"paths./projects/{projectId}/comments.get.parameters[1].default": 1,
	"paths./projects/{projectId}/comments.get.parameters[1].in": "query",
	"paths./projects/{projectId}/comments.get.parameters[1].name": "page",
	"paths./projects/{projectId}/comments.get.parameters[1].type": "integer",
	"paths./projects/{projectId}/comments.get.parameters[2].default": 10,
	"paths./projects/{projectId}/comments.get.parameters[2].in": "query",
	"paths./projects/{projectId}/comments.get.parameters[2].name": "per_page",
	"paths./projects/{projectId}/comments.get.parameters[2].type": "integer",
	"paths./projects/{projectId}/comments.get.responses.200.description": "A list of Comment models",
	"paths./projects/{projectId}/comments.get.responses.200.schema.$ref": "#/definitions/CommentList",
	"paths./projects/{projectId}/comments.get.responses.404.description": "ProjectNotFound",
	"paths./projects/{projectId}/comments.get.responses.404.schema.$ref": "#/definitions/Error",
	"paths./projects/{projectId}/comments.get.security.length": 1,
	"paths./projects/{projectId}/comments.get.security[0].client_credentials.length": 0,
	"paths./projects/{projectId}/comments.get.summary": "Get a list of activity comments throughout the whole project.",
	"paths./projects/{projectId}/comments.get.tags.length": 1,
	"paths./projects/{projectId}/comments.get.tags[0]": "Activity",
	"paths./projects/{projectId}/documents.get.description": "Get a list of documents",
	"paths./projects/{projectId}/documents.get.operationId": "getDocuments",
	"paths./projects/{projectId}/documents.get.parameters.length": 1,
	"paths./projects/{projectId}/documents.get.parameters[0].description": "Project ID",
	"paths./projects/{projectId}/documents.get.parameters[0].format": "int64",
	"paths./projects/{projectId}/documents.get.parameters[0].in": "path",
	"paths./projects/{projectId}/documents.get.parameters[0].name": "projectId",
	"paths./projects/{projectId}/documents.get.parameters[0].required": true,
	"paths./projects/{projectId}/documents.get.parameters[0].type": "integer",
	"paths./projects/{projectId}/documents.get.responses.200.description": "A list of document models",
	"paths./projects/{projectId}/documents.get.responses.200.schema.$ref": "#/definitions/DocumentList",
	"paths./projects/{projectId}/documents.get.responses.404.description": "ProjectNotFound",
	"paths./projects/{projectId}/documents.get.responses.404.schema.$ref": "#/definitions/Error",
	"paths./projects/{projectId}/documents.get.security.length": 1,
	"paths./projects/{projectId}/documents.get.security[0].client_credentials.length": 0,
	"paths./projects/{projectId}/documents.get.summary": "Get a list of documents",
	"paths./projects/{projectId}/documents.get.tags.length": 1,
	"paths./projects/{projectId}/documents.get.tags[0]": "Document",
	"paths./projects/{projectId}/documents.post.consumes.length": 2,
	"paths./projects/{projectId}/documents.post.consumes[0]": "multipart/form-data",
	"paths./projects/{projectId}/documents.post.consumes[1]": "application/json",
	"paths./projects/{projectId}/documents.post.description": "Upload a new document",
	"paths./projects/{projectId}/documents.post.operationId": "createDocument",
	"paths./projects/{projectId}/documents.post.parameters.length": 3,
	"paths./projects/{projectId}/documents.post.parameters[0].description": "Project ID",
	"paths./projects/{projectId}/documents.post.parameters[0].format": "int64",
	"paths./projects/{projectId}/documents.post.parameters[0].in": "path",
	"paths./projects/{projectId}/documents.post.parameters[0].name": "projectId",
	"paths./projects/{projectId}/documents.post.parameters[0].required": true,
	"paths./projects/{projectId}/documents.post.parameters[0].type": "integer",
	"paths./projects/{projectId}/documents.post.parameters[1].description": "You can add as many files as you want in documents[] parameter.",
	"paths./projects/{projectId}/documents.post.parameters[1].in": "formData",
	"paths./projects/{projectId}/documents.post.parameters[1].name": "documents[]",
	"paths./projects/{projectId}/documents.post.parameters[1].required": true,
	"paths./projects/{projectId}/documents.post.parameters[1].type": "file",
	"paths./projects/{projectId}/documents.post.parameters[2].description": "JSON string. If your documents have a scheme, as in cases of CSV files, use the same array index keys for `schemes` parameter to specify their schemes. See `Document Schemes` title in the API documentation.",
	"paths./projects/{projectId}/documents.post.parameters[2].in": "formData",
	"paths./projects/{projectId}/documents.post.parameters[2].name": "schemes[]",
	"paths./projects/{projectId}/documents.post.parameters[2].required": false,
	"paths./projects/{projectId}/documents.post.parameters[2].type": "string",
	"paths./projects/{projectId}/documents.post.responses.200.description": "A list of successfully added new documents.",
	"paths./projects/{projectId}/documents.post.responses.200.schema.$ref": "#/definitions/Document",
	"paths./projects/{projectId}/documents.post.responses.400.description": "FileTooLarge FileTooSmall FileWasAlreadyUploaded",
	"paths./projects/{projectId}/documents.post.responses.400.schema.$ref": "#/definitions/Error",
	"paths./projects/{projectId}/documents.post.responses.404.description": "ProjectNotFound",
	"paths./projects/{projectId}/documents.post.responses.404.schema.$ref": "#/definitions/Error",
	"paths./projects/{projectId}/documents.post.responses.405.description": "UnsupportedDocumentFormat",
	"paths./projects/{projectId}/documents.post.responses.405.schema.$ref": "#/definitions/Error",
	"paths./projects/{projectId}/documents.post.responses.406.description": "InvalidDocumentScheme",
	"paths./projects/{projectId}/documents.post.responses.406.schema.$ref": "#/definitions/Error",
	"paths./projects/{projectId}/documents.post.responses.409.description": "ProjectAlreadyStarted",
	"paths./projects/{projectId}/documents.post.responses.409.schema.$ref": "#/definitions/Error",
	"paths./projects/{projectId}/documents.post.security.length": 1,
	"paths./projects/{projectId}/documents.post.security[0].client_credentials.length": 0,
	"paths./projects/{projectId}/documents.post.summary": "Upload a new document",
	"paths./projects/{projectId}/documents.post.tags.length": 1,
	"paths./projects/{projectId}/documents.post.tags[0]": "Document",
	"paths./projects/{projectId}/documents/{documentId}.delete.description": "Delete the document",
	"paths./projects/{projectId}/documents/{documentId}.delete.operationId": "deleteDocument",
	"paths./projects/{projectId}/documents/{documentId}.delete.parameters.length": 2,
	"paths./projects/{projectId}/documents/{documentId}.delete.parameters[0].description": "Project ID",
	"paths./projects/{projectId}/documents/{documentId}.delete.parameters[0].format": "int64",
	"paths./projects/{projectId}/documents/{documentId}.delete.parameters[0].in": "path",
	"paths./projects/{projectId}/documents/{documentId}.delete.parameters[0].name": "projectId",
	"paths./projects/{projectId}/documents/{documentId}.delete.parameters[0].required": true,
	"paths./projects/{projectId}/documents/{documentId}.delete.parameters[0].type": "integer",
	"paths./projects/{projectId}/documents/{documentId}.delete.parameters[1].description": "Document ID",
	"paths./projects/{projectId}/documents/{documentId}.delete.parameters[1].format": "int64",
	"paths./projects/{projectId}/documents/{documentId}.delete.parameters[1].in": "path",
	"paths./projects/{projectId}/documents/{documentId}.delete.parameters[1].name": "documentId",
	"paths./projects/{projectId}/documents/{documentId}.delete.parameters[1].required": true,
	"paths./projects/{projectId}/documents/{documentId}.delete.parameters[1].type": "integer",
	"paths./projects/{projectId}/documents/{documentId}.delete.responses.200.description": "Document deleted successfully",
	"paths./projects/{projectId}/documents/{documentId}.delete.responses.200.schema.properties.status.default": "success",
	"paths./projects/{projectId}/documents/{documentId}.delete.responses.200.schema.properties.status.type": "string",
	"paths./projects/{projectId}/documents/{documentId}.delete.responses.200.schema.type": "object",
	"paths./projects/{projectId}/documents/{documentId}.delete.responses.404.description": "DocumentNotFound",
	"paths./projects/{projectId}/documents/{documentId}.delete.responses.404.schema.$ref": "#/definitions/Error",
	"paths./projects/{projectId}/documents/{documentId}.delete.responses.409.description": "ProjectAlreadyStarted",
	"paths./projects/{projectId}/documents/{documentId}.delete.responses.409.schema.$ref": "#/definitions/Error",
	"paths./projects/{projectId}/documents/{documentId}.delete.security.length": 1,
	"paths./projects/{projectId}/documents/{documentId}.delete.security[0].client_credentials.length": 0,
	"paths./projects/{projectId}/documents/{documentId}.delete.summary": "Delete the document",
	"paths./projects/{projectId}/documents/{documentId}.delete.tags.length": 1,
	"paths./projects/{projectId}/documents/{documentId}.delete.tags[0]": "Document",
	"paths./projects/{projectId}/documents/{documentId}.get.description": "Get single document",
	"paths./projects/{projectId}/documents/{documentId}.get.operationId": "getDocument",
	"paths./projects/{projectId}/documents/{documentId}.get.parameters.length": 2,
	"paths./projects/{projectId}/documents/{documentId}.get.parameters[0].description": "Project ID",
	"paths./projects/{projectId}/documents/{documentId}.get.parameters[0].format": "int64",
	"paths./projects/{projectId}/documents/{documentId}.get.parameters[0].in": "path",
	"paths./projects/{projectId}/documents/{documentId}.get.parameters[0].name": "projectId",
	"paths./projects/{projectId}/documents/{documentId}.get.parameters[0].required": true,
	"paths./projects/{projectId}/documents/{documentId}.get.parameters[0].type": "integer",
	"paths./projects/{projectId}/documents/{documentId}.get.parameters[1].description": "Document ID",
	"paths./projects/{projectId}/documents/{documentId}.get.parameters[1].format": "int64",
	"paths./projects/{projectId}/documents/{documentId}.get.parameters[1].in": "path",
	"paths./projects/{projectId}/documents/{documentId}.get.parameters[1].name": "documentId",
	"paths./projects/{projectId}/documents/{documentId}.get.parameters[1].required": true,
	"paths./projects/{projectId}/documents/{documentId}.get.parameters[1].type": "integer",
	"paths./projects/{projectId}/documents/{documentId}.get.responses.200.description": "Document model",
	"paths./projects/{projectId}/documents/{documentId}.get.responses.200.schema.$ref": "#/definitions/Document",
	"paths./projects/{projectId}/documents/{documentId}.get.responses.404.description": "DocumentNotFound",
	"paths./projects/{projectId}/documents/{documentId}.get.responses.404.schema.$ref": "#/definitions/Error",
	"paths./projects/{projectId}/documents/{documentId}.get.security.length": 1,
	"paths./projects/{projectId}/documents/{documentId}.get.security[0].client_credentials.length": 0,
	"paths./projects/{projectId}/documents/{documentId}.get.summary": "Get single document",
	"paths./projects/{projectId}/documents/{documentId}.get.tags.length": 1,
	"paths./projects/{projectId}/documents/{documentId}.get.tags[0]": "Document",
	"paths./projects/{projectId}/documents/{documentId}.put.consumes.length": 2,
	"paths./projects/{projectId}/documents/{documentId}.put.consumes[0]": "multipart/form-data",
	"paths./projects/{projectId}/documents/{documentId}.put.consumes[1]": "application/json",
	"paths./projects/{projectId}/documents/{documentId}.put.description": "Update the document. File name and contents will replaced with the new one.",
	"paths./projects/{projectId}/documents/{documentId}.put.operationId": "updateDocument",
	"paths./projects/{projectId}/documents/{documentId}.put.parameters.length": 4,
	"paths./projects/{projectId}/documents/{documentId}.put.parameters[0].description": "Project ID",
	"paths./projects/{projectId}/documents/{documentId}.put.parameters[0].format": "int64",
	"paths./projects/{projectId}/documents/{documentId}.put.parameters[0].in": "path",
	"paths./projects/{projectId}/documents/{documentId}.put.parameters[0].name": "projectId",
	"paths./projects/{projectId}/documents/{documentId}.put.parameters[0].required": true,
	"paths./projects/{projectId}/documents/{documentId}.put.parameters[0].type": "integer",
	"paths./projects/{projectId}/documents/{documentId}.put.parameters[1].description": "Document ID",
	"paths./projects/{projectId}/documents/{documentId}.put.parameters[1].format": "int64",
	"paths./projects/{projectId}/documents/{documentId}.put.parameters[1].in": "path",
	"paths./projects/{projectId}/documents/{documentId}.put.parameters[1].name": "documentId",
	"paths./projects/{projectId}/documents/{documentId}.put.parameters[1].required": true,
	"paths./projects/{projectId}/documents/{documentId}.put.parameters[1].type": "integer",
	"paths./projects/{projectId}/documents/{documentId}.put.parameters[2].description": "Single file data. The name is plural to provide a consistent naming convention.",
	"paths./projects/{projectId}/documents/{documentId}.put.parameters[2].in": "formData",
	"paths./projects/{projectId}/documents/{documentId}.put.parameters[2].name": "documents",
	"paths./projects/{projectId}/documents/{documentId}.put.parameters[2].required": false,
	"paths./projects/{projectId}/documents/{documentId}.put.parameters[2].type": "file",
	"paths./projects/{projectId}/documents/{documentId}.put.parameters[3].description": "JSON string. If your documents have a scheme, as in cases of CSV files, use the same array index keys for `schemes` parameter to specify their schemes. See `Document Schemes` title in the API documentation.",
	"paths./projects/{projectId}/documents/{documentId}.put.parameters[3].in": "formData",
	"paths./projects/{projectId}/documents/{documentId}.put.parameters[3].name": "schemes",
	"paths./projects/{projectId}/documents/{documentId}.put.parameters[3].required": false,
	"paths./projects/{projectId}/documents/{documentId}.put.parameters[3].type": "string",
	"paths./projects/{projectId}/documents/{documentId}.put.responses.200.description": "Updated document model",
	"paths./projects/{projectId}/documents/{documentId}.put.responses.200.schema.$ref": "#/definitions/Document",
	"paths./projects/{projectId}/documents/{documentId}.put.responses.400.description": "FileTooLarge FileTooSmall FileWasAlreadyUploaded",
	"paths./projects/{projectId}/documents/{documentId}.put.responses.400.schema.$ref": "#/definitions/Error",
	"paths./projects/{projectId}/documents/{documentId}.put.responses.404.description": "DocumentNotFound",
	"paths./projects/{projectId}/documents/{documentId}.put.responses.404.schema.$ref": "#/definitions/Error",
	"paths./projects/{projectId}/documents/{documentId}.put.responses.405.description": "UnsupportedDocumentFormat",
	"paths./projects/{projectId}/documents/{documentId}.put.responses.405.schema.$ref": "#/definitions/Error",
	"paths./projects/{projectId}/documents/{documentId}.put.responses.406.description": "InvalidDocumentScheme",
	"paths./projects/{projectId}/documents/{documentId}.put.responses.406.schema.$ref": "#/definitions/Error",
	"paths./projects/{projectId}/documents/{documentId}.put.responses.409.description": "ProjectAlreadyStarted",
	"paths./projects/{projectId}/documents/{documentId}.put.responses.409.schema.$ref": "#/definitions/Error",
	"paths./projects/{projectId}/documents/{documentId}.put.security.length": 1,
	"paths./projects/{projectId}/documents/{documentId}.put.security[0].client_credentials.length": 0,
	"paths./projects/{projectId}/documents/{documentId}.put.summary": "Update the document.",
	"paths./projects/{projectId}/documents/{documentId}.put.tags.length": 1,
	"paths./projects/{projectId}/documents/{documentId}.put.tags[0]": "Document",
	"paths./projects/{projectId}/documents/{documentId}/download.get.description": "Download a document",
	"paths./projects/{projectId}/documents/{documentId}/download.get.operationId": "downloadDocument",
	"paths./projects/{projectId}/documents/{documentId}/download.get.parameters.length": 2,
	"paths./projects/{projectId}/documents/{documentId}/download.get.parameters[0].description": "Project ID",
	"paths./projects/{projectId}/documents/{documentId}/download.get.parameters[0].format": "int64",
	"paths./projects/{projectId}/documents/{documentId}/download.get.parameters[0].in": "path",
	"paths./projects/{projectId}/documents/{documentId}/download.get.parameters[0].name": "projectId",
	"paths./projects/{projectId}/documents/{documentId}/download.get.parameters[0].required": true,
	"paths./projects/{projectId}/documents/{documentId}/download.get.parameters[0].type": "integer",
	"paths./projects/{projectId}/documents/{documentId}/download.get.parameters[1].description": "Document ID",
	"paths./projects/{projectId}/documents/{documentId}/download.get.parameters[1].format": "int64",
	"paths./projects/{projectId}/documents/{documentId}/download.get.parameters[1].in": "path",
	"paths./projects/{projectId}/documents/{documentId}/download.get.parameters[1].name": "documentId",
	"paths./projects/{projectId}/documents/{documentId}/download.get.parameters[1].required": true,
	"paths./projects/{projectId}/documents/{documentId}/download.get.parameters[1].type": "integer",
	"paths./projects/{projectId}/documents/{documentId}/download.get.responses.200.description": "Document streamed",
	"paths./projects/{projectId}/documents/{documentId}/download.get.responses.200.schema.type": "string",
	"paths./projects/{projectId}/documents/{documentId}/download.get.responses.404.description": "DocumentNotFound",
	"paths./projects/{projectId}/documents/{documentId}/download.get.responses.404.schema.$ref": "#/definitions/Error",
	"paths./projects/{projectId}/documents/{documentId}/download.get.security.length": 1,
	"paths./projects/{projectId}/documents/{documentId}/download.get.security[0].client_credentials.length": 0,
	"paths./projects/{projectId}/documents/{documentId}/download.get.summary": "Download a document",
	"paths./projects/{projectId}/documents/{documentId}/download.get.tags.length": 1,
	"paths./projects/{projectId}/documents/{documentId}/download.get.tags[0]": "Document",
	"paths./projects/{projectId}/glossaries.get.description": "Get a list of glossaries",
	"paths./projects/{projectId}/glossaries.get.operationId": "getGlossaries",
	"paths./projects/{projectId}/glossaries.get.parameters.length": 1,
	"paths./projects/{projectId}/glossaries.get.parameters[0].description": "Project ID",
	"paths./projects/{projectId}/glossaries.get.parameters[0].format": "int64",
	"paths./projects/{projectId}/glossaries.get.parameters[0].in": "path",
	"paths./projects/{projectId}/glossaries.get.parameters[0].name": "projectId",
	"paths./projects/{projectId}/glossaries.get.parameters[0].required": true,
	"paths./projects/{projectId}/glossaries.get.parameters[0].type": "integer",
	"paths./projects/{projectId}/glossaries.get.responses.200.description": "A list of glossary models",
	"paths./projects/{projectId}/glossaries.get.responses.200.schema.$ref": "#/definitions/GlossaryList",
	"paths./projects/{projectId}/glossaries.get.responses.404.description": "ProjectNotFound",
	"paths./projects/{projectId}/glossaries.get.responses.404.schema.$ref": "#/definitions/Error",
	"paths./projects/{projectId}/glossaries.get.security.length": 1,
	"paths./projects/{projectId}/glossaries.get.security[0].client_credentials.length": 0,
	"paths./projects/{projectId}/glossaries.get.summary": "Get a list of glossaries",
	"paths./projects/{projectId}/glossaries.get.tags.length": 1,
	"paths./projects/{projectId}/glossaries.get.tags[0]": "Glossary",
	"paths./projects/{projectId}/glossaries.post.consumes.length": 2,
	"paths./projects/{projectId}/glossaries.post.consumes[0]": "multipart/form-data",
	"paths./projects/{projectId}/glossaries.post.consumes[1]": "application/json",
	"paths./projects/{projectId}/glossaries.post.description": "Upload a new glossary",
	"paths./projects/{projectId}/glossaries.post.operationId": "createGlossary",
	"paths./projects/{projectId}/glossaries.post.parameters.length": 2,
	"paths./projects/{projectId}/glossaries.post.parameters[0].description": "Project ID",
	"paths./projects/{projectId}/glossaries.post.parameters[0].format": "int64",
	"paths./projects/{projectId}/glossaries.post.parameters[0].in": "path",
	"paths./projects/{projectId}/glossaries.post.parameters[0].name": "projectId",
	"paths./projects/{projectId}/glossaries.post.parameters[0].required": true,
	"paths./projects/{projectId}/glossaries.post.parameters[0].type": "integer",
	"paths./projects/{projectId}/glossaries.post.parameters[1].description": "You can only add one glossary, even though the name suggests multiple glossaries. This may be updated in the future to support multiple glossaries.",
	"paths./projects/{projectId}/glossaries.post.parameters[1].in": "formData",
	"paths./projects/{projectId}/glossaries.post.parameters[1].name": "glossaries",
	"paths./projects/{projectId}/glossaries.post.parameters[1].required": true,
	"paths./projects/{projectId}/glossaries.post.parameters[1].type": "file",
	"paths./projects/{projectId}/glossaries.post.responses.200.description": "Newly created glossary model.",
	"paths./projects/{projectId}/glossaries.post.responses.200.schema.$ref": "#/definitions/Glossary",
	"paths./projects/{projectId}/glossaries.post.responses.400.description": "FileTooLarge",
	"paths./projects/{projectId}/glossaries.post.responses.400.schema.$ref": "#/definitions/Error",
	"paths./projects/{projectId}/glossaries.post.responses.404.description": "ProjectNotFound",
	"paths./projects/{projectId}/glossaries.post.responses.404.schema.$ref": "#/definitions/Error",
	"paths./projects/{projectId}/glossaries.post.responses.405.description": "UnsupportedGlossaryFormat",
	"paths./projects/{projectId}/glossaries.post.responses.405.schema.$ref": "#/definitions/Error",
	"paths./projects/{projectId}/glossaries.post.responses.406.description": "ProjectAlreadyHasGlossary",
	"paths./projects/{projectId}/glossaries.post.responses.406.schema.$ref": "#/definitions/Error",
	"paths./projects/{projectId}/glossaries.post.responses.409.description": "ProjectAlreadyStarted",
	"paths./projects/{projectId}/glossaries.post.responses.409.schema.$ref": "#/definitions/Error",
	"paths./projects/{projectId}/glossaries.post.security.length": 1,
	"paths./projects/{projectId}/glossaries.post.security[0].client_credentials.length": 0,
	"paths./projects/{projectId}/glossaries.post.summary": "Upload a new glossary",
	"paths./projects/{projectId}/glossaries.post.tags.length": 1,
	"paths./projects/{projectId}/glossaries.post.tags[0]": "Glossary",
	"paths./projects/{projectId}/glossaries/{glossaryId}.delete.description": "Delete the glossary",
	"paths./projects/{projectId}/glossaries/{glossaryId}.delete.operationId": "deleteGlossary",
	"paths./projects/{projectId}/glossaries/{glossaryId}.delete.parameters.length": 2,
	"paths./projects/{projectId}/glossaries/{glossaryId}.delete.parameters[0].description": "Project ID",
	"paths./projects/{projectId}/glossaries/{glossaryId}.delete.parameters[0].format": "int64",
	"paths./projects/{projectId}/glossaries/{glossaryId}.delete.parameters[0].in": "path",
	"paths./projects/{projectId}/glossaries/{glossaryId}.delete.parameters[0].name": "projectId",
	"paths./projects/{projectId}/glossaries/{glossaryId}.delete.parameters[0].required": true,
	"paths./projects/{projectId}/glossaries/{glossaryId}.delete.parameters[0].type": "integer",
	"paths./projects/{projectId}/glossaries/{glossaryId}.delete.parameters[1].description": "Glossary ID",
	"paths./projects/{projectId}/glossaries/{glossaryId}.delete.parameters[1].format": "int64",
	"paths./projects/{projectId}/glossaries/{glossaryId}.delete.parameters[1].in": "path",
	"paths./projects/{projectId}/glossaries/{glossaryId}.delete.parameters[1].name": "glossaryId",
	"paths./projects/{projectId}/glossaries/{glossaryId}.delete.parameters[1].required": true,
	"paths./projects/{projectId}/glossaries/{glossaryId}.delete.parameters[1].type": "integer",
	"paths./projects/{projectId}/glossaries/{glossaryId}.delete.responses.200.description": "Glossary deleted successfully",
	"paths./projects/{projectId}/glossaries/{glossaryId}.delete.responses.200.schema.properties.status.default": "success",
	"paths./projects/{projectId}/glossaries/{glossaryId}.delete.responses.200.schema.properties.status.type": "string",
	"paths./projects/{projectId}/glossaries/{glossaryId}.delete.responses.200.schema.type": "object",
	"paths./projects/{projectId}/glossaries/{glossaryId}.delete.responses.404.description": "GlossaryNotFound",
	"paths./projects/{projectId}/glossaries/{glossaryId}.delete.responses.404.schema.$ref": "#/definitions/Error",
	"paths./projects/{projectId}/glossaries/{glossaryId}.delete.responses.409.description": "ProjectAlreadyStarted",
	"paths./projects/{projectId}/glossaries/{glossaryId}.delete.responses.409.schema.$ref": "#/definitions/Error",
	"paths./projects/{projectId}/glossaries/{glossaryId}.delete.security.length": 1,
	"paths./projects/{projectId}/glossaries/{glossaryId}.delete.security[0].client_credentials.length": 0,
	"paths./projects/{projectId}/glossaries/{glossaryId}.delete.summary": "Delete the glossary",
	"paths./projects/{projectId}/glossaries/{glossaryId}.delete.tags.length": 1,
	"paths./projects/{projectId}/glossaries/{glossaryId}.delete.tags[0]": "Glossary",
	"paths./projects/{projectId}/glossaries/{glossaryId}.get.description": "Get single glossary",
	"paths./projects/{projectId}/glossaries/{glossaryId}.get.operationId": "getGlossary",
	"paths./projects/{projectId}/glossaries/{glossaryId}.get.parameters.length": 2,
	"paths./projects/{projectId}/glossaries/{glossaryId}.get.parameters[0].description": "Project ID",
	"paths./projects/{projectId}/glossaries/{glossaryId}.get.parameters[0].format": "int64",
	"paths./projects/{projectId}/glossaries/{glossaryId}.get.parameters[0].in": "path",
	"paths./projects/{projectId}/glossaries/{glossaryId}.get.parameters[0].name": "projectId",
	"paths./projects/{projectId}/glossaries/{glossaryId}.get.parameters[0].required": true,
	"paths./projects/{projectId}/glossaries/{glossaryId}.get.parameters[0].type": "integer",
	"paths./projects/{projectId}/glossaries/{glossaryId}.get.parameters[1].description": "Glossary ID",
	"paths./projects/{projectId}/glossaries/{glossaryId}.get.parameters[1].format": "int64",
	"paths./projects/{projectId}/glossaries/{glossaryId}.get.parameters[1].in": "path",
	"paths./projects/{projectId}/glossaries/{glossaryId}.get.parameters[1].name": "glossaryId",
	"paths./projects/{projectId}/glossaries/{glossaryId}.get.parameters[1].required": true,
	"paths./projects/{projectId}/glossaries/{glossaryId}.get.parameters[1].type": "integer",
	"paths./projects/{projectId}/glossaries/{glossaryId}.get.responses.200.description": "Glossary model",
	"paths./projects/{projectId}/glossaries/{glossaryId}.get.responses.200.schema.$ref": "#/definitions/Glossary",
	"paths./projects/{projectId}/glossaries/{glossaryId}.get.responses.404.description": "GlossaryNotFound",
	"paths./projects/{projectId}/glossaries/{glossaryId}.get.responses.404.schema.$ref": "#/definitions/Error",
	"paths./projects/{projectId}/glossaries/{glossaryId}.get.security.length": 1,
	"paths./projects/{projectId}/glossaries/{glossaryId}.get.security[0].client_credentials.length": 0,
	"paths./projects/{projectId}/glossaries/{glossaryId}.get.summary": "Get single glossary",
	"paths./projects/{projectId}/glossaries/{glossaryId}.get.tags.length": 1,
	"paths./projects/{projectId}/glossaries/{glossaryId}.get.tags[0]": "Glossary",
	"paths./projects/{projectId}/glossaries/{glossaryId}.put.consumes.length": 2,
	"paths./projects/{projectId}/glossaries/{glossaryId}.put.consumes[0]": "multipart/form-data",
	"paths./projects/{projectId}/glossaries/{glossaryId}.put.consumes[1]": "application/json",
	"paths./projects/{projectId}/glossaries/{glossaryId}.put.description": "Update the glossary. File name and contents will replaced with the new one.",
	"paths./projects/{projectId}/glossaries/{glossaryId}.put.operationId": "updateGlossary",
	"paths./projects/{projectId}/glossaries/{glossaryId}.put.parameters.length": 3,
	"paths./projects/{projectId}/glossaries/{glossaryId}.put.parameters[0].description": "Project ID",
	"paths./projects/{projectId}/glossaries/{glossaryId}.put.parameters[0].format": "int64",
	"paths./projects/{projectId}/glossaries/{glossaryId}.put.parameters[0].in": "path",
	"paths./projects/{projectId}/glossaries/{glossaryId}.put.parameters[0].name": "projectId",
	"paths./projects/{projectId}/glossaries/{glossaryId}.put.parameters[0].required": true,
	"paths./projects/{projectId}/glossaries/{glossaryId}.put.parameters[0].type": "integer",
	"paths./projects/{projectId}/glossaries/{glossaryId}.put.parameters[1].description": "Glossary ID",
	"paths./projects/{projectId}/glossaries/{glossaryId}.put.parameters[1].format": "int64",
	"paths./projects/{projectId}/glossaries/{glossaryId}.put.parameters[1].in": "path",
	"paths./projects/{projectId}/glossaries/{glossaryId}.put.parameters[1].name": "glossaryId",
	"paths./projects/{projectId}/glossaries/{glossaryId}.put.parameters[1].required": true,
	"paths./projects/{projectId}/glossaries/{glossaryId}.put.parameters[1].type": "integer",
	"paths./projects/{projectId}/glossaries/{glossaryId}.put.parameters[2].description": "Single file data. The name is plural to provide a consistent naming convention.",
	"paths./projects/{projectId}/glossaries/{glossaryId}.put.parameters[2].in": "formData",
	"paths./projects/{projectId}/glossaries/{glossaryId}.put.parameters[2].name": "glossaries",
	"paths./projects/{projectId}/glossaries/{glossaryId}.put.parameters[2].required": true,
	"paths./projects/{projectId}/glossaries/{glossaryId}.put.parameters[2].type": "file",
	"paths./projects/{projectId}/glossaries/{glossaryId}.put.responses.200.description": "Updated glossary model",
	"paths./projects/{projectId}/glossaries/{glossaryId}.put.responses.200.schema.$ref": "#/definitions/Glossary",
	"paths./projects/{projectId}/glossaries/{glossaryId}.put.responses.400.description": "FileTooLarge",
	"paths./projects/{projectId}/glossaries/{glossaryId}.put.responses.400.schema.$ref": "#/definitions/Error",
	"paths./projects/{projectId}/glossaries/{glossaryId}.put.responses.404.description": "GlossaryNotFound",
	"paths./projects/{projectId}/glossaries/{glossaryId}.put.responses.404.schema.$ref": "#/definitions/Error",
	"paths./projects/{projectId}/glossaries/{glossaryId}.put.responses.405.description": "UnsupportedGlossaryFormat",
	"paths./projects/{projectId}/glossaries/{glossaryId}.put.responses.405.schema.$ref": "#/definitions/Error",
	"paths./projects/{projectId}/glossaries/{glossaryId}.put.responses.409.description": "ProjectAlreadyStarted",
	"paths./projects/{projectId}/glossaries/{glossaryId}.put.responses.409.schema.$ref": "#/definitions/Error",
	"paths./projects/{projectId}/glossaries/{glossaryId}.put.security.length": 1,
	"paths./projects/{projectId}/glossaries/{glossaryId}.put.security[0].client_credentials.length": 0,
	"paths./projects/{projectId}/glossaries/{glossaryId}.put.summary": "Update the glossary.",
	"paths./projects/{projectId}/glossaries/{glossaryId}.put.tags.length": 1,
	"paths./projects/{projectId}/glossaries/{glossaryId}.put.tags[0]": "Glossary",
	"paths./projects/{projectId}/glossaries/{glossaryId}/download.get.description": "Download a glossary",
	"paths./projects/{projectId}/glossaries/{glossaryId}/download.get.operationId": "downloadGlossary",
	"paths./projects/{projectId}/glossaries/{glossaryId}/download.get.parameters.length": 2,
	"paths./projects/{projectId}/glossaries/{glossaryId}/download.get.parameters[0].description": "Project ID",
	"paths./projects/{projectId}/glossaries/{glossaryId}/download.get.parameters[0].format": "int64",
	"paths./projects/{projectId}/glossaries/{glossaryId}/download.get.parameters[0].in": "path",
	"paths./projects/{projectId}/glossaries/{glossaryId}/download.get.parameters[0].name": "projectId",
	"paths./projects/{projectId}/glossaries/{glossaryId}/download.get.parameters[0].required": true,
	"paths./projects/{projectId}/glossaries/{glossaryId}/download.get.parameters[0].type": "integer",
	"paths./projects/{projectId}/glossaries/{glossaryId}/download.get.parameters[1].description": "Glossary ID",
	"paths./projects/{projectId}/glossaries/{glossaryId}/download.get.parameters[1].format": "int64",
	"paths./projects/{projectId}/glossaries/{glossaryId}/download.get.parameters[1].in": "path",
	"paths./projects/{projectId}/glossaries/{glossaryId}/download.get.parameters[1].name": "glossaryId",
	"paths./projects/{projectId}/glossaries/{glossaryId}/download.get.parameters[1].required": true,
	"paths./projects/{projectId}/glossaries/{glossaryId}/download.get.parameters[1].type": "integer",
	"paths./projects/{projectId}/glossaries/{glossaryId}/download.get.responses.200.description": "Glossary streamed",
	"paths./projects/{projectId}/glossaries/{glossaryId}/download.get.responses.200.schema.type": "string",
	"paths./projects/{projectId}/glossaries/{glossaryId}/download.get.responses.404.description": "GlossaryNotFound",
	"paths./projects/{projectId}/glossaries/{glossaryId}/download.get.responses.404.schema.$ref": "#/definitions/Error",
	"paths./projects/{projectId}/glossaries/{glossaryId}/download.get.security.length": 1,
	"paths./projects/{projectId}/glossaries/{glossaryId}/download.get.security[0].client_credentials.length": 0,
	"paths./projects/{projectId}/glossaries/{glossaryId}/download.get.summary": "Download a glossary",
	"paths./projects/{projectId}/glossaries/{glossaryId}/download.get.tags.length": 1,
	"paths./projects/{projectId}/glossaries/{glossaryId}/download.get.tags[0]": "Glossary",
	"paths./projects/{projectId}/styleguides.get.description": "Get a list of style guides",
	"paths./projects/{projectId}/styleguides.get.operationId": "getStyleGuides",
	"paths./projects/{projectId}/styleguides.get.parameters.length": 1,
	"paths./projects/{projectId}/styleguides.get.parameters[0].description": "Project ID",
	"paths./projects/{projectId}/styleguides.get.parameters[0].format": "int64",
	"paths./projects/{projectId}/styleguides.get.parameters[0].in": "path",
	"paths./projects/{projectId}/styleguides.get.parameters[0].name": "projectId",
	"paths./projects/{projectId}/styleguides.get.parameters[0].required": true,
	"paths./projects/{projectId}/styleguides.get.parameters[0].type": "integer",
	"paths./projects/{projectId}/styleguides.get.responses.200.description": "A list of style guide models",
	"paths./projects/{projectId}/styleguides.get.responses.200.schema.$ref": "#/definitions/StyleGuideList",
	"paths./projects/{projectId}/styleguides.get.responses.404.description": "ProjectNotFound",
	"paths./projects/{projectId}/styleguides.get.responses.404.schema.$ref": "#/definitions/Error",
	"paths./projects/{projectId}/styleguides.get.security.length": 1,
	"paths./projects/{projectId}/styleguides.get.security[0].client_credentials.length": 0,
	"paths./projects/{projectId}/styleguides.get.summary": "Get a list of style guides",
	"paths./projects/{projectId}/styleguides.get.tags.length": 1,
	"paths./projects/{projectId}/styleguides.get.tags[0]": "Style Guide",
	"paths./projects/{projectId}/styleguides.post.consumes.length": 2,
	"paths./projects/{projectId}/styleguides.post.consumes[0]": "multipart/form-data",
	"paths./projects/{projectId}/styleguides.post.consumes[1]": "application/json",
	"paths./projects/{projectId}/styleguides.post.description": "Upload a new style guide",
	"paths./projects/{projectId}/styleguides.post.operationId": "createStyleGuide",
	"paths./projects/{projectId}/styleguides.post.parameters.length": 2,
	"paths./projects/{projectId}/styleguides.post.parameters[0].description": "Project ID",
	"paths./projects/{projectId}/styleguides.post.parameters[0].format": "int64",
	"paths./projects/{projectId}/styleguides.post.parameters[0].in": "path",
	"paths./projects/{projectId}/styleguides.post.parameters[0].name": "projectId",
	"paths./projects/{projectId}/styleguides.post.parameters[0].required": true,
	"paths./projects/{projectId}/styleguides.post.parameters[0].type": "integer",
	"paths./projects/{projectId}/styleguides.post.parameters[1].description": "You can add as many files as you want in styleguides[] parameter.",
	"paths./projects/{projectId}/styleguides.post.parameters[1].in": "formData",
	"paths./projects/{projectId}/styleguides.post.parameters[1].name": "styleguides[]",
	"paths./projects/{projectId}/styleguides.post.parameters[1].required": true,
	"paths./projects/{projectId}/styleguides.post.parameters[1].type": "file",
	"paths./projects/{projectId}/styleguides.post.responses.200.description": "Newly created style guide model or a list of new style guide models",
	"paths./projects/{projectId}/styleguides.post.responses.200.schema.$ref": "#/definitions/StyleGuide",
	"paths./projects/{projectId}/styleguides.post.responses.400.description": "FileTooLarge",
	"paths./projects/{projectId}/styleguides.post.responses.400.schema.$ref": "#/definitions/Error",
	"paths./projects/{projectId}/styleguides.post.responses.404.description": "ProjectNotFound",
	"paths./projects/{projectId}/styleguides.post.responses.404.schema.$ref": "#/definitions/Error",
	"paths./projects/{projectId}/styleguides.post.responses.405.description": "UnsupportedStyleGuideFormat",
	"paths./projects/{projectId}/styleguides.post.responses.405.schema.$ref": "#/definitions/Error",
	"paths./projects/{projectId}/styleguides.post.responses.409.description": "ProjectAlreadyStarted",
	"paths./projects/{projectId}/styleguides.post.responses.409.schema.$ref": "#/definitions/Error",
	"paths./projects/{projectId}/styleguides.post.security.length": 1,
	"paths./projects/{projectId}/styleguides.post.security[0].client_credentials.length": 0,
	"paths./projects/{projectId}/styleguides.post.summary": "Upload a new style guide",
	"paths./projects/{projectId}/styleguides.post.tags.length": 1,
	"paths./projects/{projectId}/styleguides.post.tags[0]": "Style Guide",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.delete.description": "Delete the style guide",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.delete.operationId": "deleteStyleGuide",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.delete.parameters.length": 2,
	"paths./projects/{projectId}/styleguides/{styleGuideId}.delete.parameters[0].description": "Project ID",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.delete.parameters[0].format": "int64",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.delete.parameters[0].in": "path",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.delete.parameters[0].name": "projectId",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.delete.parameters[0].required": true,
	"paths./projects/{projectId}/styleguides/{styleGuideId}.delete.parameters[0].type": "integer",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.delete.parameters[1].description": "Style Guide ID",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.delete.parameters[1].format": "int64",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.delete.parameters[1].in": "path",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.delete.parameters[1].name": "styleGuideId",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.delete.parameters[1].required": true,
	"paths./projects/{projectId}/styleguides/{styleGuideId}.delete.parameters[1].type": "integer",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.delete.responses.200.description": "Style guide deleted successfully",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.delete.responses.200.schema.properties.status.default": "success",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.delete.responses.200.schema.properties.status.type": "string",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.delete.responses.200.schema.type": "object",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.delete.responses.404.description": "StyleGuideNotFound",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.delete.responses.404.schema.$ref": "#/definitions/Error",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.delete.responses.409.description": "ProjectAlreadyStarted",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.delete.responses.409.schema.$ref": "#/definitions/Error",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.delete.security.length": 1,
	"paths./projects/{projectId}/styleguides/{styleGuideId}.delete.security[0].client_credentials.length": 0,
	"paths./projects/{projectId}/styleguides/{styleGuideId}.delete.summary": "Delete the style guide",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.delete.tags.length": 1,
	"paths./projects/{projectId}/styleguides/{styleGuideId}.delete.tags[0]": "Style Guide",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.get.description": "Get single style guide",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.get.operationId": "getStyleGuide",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.get.parameters.length": 2,
	"paths./projects/{projectId}/styleguides/{styleGuideId}.get.parameters[0].description": "Project ID",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.get.parameters[0].format": "int64",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.get.parameters[0].in": "path",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.get.parameters[0].name": "projectId",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.get.parameters[0].required": true,
	"paths./projects/{projectId}/styleguides/{styleGuideId}.get.parameters[0].type": "integer",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.get.parameters[1].description": "Style Guide ID",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.get.parameters[1].format": "int64",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.get.parameters[1].in": "path",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.get.parameters[1].name": "styleGuideId",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.get.parameters[1].required": true,
	"paths./projects/{projectId}/styleguides/{styleGuideId}.get.parameters[1].type": "integer",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.get.responses.200.description": "Style guide model",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.get.responses.200.schema.$ref": "#/definitions/StyleGuide",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.get.responses.404.description": "StyleGuideNotFound",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.get.responses.404.schema.$ref": "#/definitions/Error",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.get.security.length": 1,
	"paths./projects/{projectId}/styleguides/{styleGuideId}.get.security[0].client_credentials.length": 0,
	"paths./projects/{projectId}/styleguides/{styleGuideId}.get.summary": "Get single style guide",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.get.tags.length": 1,
	"paths./projects/{projectId}/styleguides/{styleGuideId}.get.tags[0]": "Style Guide",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.put.consumes.length": 2,
	"paths./projects/{projectId}/styleguides/{styleGuideId}.put.consumes[0]": "multipart/form-data",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.put.consumes[1]": "application/json",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.put.description": "Update the style guide. File name and contents will replaced with the new one.",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.put.operationId": "updateStyleGuide",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.put.parameters.length": 3,
	"paths./projects/{projectId}/styleguides/{styleGuideId}.put.parameters[0].description": "Project ID",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.put.parameters[0].format": "int64",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.put.parameters[0].in": "path",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.put.parameters[0].name": "projectId",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.put.parameters[0].required": true,
	"paths./projects/{projectId}/styleguides/{styleGuideId}.put.parameters[0].type": "integer",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.put.parameters[1].description": "Style guide ID",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.put.parameters[1].format": "int64",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.put.parameters[1].in": "path",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.put.parameters[1].name": "styleGuideId",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.put.parameters[1].required": true,
	"paths./projects/{projectId}/styleguides/{styleGuideId}.put.parameters[1].type": "integer",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.put.parameters[2].description": "Single file data. The name is plural to provide a consistent naming convention.",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.put.parameters[2].in": "formData",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.put.parameters[2].name": "styleguides",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.put.parameters[2].required": true,
	"paths./projects/{projectId}/styleguides/{styleGuideId}.put.parameters[2].type": "file",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.put.responses.200.description": "Updated style guide model",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.put.responses.200.schema.$ref": "#/definitions/StyleGuide",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.put.responses.400.description": "FileTooLarge",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.put.responses.400.schema.$ref": "#/definitions/Error",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.put.responses.404.description": "StyleGuideNotFound",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.put.responses.404.schema.$ref": "#/definitions/Error",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.put.responses.405.description": "UnsupportedStyleGuideFormat",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.put.responses.405.schema.$ref": "#/definitions/Error",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.put.responses.409.description": "ProjectAlreadyStarted",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.put.responses.409.schema.$ref": "#/definitions/Error",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.put.security.length": 1,
	"paths./projects/{projectId}/styleguides/{styleGuideId}.put.security[0].client_credentials.length": 0,
	"paths./projects/{projectId}/styleguides/{styleGuideId}.put.summary": "Update the style guide.",
	"paths./projects/{projectId}/styleguides/{styleGuideId}.put.tags.length": 1,
	"paths./projects/{projectId}/styleguides/{styleGuideId}.put.tags[0]": "Style Guide",
	"paths./projects/{projectId}/styleguides/{styleGuideId}/download.get.description": "Download a style guide",
	"paths./projects/{projectId}/styleguides/{styleGuideId}/download.get.operationId": "downloadStyleGuide",
	"paths./projects/{projectId}/styleguides/{styleGuideId}/download.get.parameters.length": 2,
	"paths./projects/{projectId}/styleguides/{styleGuideId}/download.get.parameters[0].description": "Project ID",
	"paths./projects/{projectId}/styleguides/{styleGuideId}/download.get.parameters[0].format": "int64",
	"paths./projects/{projectId}/styleguides/{styleGuideId}/download.get.parameters[0].in": "path",
	"paths./projects/{projectId}/styleguides/{styleGuideId}/download.get.parameters[0].name": "projectId",
	"paths./projects/{projectId}/styleguides/{styleGuideId}/download.get.parameters[0].required": true,
	"paths./projects/{projectId}/styleguides/{styleGuideId}/download.get.parameters[0].type": "integer",
	"paths./projects/{projectId}/styleguides/{styleGuideId}/download.get.parameters[1].description": "Style Guide ID",
	"paths./projects/{projectId}/styleguides/{styleGuideId}/download.get.parameters[1].format": "int64",
	"paths./projects/{projectId}/styleguides/{styleGuideId}/download.get.parameters[1].in": "path",
	"paths./projects/{projectId}/styleguides/{styleGuideId}/download.get.parameters[1].name": "styleGuideId",
	"paths./projects/{projectId}/styleguides/{styleGuideId}/download.get.parameters[1].required": true,
	"paths./projects/{projectId}/styleguides/{styleGuideId}/download.get.parameters[1].type": "integer",
	"paths./projects/{projectId}/styleguides/{styleGuideId}/download.get.responses.200.description": "Style guide streamed",
	"paths./projects/{projectId}/styleguides/{styleGuideId}/download.get.responses.200.schema.type": "string",
	"paths./projects/{projectId}/styleguides/{styleGuideId}/download.get.responses.404.description": "StyleGuideNotFound",
	"paths./projects/{projectId}/styleguides/{styleGuideId}/download.get.responses.404.schema.$ref": "#/definitions/Error",
	"paths./projects/{projectId}/styleguides/{styleGuideId}/download.get.security.length": 1,
	"paths./projects/{projectId}/styleguides/{styleGuideId}/download.get.security[0].client_credentials.length": 0,
	"paths./projects/{projectId}/styleguides/{styleGuideId}/download.get.summary": "Download a style guide",
	"paths./projects/{projectId}/styleguides/{styleGuideId}/download.get.tags.length": 1,
	"paths./projects/{projectId}/styleguides/{styleGuideId}/download.get.tags[0]": "Style Guide",
	"paths./styleguide.get.description": "Download your corporate account's global style guide. This endpoint is available only for corporate account customers.",
	"paths./styleguide.get.operationId": "downloadGlobalStyleGuide",
	"paths./styleguide.get.responses.200.description": "Style guide file streamed.",
	"paths./styleguide.get.responses.200.schema.type": "string",
	"paths./styleguide.get.responses.404.description": "StyleGuideNotFound",
	"paths./styleguide.get.responses.404.schema.$ref": "#/definitions/Error",
	"paths./styleguide.get.security.length": 1,
	"paths./styleguide.get.security[0].client_credentials.length": 0,
	"paths./styleguide.get.summary": "Download the global style guide.",
	"paths./styleguide.get.tags.length": 2,
	"paths./styleguide.get.tags[0]": "Account",
	"paths./styleguide.get.tags[1]": "Style Guide",
	"paths./styleguide.post.consumes.length": 2,
	"paths./styleguide.post.consumes[0]": "multipart/form-data",
	"paths./styleguide.post.consumes[1]": "application/json",
	"paths./styleguide.post.description": "Update your corporate account's global style guide. This endpoint is available only for corporate account customers.",
	"paths./styleguide.post.operationId": "updateGlobalStyleGuide",
	"paths./styleguide.post.parameters.length": 1,
	"paths./styleguide.post.parameters[0].description": "Style guide file. Currently supported formats: .pdf, .docx, .txt\n",
	"paths./styleguide.post.parameters[0].in": "formData",
	"paths./styleguide.post.parameters[0].name": "styleguide",
	"paths./styleguide.post.parameters[0].required": true,
	"paths./styleguide.post.parameters[0].type": "file",
	"paths./styleguide.post.responses.200.description": "Success response",
	"paths./styleguide.post.responses.200.schema.properties.status.default": "success",
	"paths./styleguide.post.responses.200.schema.properties.status.type": "string",
	"paths./styleguide.post.responses.200.schema.type": "object",
	"paths./styleguide.post.responses.400.description": "FileTooLarge FileTooSmall NoFileUploaded MissingCorporateAccount",
	"paths./styleguide.post.responses.400.schema.$ref": "#/definitions/Error",
	"paths./styleguide.post.responses.405.description": "UnsupportedStyleGuideFormat",
	"paths./styleguide.post.responses.405.schema.$ref": "#/definitions/Error",
	"paths./styleguide.post.security.length": 1,
	"paths./styleguide.post.security[0].client_credentials.length": 0,
	"paths./styleguide.post.summary": "Create or update the global style guide.",
	"paths./styleguide.post.tags.length": 2,
	"paths./styleguide.post.tags[0]": "Account",
	"paths./styleguide.post.tags[1]": "Style Guide",
	"paths./token.post.consumes.length": 2,
	"paths./token.post.consumes[0]": "multipart/form-data",
	"paths./token.post.consumes[1]": "application/json",
	"paths./token.post.description": "MotaWord API is using OAuth2 procedures when authenticating or authorizing your API call. Currently, we only allow Client Credential type flow.\n",
	"paths./token.post.operationId": "getAccessToken",
	"paths./token.post.parameters.length": 2,
	"paths./token.post.parameters[0].description": "OAuth2 grant type. Currently only 'client_credentials' available.",
	"paths./token.post.parameters[0].in": "formData",
	"paths./token.post.parameters[0].name": "grant_type",
	"paths./token.post.parameters[0].required": true,
	"paths./token.post.parameters[0].type": "string",
	"paths./token.post.parameters[1].description": "HTTP Basic Authorization header.",
	"paths./token.post.parameters[1].in": "header",
	"paths./token.post.parameters[1].name": "Authorization",
	"paths./token.post.parameters[1].required": true,
	"paths./token.post.parameters[1].type": "string",
	"paths./token.post.responses.200.description": "Authentication response",
	"paths./token.post.responses.200.schema.$ref": "#/definitions/Token",
	"paths./token.post.responses.default.description": "Authentication error",
	"paths./token.post.responses.default.schema.$ref": "#/definitions/Error",
	"paths./token.post.summary": "Retrieve an access token to interact with the API.",
	"paths./token.post.tags.length": 1,
	"paths./token.post.tags[0]": "Auth",
	"produces.length": 1,
	"produces[0]": "application/json",
	"schemes.length": 1,
	"schemes[0]": "https",
	"securityDefinitions.client_credentials.authorizationUrl": "https://api.motaword.com/token",
	"securityDefinitions.client_credentials.description": "OAuth2 authentication, Client Credentials flow.",
	"securityDefinitions.client_credentials.flow": "accessCode",
	"securityDefinitions.client_credentials.scopes.*": "*",
	"securityDefinitions.client_credentials.tokenUrl": "https://api.motaword.com/token",
	"securityDefinitions.client_credentials.type": "oauth2",
	"swagger": "2.0"
}