syntax = "proto3";

import "google/protobuf/empty.proto";

import "google/api/annotations.proto";

package ciscopsirtopenvuln;

message GetSecurityAdvisoriesCvrfAdvisoryAdvisory_idRequest {
    // advisory ID
    string advisory_id = 1;
}

message GetSecurityAdvisoriesCvrfCveCve_idRequest {
    // CVE Identifier (i.e., CVE-YYYY-NNNN)
    string cve_id = 1;
}

message GetSecurityAdvisoriesCvrfLatestNumberRequest {
    // An absolute number to obtain the latest security advisories.
    number number = 1;
}

message GetSecurityAdvisoriesCvrfProductRequest {
    // An product name to obtain security advisories that matches given product name.
    string product = 1;
}

message GetSecurityAdvisoriesCvrfSeveritySeverityRequest {
    // Critical, High, Medium, Low
    enum GetSecurityAdvisoriesCvrfSeveritySeverityRequest_Severity {
        GETSECURITYADVISORIESCVRFSEVERITYSEVERITYREQUEST_SEVERITY_CRITICAL = 0;
        GETSECURITYADVISORIESCVRFSEVERITYSEVERITYREQUEST_SEVERITY_HIGH = 1;
        GETSECURITYADVISORIESCVRFSEVERITYSEVERITYREQUEST_SEVERITY_MEDIUM = 2;
        GETSECURITYADVISORIESCVRFSEVERITYSEVERITYREQUEST_SEVERITY_LOW = 3;
    }
    GetSecurityAdvisoriesCvrfSeveritySeverityRequest_Severity severity = 1;
}

message GetSecurityAdvisoriesCvrfSeveritySeverityFirstpublishedRequest {
    string endDate = 1;
    // Used to obtain all advisories that have a security impact rating of critical
    enum GetSecurityAdvisoriesCvrfSeveritySeverityFirstpublishedRequest_Severity {
        GETSECURITYADVISORIESCVRFSEVERITYSEVERITYFIRSTPUBLISHEDREQUEST_SEVERITY_CRITICAL = 0;
        GETSECURITYADVISORIESCVRFSEVERITYSEVERITYFIRSTPUBLISHEDREQUEST_SEVERITY_HIGH = 1;
        GETSECURITYADVISORIESCVRFSEVERITYSEVERITYFIRSTPUBLISHEDREQUEST_SEVERITY_MEDIUM = 2;
        GETSECURITYADVISORIESCVRFSEVERITYSEVERITYFIRSTPUBLISHEDREQUEST_SEVERITY_LOW = 3;
    }
    GetSecurityAdvisoriesCvrfSeveritySeverityFirstpublishedRequest_Severity severity = 2;
    string startDate = 3;
}

message GetSecurityAdvisoriesCvrfSeveritySeverityLastpublishedRequest {
    string endDate = 1;
    // Used to obtain all advisories that have a security impact rating of critical
    enum GetSecurityAdvisoriesCvrfSeveritySeverityLastpublishedRequest_Severity {
        GETSECURITYADVISORIESCVRFSEVERITYSEVERITYLASTPUBLISHEDREQUEST_SEVERITY_CRITICAL = 0;
        GETSECURITYADVISORIESCVRFSEVERITYSEVERITYLASTPUBLISHEDREQUEST_SEVERITY_HIGH = 1;
        GETSECURITYADVISORIESCVRFSEVERITYSEVERITYLASTPUBLISHEDREQUEST_SEVERITY_MEDIUM = 2;
        GETSECURITYADVISORIESCVRFSEVERITYSEVERITYLASTPUBLISHEDREQUEST_SEVERITY_LOW = 3;
    }
    GetSecurityAdvisoriesCvrfSeveritySeverityLastpublishedRequest_Severity severity = 2;
    string startDate = 3;
}

message GetSecurityAdvisoriesCvrfYearYearRequest {
    // The four digit year.
    string year = 1;
}

message GetSecurityAdvisoriesIosRequest {
    // IOS version to obtain security advisories
    string version = 1;
}

message GetSecurityAdvisoriesIosxeRequest {
    // IOS version to obtain security advisories
    string version = 1;
}

message GetSecurityAdvisoriesOvalAdvisoryAdvisory_idRequest {
    // advisory ID
    string advisory_id = 1;
}

message GetSecurityAdvisoriesOvalCveCve_idRequest {
    // CVE Identifier (i.e., CVE-YYYY-NNNN)
    string cve_id = 1;
}

message GetSecurityAdvisoriesOvalLatestNumberRequest {
    // The latest OVAL definitions (absolute number).
    number number = 1;
}

message GetSecurityAdvisoriesOvalProductRequest {
    // An product name to obtain security advisories that matches given product name.
    string product = 1;
}

message GetSecurityAdvisoriesOvalSeveritySeverityRequest {
    // Used to obtain all OVAL definitions for advisories that have a security impact rating of critical
    enum GetSecurityAdvisoriesOvalSeveritySeverityRequest_Severity {
        GETSECURITYADVISORIESOVALSEVERITYSEVERITYREQUEST_SEVERITY_CRITICAL = 0;
        GETSECURITYADVISORIESOVALSEVERITYSEVERITYREQUEST_SEVERITY_HIGH = 1;
        GETSECURITYADVISORIESOVALSEVERITYSEVERITYREQUEST_SEVERITY_MEDIUM = 2;
        GETSECURITYADVISORIESOVALSEVERITYSEVERITYREQUEST_SEVERITY_LOW = 3;
    }
    GetSecurityAdvisoriesOvalSeveritySeverityRequest_Severity severity = 1;
}

message GetSecurityAdvisoriesOvalSeveritySeverityFirstpublishedRequest {
    string endDate = 1;
    // Critical, High, Medium, Low
    enum GetSecurityAdvisoriesOvalSeveritySeverityFirstpublishedRequest_Severity {
        GETSECURITYADVISORIESOVALSEVERITYSEVERITYFIRSTPUBLISHEDREQUEST_SEVERITY_CRITICAL = 0;
        GETSECURITYADVISORIESOVALSEVERITYSEVERITYFIRSTPUBLISHEDREQUEST_SEVERITY_HIGH = 1;
        GETSECURITYADVISORIESOVALSEVERITYSEVERITYFIRSTPUBLISHEDREQUEST_SEVERITY_MEDIUM = 2;
        GETSECURITYADVISORIESOVALSEVERITYSEVERITYFIRSTPUBLISHEDREQUEST_SEVERITY_LOW = 3;
    }
    GetSecurityAdvisoriesOvalSeveritySeverityFirstpublishedRequest_Severity severity = 2;
    string startDate = 3;
}

message GetSecurityAdvisoriesOvalSeveritySeverityLastpublishedRequest {
    string endDate = 1;
    // Critical, High, Medium, Low
    enum GetSecurityAdvisoriesOvalSeveritySeverityLastpublishedRequest_Severity {
        GETSECURITYADVISORIESOVALSEVERITYSEVERITYLASTPUBLISHEDREQUEST_SEVERITY_CRITICAL = 0;
        GETSECURITYADVISORIESOVALSEVERITYSEVERITYLASTPUBLISHEDREQUEST_SEVERITY_HIGH = 1;
        GETSECURITYADVISORIESOVALSEVERITYSEVERITYLASTPUBLISHEDREQUEST_SEVERITY_MEDIUM = 2;
        GETSECURITYADVISORIESOVALSEVERITYSEVERITYLASTPUBLISHEDREQUEST_SEVERITY_LOW = 3;
    }
    GetSecurityAdvisoriesOvalSeveritySeverityLastpublishedRequest_Severity severity = 2;
    string startDate = 3;
}

service CiscoPSIRTOpenVulnService {
    // Used to obtain an advisory in CVRF format for a given advisory ID `advisory_id` (i.e., cisco-sa-20150819-pcp)
    rpc GetSecurityAdvisoriesCvrfAdvisoryAdvisory_id(GetSecurityAdvisoriesCvrfAdvisoryAdvisory_idRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/security/advisories/cvrf/advisory/{advisory_id}"
      };
    }
    // Used to obtain all advisories in Common Vulnerability Reporting Format (CVRF). For more information about CVRF go to https://communities.cisco.com/docs/DOC-63156 . By default the output is in JSON. To obtain the output in XML use the .xml extension. For example, /advisories/cvrf/all.xml
    rpc GetSecurityAdvisoriesCvrfAll(google.protobuf.Empty) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/security/advisories/cvrf/all"
      };
    }
    // Used to obtain an advisory in CVRF format for a given Common Vulnerability Enumerator (CVE). The `cve_id` format is CVE-YYYY-NNNN. For more information about CVE visit http://cve.mitre.org/
    rpc GetSecurityAdvisoriesCvrfCveCve_id(GetSecurityAdvisoriesCvrfCveCve_idRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/security/advisories/cvrf/cve/{cve_id}"
      };
    }
    // Used to obtain all the latest security advisories in CVRF format given an absolute number. For instance, the latest 10 or latest 5.
    rpc GetSecurityAdvisoriesCvrfLatestNumber(GetSecurityAdvisoriesCvrfLatestNumberRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/security/advisories/cvrf/latest/{number}"
      };
    }
    // Used to obtain all the advisories that affects the given product name.
    rpc GetSecurityAdvisoriesCvrfProduct(GetSecurityAdvisoriesCvrfProductRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/security/advisories/cvrf/product"
      };
    }
    // Used to obtain all security advisories for a given security impact rating (critical, high, medium, or low) in CVRF format.
    rpc GetSecurityAdvisoriesCvrfSeveritySeverity(GetSecurityAdvisoriesCvrfSeveritySeverityRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/security/advisories/cvrf/severity/{severity}"
      };
    }
    // Used to obtain all security advisories for a given security impact rating (critical, high, medium, or low) in CVRF format and additionally filter based of firstpublished start date and enddate
    rpc GetSecurityAdvisoriesCvrfSeveritySeverityFirstpublished(GetSecurityAdvisoriesCvrfSeveritySeverityFirstpublishedRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/security/advisories/cvrf/severity/{severity}/firstpublished"
      };
    }
    // Used to obtain all security advisories for a given security impact rating (critical, high, medium, or low) in CVRF format.
    rpc GetSecurityAdvisoriesCvrfSeveritySeverityLastpublished(GetSecurityAdvisoriesCvrfSeveritySeverityLastpublishedRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/security/advisories/cvrf/severity/{severity}/lastpublished"
      };
    }
    // Used to obtain all security advisories that have were orginally published in a specific year `YYYY`.
    rpc GetSecurityAdvisoriesCvrfYearYear(GetSecurityAdvisoriesCvrfYearYearRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/security/advisories/cvrf/year/{year}"
      };
    }
    // Used to obtain all advisories that affects the given ios version
    rpc GetSecurityAdvisoriesIos(GetSecurityAdvisoriesIosRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/security/advisories/ios"
      };
    }
    // Used to obtain all advisories that affects the given ios version
    rpc GetSecurityAdvisoriesIosxe(GetSecurityAdvisoriesIosxeRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/security/advisories/iosxe"
      };
    }
    // Used to obtain OVAL definitions for a given advisory ID `advisory_id` (i.e., cisco-sa-20150819-pcp)
    rpc GetSecurityAdvisoriesOvalAdvisoryAdvisory_id(GetSecurityAdvisoriesOvalAdvisoryAdvisory_idRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/security/advisories/oval/advisory/{advisory_id}"
      };
    }
    // Used to obtain all Open Vulnerability and Assessment Language (OVAL) definitions available for Cisco security vulnerabilities. For more information about OVAL go to https://communities.cisco.com/docs/DOC-63158 . By default the output is in JSON. To obtain the output in XML use the .xml extension. For example, /advisories/oval/all.xml
    rpc GetSecurityAdvisoriesOvalAll(google.protobuf.Empty) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/security/advisories/oval/all"
      };
    }
    // Used to obtain OVAL definitions for a given CVE Identifier. The `cve_id` format is CVE-YYYY-NNNN.
    rpc GetSecurityAdvisoriesOvalCveCve_id(GetSecurityAdvisoriesOvalCveCve_idRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/security/advisories/oval/cve/{cve_id}"
      };
    }
    // Used to obtain all the latest OVAL definitions given an absolute number. For instance, the latest 10 or latest 5.
    rpc GetSecurityAdvisoriesOvalLatestNumber(GetSecurityAdvisoriesOvalLatestNumberRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/security/advisories/oval/latest/{number}"
      };
    }
    // Used to obtain all the oval advisories that affects the given product name.
    rpc GetSecurityAdvisoriesOvalProduct(GetSecurityAdvisoriesOvalProductRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/security/advisories/oval/product"
      };
    }
    // Used to obtain all OVAL definitions for a given security impact rating (critical, high, medium, or low).
    rpc GetSecurityAdvisoriesOvalSeveritySeverity(GetSecurityAdvisoriesOvalSeveritySeverityRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/security/advisories/oval/severity/{severity}"
      };
    }
    // Used to obtain all security advisories for a given security impact rating (critical, high, medium, or low) in OVAL format.
    rpc GetSecurityAdvisoriesOvalSeveritySeverityFirstpublished(GetSecurityAdvisoriesOvalSeveritySeverityFirstpublishedRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/security/advisories/oval/severity/{severity}/firstpublished"
      };
    }
    // Used to obtain all security advisories for a given security impact rating (critical, high, medium, or low) in OVAL format.
    rpc GetSecurityAdvisoriesOvalSeveritySeverityLastpublished(GetSecurityAdvisoriesOvalSeveritySeverityLastpublishedRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/security/advisories/oval/severity/{severity}/lastpublished"
      };
    }
}
